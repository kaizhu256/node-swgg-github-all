{"basePath":"/","definitions":{"BuiltinFile":{"properties":{"_id":{"readOnly":true,"type":"string"},"_timeCreated":{"format":"date-time","readOnly":true,"type":"string"},"_timeUpdated":{"format":"date-time","readOnly":true,"type":"string"},"fileBlob":{"format":"byte","type":"string"},"fileContentType":{"type":"string"},"fileDescription":{"type":"string"},"fileFilename":{"type":"string"},"fileInputName":{"type":"string"},"fileSize":{"minimum":0,"type":"integer"},"fileUrl":{"type":"string"},"id":{"type":"string"}}},"BuiltinJsonapiResponse":{"properties":{"data":{"items":{"type":"object"},"type":"array"},"errors":{"items":{"type":"object"},"type":"array"},"meta":{"type":"object"}}},"BuiltinUser":{"properties":{"_id":{"readOnly":true,"type":"string"},"_timeCreated":{"format":"date-time","readOnly":true,"type":"string"},"_timeUpdated":{"format":"date-time","readOnly":true,"type":"string"},"id":{"type":"string"},"jwtEncrypted":{"type":"string"},"password":{"format":"password","type":"string"},"username":{"type":"string"}}},"_2Fgists_20POST.body":{"properties":{"description":{"default":"the description for this gist","description":"A description of the gist.","type":"string","x-swgg-descriptionLineList":["A description of the gist."]},"files":{"$ref":"#/definitions/_2Fgists_20POST.body.files","type":"object","x-swgg-descriptionLineList":["**Required**. Files that make up this gist."]},"public":{"default":false,"description":"Indicates whether the gist is public. Default: ```false```","type":"boolean","x-swgg-descriptionLineList":["Indicates whether the gist is public. Default: ```false```"]}},"required":["files"],"x-swgg-tags0":"github-gists"},"_2Fgists_20POST.body.files":{"properties":{"file1.txt":{"default":{"content":"String file contents"},"description":"no description","type":"object"}},"x-swgg-tags0":"github-gists"},"_2Fgists_2F_7Bgist_id_7D_2Fcomments_20POST.body":{"properties":{"body":{"default":"Just commenting for the sake of commenting","description":"no description","type":"string"}},"x-swgg-tags0":"github-gists"},"_2Fgists_2F_7Bgist_id_7D_2Fcomments_2F_7Bid_7D_20PATCH.body":{"properties":{"body":{"default":"Just commenting for the sake of commenting","description":"no description","type":"string"}},"x-swgg-tags0":"github-gists"},"_2Fgists_2F_7Bid_7D_20PATCH.body":{"properties":{"content":{"description":"Updated file contents.","type":"string","x-swgg-descriptionLineList":["Updated file contents."]},"description":{"default":"the description for this gist","description":"A description of the gist.","type":"string","x-swgg-descriptionLineList":["A description of the gist."]},"filename":{"description":"New name for this file.","type":"string","x-swgg-descriptionLineList":["New name for this file."]},"files":{"$ref":"#/definitions/_2Fgists_2F_7Bid_7D_20PATCH.body.files","type":"object","x-swgg-descriptionLineList":["Files that make up this gist."]}},"x-swgg-tags0":"github-gists"},"_2Fgists_2F_7Bid_7D_20PATCH.body.files":{"properties":{"delete_this_file.txt":{"default":null,"description":"no description","type":"string"},"file1.txt":{"default":{"content":"updated file contents"},"description":"no description","type":"object"},"new_file.txt":{"default":{"content":"a new file"},"description":"no description","type":"object"},"old_name.txt":{"default":{"content":"modified contents","filename":"new_name.txt"},"description":"no description","type":"object"}},"x-swgg-tags0":"github-gists"},"_2Fmarkdown_20POST.body":{"properties":{"context":{"default":"github/gollum","description":"The repository context to use when creating references in ```gfm``` mode. Omit this parameter when using ```markdown``` mode.","type":"string","x-swgg-descriptionLineList":["The repository context to use when creating references in ```gfm``` mode. Omit this parameter when using ```markdown``` mode."]},"mode":{"default":"markdown","description":"The rendering mode. Can be either:\n* ```markdown``` to render a document in plain Markdown, just like README.md files are rendered.\n* ```gfm``` to render a document in [GitHub Flavored Markdown](https://github.github.com/gfm/), which creates links for user mentions as well as references to SHA-1 hashes, issues, and pull requests.\nDefault: ```markdown```","type":"string","x-swgg-descriptionLineList":["The rendering mode. Can be either:","* ```markdown``` to render a document in plain Markdown, just like README.md files are rendered.","* ```gfm``` to render a document in [GitHub Flavored Markdown](https://github.github.com/gfm/), which creates links for user mentions as well as references to SHA-1 hashes, issues, and pull requests.","Default: ```markdown```"]},"text":{"default":"Hello world github/linguist#1 **cool**, and #1!","description":"**Required**. The Markdown text to render in HTML. Markdown content must be 400 KB or less.","type":"string","x-swgg-descriptionLineList":["**Required**. The Markdown text to render in HTML. Markdown content must be 400 KB or less."]}},"required":["text"],"x-swgg-tags0":"github-misc"},"_2Forgs_2F_7Borg_7D_20PATCH.body":{"properties":{"billing_email":{"default":"support@github.com","description":"Billing email address. This address is not publicized.","type":"string","x-swgg-descriptionLineList":["Billing email address. This address is not publicized."]},"blog":{"default":"https://github.com/blog","description":"no description","type":"string"},"company":{"default":"GitHub","description":"The company name.","type":"string","x-swgg-descriptionLineList":["The company name."]},"default_repository_permission":{"default":"read","description":"Default permission level members have for organization repositories:\n* ```read``` - can pull, but not push to or administer this repository.\n* ```write``` - can pull and push, but not administer this repository.\n* ```admin``` - can pull, push, and administer this repository.\n* ```none``` - no permissions granted by default.\nDefault: ```read```","type":"string","x-swgg-descriptionLineList":["Default permission level members have for organization repositories:","* ```read``` - can pull, but not push to or administer this repository.","* ```write``` - can pull and push, but not administer this repository.","* ```admin``` - can pull, push, and administer this repository.","* ```none``` - no permissions granted by default.","Default: ```read```"]},"description":{"default":"GitHub, the company.","description":"The description of the company.","type":"string","x-swgg-descriptionLineList":["The description of the company."]},"email":{"default":"support@github.com","description":"The publicly visible email address.","type":"string","x-swgg-descriptionLineList":["The publicly visible email address."]},"has_organization_projects":{"description":"Toggles whether organization projects are enabled for the organization.","type":"boolean","x-swgg-descriptionLineList":["Toggles whether organization projects are enabled for the organization."]},"has_repository_projects":{"description":"Toggles whether repository projects are enabled for repositories that belong to the organization.","type":"boolean","x-swgg-descriptionLineList":["Toggles whether repository projects are enabled for repositories that belong to the organization."]},"location":{"default":"San Francisco","description":"The location.","type":"string","x-swgg-descriptionLineList":["The location."]},"members_can_create_repositories":{"default":true,"description":"Toggles ability of non-admin organization members to create repositories\n* ```true``` - all organization members can create repositories.\n* ```false``` - only admin members can create repositories.\nDefault: ```true```","type":"boolean","x-swgg-descriptionLineList":["Toggles ability of non-admin organization members to create repositories","* ```true``` - all organization members can create repositories.","* ```false``` - only admin members can create repositories.","Default: ```true```"]},"name":{"default":"github","description":"The shorthand name of the company.","type":"string","x-swgg-descriptionLineList":["The shorthand name of the company."]}},"x-swgg-tags0":"github-orgs"},"_2Forgs_2F_7Borg_7D_2Fhooks_20POST.body":{"properties":{"active":{"default":true,"description":"Determines if notifications are sent when the webhook is triggered. Set to ```true``` to send notifications. Default: ```true```.","type":"boolean","x-swgg-descriptionLineList":["Determines if notifications are sent when the webhook is triggered. Set to ```true``` to send notifications. Default: ```true```."]},"config":{"$ref":"#/definitions/_2Forgs_2F_7Borg_7D_2Fhooks_20POST.body.config","type":"object","x-swgg-descriptionLineList":["**Required**. Key/value pairs to provide settings for this webhook. [These are defined below](https://developer.github.com/v3/orgs/hooks/#create-hook-config-params)."]},"events":{"default":["push"],"description":"Determines what [events](https://developer.github.com/v3/activity/events/types/) the hook is triggered for.  Default: ```[\"push\"]```.","items":{"type":"string"},"type":"array","x-swgg-descriptionLineList":["Determines what [events](https://developer.github.com/v3/activity/events/types/) the hook is triggered for.  Default: ```[\"push\"]```."]},"name":{"default":"web","description":"**Required**. Must be passed as \"web\".","type":"string","x-swgg-descriptionLineList":["**Required**. Must be passed as \"web\"."]}},"required":["name","config"],"x-swgg-tags0":"github-orgs"},"_2Forgs_2F_7Borg_7D_2Fhooks_20POST.body.config":{"properties":{"content_type":{"default":"json","description":"no description","type":"string"},"url":{"default":"http://example.com/webhook","description":"no description","type":"string"}},"x-swgg-tags0":"github-orgs"},"_2Forgs_2F_7Borg_7D_2Fhooks_2F_7Bid_7D_20PATCH.body":{"properties":{"active":{"default":true,"description":"Determines if notifications are sent when the webhook is triggered. Set to ```true``` to send notifications. Default: ```true```.","type":"boolean","x-swgg-descriptionLineList":["Determines if notifications are sent when the webhook is triggered. Set to ```true``` to send notifications. Default: ```true```."]},"config":{"description":"**Required**. Key/value pairs to provide settings for this webhook. [These are defined below](https://developer.github.com/v3/orgs/hooks/#update-hook-config-params).","type":"object","x-swgg-descriptionLineList":["**Required**. Key/value pairs to provide settings for this webhook. [These are defined below](https://developer.github.com/v3/orgs/hooks/#update-hook-config-params)."]},"events":{"default":["push"],"description":"Determines what [events](https://developer.github.com/v3/activity/events/types/) the hook is triggered for.  Default: ```[\"push\"]```.","items":{"type":"string"},"type":"array","x-swgg-descriptionLineList":["Determines what [events](https://developer.github.com/v3/activity/events/types/) the hook is triggered for.  Default: ```[\"push\"]```."]}},"x-swgg-tags0":"github-orgs"},"_2Forgs_2F_7Borg_7D_2Finvitations_20POST.body":{"properties":{"email":{"default":"octocat@github.com","description":"**Required**. Email address of the person you are inviting, which can be an existing GitHub user. Not required if you provide ```invitee_id```.","type":"string","x-swgg-descriptionLineList":["**Required**. Email address of the person you are inviting, which can be an existing GitHub user. Not required if you provide ```invitee_id```."]},"invitee_id":{"description":"**Required**. GitHub user ID for the person you are inviting. Not required if you provide ```email```.","type":"integer","x-swgg-descriptionLineList":["**Required**. GitHub user ID for the person you are inviting. Not required if you provide ```email```."]},"role":{"default":"direct_member","description":"Specify role for new member. Can be one of:\n* ```admin``` - Organization owners with full administrative rights to the organization and complete access to all repositories and teams.\n* ```direct_member``` - Non-owner organization members with ability to see other members and join teams by invitation.\n* ```billing_manager``` - Non-owner organization members with ability to manage the billing settings of your organization.\n\nDefault: ```direct_member```.","enum":["admin","direct_member","billing_manager"],"type":"string","x-swgg-descriptionLineList":["Specify role for new member. Can be one of:","* ```admin``` - Organization owners with full administrative rights to the organization and complete access to all repositories and teams.","* ```direct_member``` - Non-owner organization members with ability to see other members and join teams by invitation.","* ```billing_manager``` - Non-owner organization members with ability to manage the billing settings of your organization.","","Default: ```direct_member```."]},"team_ids":{"default":[12,26],"description":"Specify IDs for the teams you want to invite new members to.","items":{"type":"number"},"type":"array","x-swgg-descriptionLineList":["Specify IDs for the teams you want to invite new members to."]}},"x-swgg-tags0":"github-orgs"},"_2Forgs_2F_7Borg_7D_2Fmigrations_20POST.body":{"properties":{"exclude_attachments":{"default":false,"description":"Indicates whether attachments should be excluded from the migration (to reduce migration archive file size). Default: ```false```.","type":"boolean","x-swgg-descriptionLineList":["Indicates whether attachments should be excluded from the migration (to reduce migration archive file size). Default: ```false```."]},"lock_repositories":{"default":false,"description":"Indicates whether repositories should be locked (to prevent manipulation) while migrating data. Default: ```false```.","type":"boolean","x-swgg-descriptionLineList":["Indicates whether repositories should be locked (to prevent manipulation) while migrating data. Default: ```false```."]},"repositories":{"default":["octocat/Hello-World"],"description":"no description","items":{"type":"string"},"type":"array"}},"x-swgg-tags0":"github-migration"},"_2Forgs_2F_7Borg_7D_2Fprojects_20POST.body":{"properties":{"body":{"default":"High-level roadmap for the upcoming year.","description":"no description","type":"string"},"name":{"default":"Organization Roadmap","description":"**Required**. The name of the project.","type":"string","x-swgg-descriptionLineList":["**Required**. The name of the project."]}},"required":["name"],"x-swgg-tags0":"github-projects"},"_2Fprojects_2F_7Bproject_id_7D_20PATCH.body":{"properties":{"body":{"default":"The board to track work for the Outcomes application.","description":"no description","type":"string"},"name":{"default":"Outcomes Tracker","description":"The name of the project.","type":"string","x-swgg-descriptionLineList":["The name of the project."]},"state":{"description":"State of the project. Either ```open``` or ```closed```.","type":"string","x-swgg-descriptionLineList":["State of the project. Either ```open``` or ```closed```."]}},"x-swgg-tags0":"github-projects"},"_2Fprojects_2Fcolumns_2F_7Bcolumn_id_7D_2Fmoves_20POST.body":{"properties":{"position":{"default":"after:3","description":"**Required**. Can be one of ```first```, ```last```, or ```after:&lt;column_id&gt;```, where ```&lt;column_id&gt;``` is the ```id``` value of a column in the same project.","type":"string","x-swgg-descriptionLineList":["**Required**. Can be one of ```first```, ```last```, or ```after:&lt;column_id&gt;```, where ```&lt;column_id&gt;``` is the ```id``` value of a column in the same project."]}},"required":["position"],"x-swgg-tags0":"github-projects"},"_2Fprojects_2Fcolumns_2Fcards_2F_7Bcard_id_7D_2Fmoves_20POST.body":{"properties":{"column_id":{"default":5,"description":"The ```id``` value of a column in the same project.","type":"integer","x-swgg-descriptionLineList":["The ```id``` value of a column in the same project."]},"position":{"default":"after:3","description":"**Required**. Can be one of ```top```, ```bottom```, or ```after:&lt;card_id&gt;```, where ```&lt;card_id&gt;``` is the ```id``` value of a card in the same column, or in the new column specified by ```column_id```.","type":"string","x-swgg-descriptionLineList":["**Required**. Can be one of ```top```, ```bottom```, or ```after:&lt;card_id&gt;```, where ```&lt;card_id&gt;``` is the ```id``` value of a card in the same column, or in the new column specified by ```column_id```."]}},"required":["position"],"x-swgg-tags0":"github-projects"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_20PATCH.body":{"properties":{"allow_merge_commit":{"default":true,"description":"Either ```true``` to allow merging pull requests with a merge commit, or ```false``` to prevent merging pull requests with merge commits. Default: ```true```","type":"boolean","x-swgg-descriptionLineList":["Either ```true``` to allow merging pull requests with a merge commit, or ```false``` to prevent merging pull requests with merge commits. Default: ```true```"]},"allow_rebase_merge":{"default":true,"description":"Either ```true``` to allow rebase-merging pull requests, or ```false``` to prevent rebase-merging. Default: ```true```","type":"boolean","x-swgg-descriptionLineList":["Either ```true``` to allow rebase-merging pull requests, or ```false``` to prevent rebase-merging. Default: ```true```"]},"allow_squash_merge":{"default":true,"description":"Either ```true``` to allow squash-merging pull requests, or ```false``` to prevent squash-merging. Default: ```true```","type":"boolean","x-swgg-descriptionLineList":["Either ```true``` to allow squash-merging pull requests, or ```false``` to prevent squash-merging. Default: ```true```"]},"archived":{"default":false,"description":"```true``` to archive this repository. **Note**: You cannot unarchive repositories through the API. Default: ```false```","type":"boolean","x-swgg-descriptionLineList":["```true``` to archive this repository. **Note**: You cannot unarchive repositories through the API. Default: ```false```"]},"default_branch":{"description":"Updates the default branch for this repository.","type":"string","x-swgg-descriptionLineList":["Updates the default branch for this repository."]},"description":{"default":"This is your first repository","description":"A short description of the repository.","type":"string","x-swgg-descriptionLineList":["A short description of the repository."]},"has_issues":{"default":true,"description":"Either ```true``` to enable issues for this repository or ```false``` to disable them. Default: ```true```.","type":"boolean","x-swgg-descriptionLineList":["Either ```true``` to enable issues for this repository or ```false``` to disable them. Default: ```true```."]},"has_projects":{"default":true,"description":"Either ```true``` to enable projects for this repository or ```false``` to disable them. Default: ```true```. **Note:** If you're creating a repository in an organization that has disabled repository projects, the default is ```false```, and if you pass ```true```, the API returns an error.","type":"boolean","x-swgg-descriptionLineList":["Either ```true``` to enable projects for this repository or ```false``` to disable them. Default: ```true```. **Note:** If you're creating a repository in an organization that has disabled repository projects, the default is ```false```, and if you pass ```true```, the API returns an error."]},"has_wiki":{"default":true,"description":"Either ```true``` to enable the wiki for this repository or ```false``` to disable it. Default: ```true```.","type":"boolean","x-swgg-descriptionLineList":["Either ```true``` to enable the wiki for this repository or ```false``` to disable it. Default: ```true```."]},"homepage":{"default":"https://github.com","description":"A URL with more information about the repository.","type":"string","x-swgg-descriptionLineList":["A URL with more information about the repository."]},"name":{"default":"Hello-World","description":"**Required**. The name of the repository.","type":"string","x-swgg-descriptionLineList":["**Required**. The name of the repository."]},"private":{"default":false,"description":"Either ```true``` to make the repository private or ```false``` to make it public. Creating private repositories requires a paid GitHub account.  Default: ```false```.\n**Note**: You will get a ```422``` error if the organization restricts [changing repository visibility](https://help.github.com/articles/repository-permission-levels-for-an-organization#changing-the-visibility-of-repositories) to organization owners and a non-owner tries to change the value of private.","type":"boolean","x-swgg-descriptionLineList":["Either ```true``` to make the repository private or ```false``` to make it public. Creating private repositories requires a paid GitHub account.  Default: ```false```.","**Note**: You will get a ```422``` error if the organization restricts [changing repository visibility](https://help.github.com/articles/repository-permission-levels-for-an-organization#changing-the-visibility-of-repositories) to organization owners and a non-owner tries to change the value of private."]}},"required":["name"],"x-swgg-tags0":"github-repos"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fbranches_2F_7Bbranch_7D_2Fprotection_20PUT.body":{"properties":{"enforce_admins":{"default":true,"description":"**Required**. Enforce all configured restrictions for administrators. Set to ```true``` to enforce required status checks for repository administrators. Set to ```null``` to disable.","type":"boolean","x-swgg-descriptionLineList":["**Required**. Enforce all configured restrictions for administrators. Set to ```true``` to enforce required status checks for repository administrators. Set to ```null``` to disable."]},"required_pull_request_reviews":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fbranches_2F_7Bbranch_7D_2Fprotection_20PUT.body.required_pull_request_reviews","type":"object","x-swgg-descriptionLineList":["**Required**. Require at least one approving review on a pull request, before merging. Set to ```null``` to disable."]},"required_status_checks":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fbranches_2F_7Bbranch_7D_2Fprotection_20PUT.body.required_status_checks","type":"object","x-swgg-descriptionLineList":["**Required**. Require status checks to pass before merging. Set to ```null``` to disable."]},"restrictions":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fbranches_2F_7Bbranch_7D_2Fprotection_20PUT.body.restrictions","type":"object","x-swgg-descriptionLineList":["**Required**. Restrict who can push to this branch. Team and user ```restrictions``` are only available for organization-owned repositories. Set to ```null``` to disable."]}},"required":["required_status_checks","enforce_admins","required_pull_request_reviews","restrictions"],"x-swgg-tags0":"github-repos"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fbranches_2F_7Bbranch_7D_2Fprotection_20PUT.body.required_pull_request_reviews":{"properties":{"dismiss_stale_reviews":{"default":true,"description":"no description","type":"boolean"},"dismissal_restrictions":{"default":{"teams":["justice-league"],"users":["octocat"]},"description":"no description","type":"object"},"require_code_owner_reviews":{"default":true,"description":"no description","type":"boolean"},"required_approving_review_count":{"default":2,"description":"no description","type":"number"}},"x-swgg-tags0":"github-repos"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fbranches_2F_7Bbranch_7D_2Fprotection_20PUT.body.required_status_checks":{"properties":{"contexts":{"default":["continuous-integration/travis-ci"],"description":"no description","items":{"type":"string"},"type":"array"},"strict":{"default":true,"description":"no description","type":"boolean"}},"x-swgg-tags0":"github-repos"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fbranches_2F_7Bbranch_7D_2Fprotection_20PUT.body.restrictions":{"properties":{"teams":{"default":["justice-league"],"description":"no description","items":{"type":"string"},"type":"array"},"users":{"default":["octocat"],"description":"no description","items":{"type":"string"},"type":"array"}},"x-swgg-tags0":"github-repos"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fbranches_2F_7Bbranch_7D_2Fprotection_2Frequired_pull_request_reviews_20PATCH.body":{"properties":{"dismiss_stale_reviews":{"default":true,"description":"Set to ```true``` if you want to automatically dismiss approving reviews when someone pushes a new commit.","type":"boolean","x-swgg-descriptionLineList":["Set to ```true``` if you want to automatically dismiss approving reviews when someone pushes a new commit."]},"dismissal_restrictions":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fbranches_2F_7Bbranch_7D_2Fprotection_2Frequired_pull_request_reviews_20PATCH.body.dismissal_restrictions","type":"object","x-swgg-descriptionLineList":["Specify which users and teams can dismiss pull request reviews. Pass an empty ```dismissal_restrictions``` object to disable. User and team ```dismissal_restrictions``` are only available for organization-owned repositories. Omit this parameter for personal repositories."]},"require_code_owner_reviews":{"default":true,"description":"Blocks merging pull requests until code owners have reviewed.","type":"boolean","x-swgg-descriptionLineList":["Blocks merging pull requests until code owners have reviewed."]},"required_approving_review_count":{"default":2,"description":"Specifies the number of reviewers required to approve pull requests. Use a number between 1 and 6.","type":"integer","x-swgg-descriptionLineList":["Specifies the number of reviewers required to approve pull requests. Use a number between 1 and 6."]}},"x-swgg-tags0":"github-repos"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fbranches_2F_7Bbranch_7D_2Fprotection_2Frequired_pull_request_reviews_20PATCH.body.dismissal_restrictions":{"properties":{"teams":{"default":["justice-league"],"description":"no description","items":{"type":"string"},"type":"array"},"users":{"default":["octocat"],"description":"no description","items":{"type":"string"},"type":"array"}},"x-swgg-tags0":"github-repos"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fbranches_2F_7Bbranch_7D_2Fprotection_2Frequired_status_checks_20PATCH.body":{"properties":{"contexts":{"default":["continuous-integration/travis-ci"],"description":"The list of status checks to require in order to merge into this branch","items":{"type":"string"},"type":"array","x-swgg-descriptionLineList":["The list of status checks to require in order to merge into this branch"]},"strict":{"default":true,"description":"Require branches to be up to date before merging.","type":"boolean","x-swgg-descriptionLineList":["Require branches to be up to date before merging."]}},"x-swgg-tags0":"github-repos"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fcomments_2F_7Bid_7D_20PATCH.body":{"properties":{"body":{"default":"Nice change","description":"no description","type":"string"}},"x-swgg-tags0":"github-repos"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fcomments_2F_7Bid_7D_2Freactions_20POST.body":{"properties":{"content":{"default":"heart","description":"**Required**. The [reaction type](https://developer.github.com/v3/reactions/#reaction-types) to add to the commit comment.","type":"string","x-swgg-descriptionLineList":["**Required**. The [reaction type](https://developer.github.com/v3/reactions/#reaction-types) to add to the commit comment."]}},"required":["content"],"x-swgg-tags0":"github-reactions"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fcommits_2F_7Bsha_7D_2Fcomments_20POST.body":{"properties":{"body":{"default":"Great stuff","description":"no description","type":"string"},"line":{"default":null,"description":"**Deprecated**. Use **position** parameter instead. Line number in the file to comment on.","type":"integer","x-swgg-descriptionLineList":["**Deprecated**. Use **position** parameter instead. Line number in the file to comment on."]},"path":{"default":"file1.txt","description":"Relative path of the file to comment on.","type":"string","x-swgg-descriptionLineList":["Relative path of the file to comment on."]},"position":{"default":4,"description":"Line index in the diff to comment on.","type":"integer","x-swgg-descriptionLineList":["Line index in the diff to comment on."]}},"x-swgg-tags0":"github-repos"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fcontents_2F_7Bpath_7D_20DELETE.body":{"properties":{"branch":{"default":"master","description":"The branch name. Default: the repository’s default branch (usually ```master```)","type":"string","x-swgg-descriptionLineList":["The branch name. Default: the repository’s default branch (usually ```master```)"]},"committer":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fcontents_2F_7Bpath_7D_20DELETE.body.committer"},"message":{"default":"my commit message","description":"**Required**. The commit message.","type":"string","x-swgg-descriptionLineList":["**Required**. The commit message."]},"sha":{"default":"329688480d39049927147c162b9d2deaf885005f","description":"**Required**. The blob SHA of the file being replaced.","type":"string","x-swgg-descriptionLineList":["**Required**. The blob SHA of the file being replaced."]}},"required":["message","sha"],"x-swgg-tags0":"github-repos"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fcontents_2F_7Bpath_7D_20DELETE.body.committer":{"properties":{"email":{"default":"schacon@gmail.com","description":"no description","type":"string"},"name":{"default":"Scott Chacon","description":"no description","type":"string"}},"x-swgg-tags0":"github-repos"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fcontents_2F_7Bpath_7D_20PUT.body":{"properties":{"branch":{"default":"master","description":"The branch name. Default: the repository’s default branch (usually ```master```)","type":"string","x-swgg-descriptionLineList":["The branch name. Default: the repository’s default branch (usually ```master```)"]},"committer":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fcontents_2F_7Bpath_7D_20PUT.body.committer"},"content":{"default":"bXkgbmV3IGZpbGUgY29udGVudHM=","description":"**Required**. The new file content, Base64 encoded.","type":"string","x-swgg-descriptionLineList":["**Required**. The new file content, Base64 encoded."]},"message":{"default":"my commit message","description":"**Required**. The commit message.","type":"string","x-swgg-descriptionLineList":["**Required**. The commit message."]}},"required":["message","content"],"x-swgg-tags0":"github-repos"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fcontents_2F_7Bpath_7D_20PUT.body.committer":{"properties":{"email":{"default":"schacon@gmail.com","description":"no description","type":"string"},"name":{"default":"Scott Chacon","description":"no description","type":"string"}},"x-swgg-tags0":"github-repos"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fcontents_2F_7Bpath_7D_231_20PUT.body":{"properties":{"branch":{"default":"master","description":"The branch name. Default: the repository’s default branch (usually ```master```)","type":"string","x-swgg-descriptionLineList":["The branch name. Default: the repository’s default branch (usually ```master```)"]},"committer":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fcontents_2F_7Bpath_7D_231_20PUT.body.committer"},"content":{"default":"bXkgdXBkYXRlZCBmaWxlIGNvbnRlbnRz","description":"**Required**. The updated file content, Base64 encoded.","type":"string","x-swgg-descriptionLineList":["**Required**. The updated file content, Base64 encoded."]},"message":{"default":"my commit message","description":"**Required**. The commit message.","type":"string","x-swgg-descriptionLineList":["**Required**. The commit message."]},"sha":{"default":"329688480d39049927147c162b9d2deaf885005f","description":"**Required**. The blob SHA of the file being replaced.","type":"string","x-swgg-descriptionLineList":["**Required**. The blob SHA of the file being replaced."]}},"required":["message","content","sha"],"x-swgg-tags0":"github-repos"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fcontents_2F_7Bpath_7D_231_20PUT.body.committer":{"properties":{"email":{"default":"schacon@gmail.com","description":"no description","type":"string"},"name":{"default":"Scott Chacon","description":"no description","type":"string"}},"x-swgg-tags0":"github-repos"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fdeployments_2F_7Bid_7D_2Fstatuses_20POST.body":{"properties":{"auto_inactive":{"default":true,"description":"Adds a new ```inactive``` status to all non-transient, non-production environment deployments with the same repository and environment name as the created status's deployment. Default: ```true``` **This parameter requires a custom media type to be specified. Please see more in the alert below.**","type":"boolean","x-swgg-descriptionLineList":["Adds a new ```inactive``` status to all non-transient, non-production environment deployments with the same repository and environment name as the created status's deployment. Default: ```true``` **This parameter requires a custom media type to be specified. Please see more in the alert below.**"]},"description":{"default":"Deployment finished successfully.","description":"A short description of the status. Maximum length of 140 characters. Default: ```\"\"```","type":"string","x-swgg-descriptionLineList":["A short description of the status. Maximum length of 140 characters. Default: ```\"\"```"]},"environment_url":{"description":"Sets the URL for accessing your environment. Default: ```\"\"``` **This parameter requires a custom media type to be specified. Please see more in the alert below.**","type":"string","x-swgg-descriptionLineList":["Sets the URL for accessing your environment. Default: ```\"\"``` **This parameter requires a custom media type to be specified. Please see more in the alert below.**"]},"log_url":{"description":"This is functionally equivalent to ```target_url```. We will continue accept ```target_url``` to support legacy uses, but we recommend modifying this to the new name to avoid confusion. Default: ```\"\"``` **This parameter requires a custom media type to be specified. Please see more in the alert below.**","type":"string","x-swgg-descriptionLineList":["This is functionally equivalent to ```target_url```. We will continue accept ```target_url``` to support legacy uses, but we recommend modifying this to the new name to avoid confusion. Default: ```\"\"``` **This parameter requires a custom media type to be specified. Please see more in the alert below.**"]},"state":{"default":"success","description":"**Required**. The state of the status. Can be one of ```error```, ```failure```, ```inactive```, ```pending```, or ```success```. **The ```inactive``` state requires a custom media type to be specified. Please see more in the alert below.**","enum":["error","failure","inactive","pending","success"],"type":"string","x-swgg-descriptionLineList":["**Required**. The state of the status. Can be one of ```error```, ```failure```, ```inactive```, ```pending```, or ```success```. **The ```inactive``` state requires a custom media type to be specified. Please see more in the alert below.**"]},"target_url":{"default":"https://example.com/deployment/42/output","description":"The target URL to associate with this status.  This URL should contain output to keep the user updated while the task is running or serve as historical information for what happened in the deployment. Default: ```\"\"```","type":"string","x-swgg-descriptionLineList":["The target URL to associate with this status.  This URL should contain output to keep the user updated while the task is running or serve as historical information for what happened in the deployment. Default: ```\"\"```"]}},"required":["state"],"x-swgg-tags0":"github-repos"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Fblobs_20POST.body":{"properties":{"content":{"default":"Content of the blob","description":"**Required**. The new blob's content.","type":"string","x-swgg-descriptionLineList":["**Required**. The new blob's content."]},"encoding":{"default":"utf-8","description":"The encoding used for ```content```. Currently, ```utf-8``` and ```base64``` are supported. Default: ```utf-8```.","type":"string","x-swgg-descriptionLineList":["The encoding used for ```content```. Currently, ```utf-8``` and ```base64``` are supported. Default: ```utf-8```."]}},"required":["content"],"x-swgg-tags0":"github-git"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Fcommits_20POST.body":{"properties":{"author":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Fcommits_20POST.body.author"},"message":{"default":"my commit message","description":"**Required**. The commit message","type":"string","x-swgg-descriptionLineList":["**Required**. The commit message"]},"parents":{"default":["7d1b31e74ee336d15cbd21741bc88a537ed063a0"],"description":"no description","items":{"type":"string"},"type":"array"},"signature":{"default":"-----BEGIN PGP SIGNATURE-----\n\niQIzBAABAQAdFiEESn/54jMNIrGSE6Tp6cQjvhfv7nAFAlnT71cACgkQ6cQjvhfv\n7nCWwA//XVqBKWO0zF+bZl6pggvky3Oc2j1pNFuRWZ29LXpNuD5WUGXGG209B0hI\nDkmcGk19ZKUTnEUJV2Xd0R7AW01S/YSub7OYcgBkI7qUE13FVHN5ln1KvH2all2n\n2+JCV1HcJLEoTjqIFZSSu/sMdhkLQ9/NsmMAzpf/iIM0nQOyU4YRex9eD1bYj6nA\nOQPIDdAuaTQj1gFPHYLzM4zJnCqGdRlg0sOM/zC5apBNzIwlgREatOYQSCfCKV7k\nnrU34X8b9BzQaUx48Qa+Dmfn5KQ8dl27RNeWAqlkuWyv3pUauH9UeYW+KyuJeMkU\n+NyHgAsWFaCFl23kCHThbLStMZOYEnGagrd0hnm1TPS4GJkV4wfYMwnI4KuSlHKB\njHl3Js9vNzEUQipQJbgCgTiWvRJoK3ENwBTMVkKHaqT4x9U4Jk/XZB6Q8MA09ezJ\n3QgiTjTAGcum9E9QiJqMYdWQPWkaBIRRz5cET6HPB48YNXAAUsfmuYsGrnVLYbG+\nUpC6I97VybYHTy2O9XSGoaLeMI9CsFn38ycAxxbWagk5mhclNTP5mezIq6wKSwmr\nX11FW3n1J23fWZn5HJMBsRnUCgzqzX3871IqLYHqRJ/bpZ4h20RhTyPj5c/z7QXp\neSakNQMfbbMcljkha+ZMuVQX1K9aRlVqbmv3ZMWh+OijLYVU2bc=\n=5Io4\n-----END PGP SIGNATURE-----\n","description":"no description","type":"string"},"tree":{"default":"827efc6d56897b048c772eb4087f854f46256132","description":"**Required**. The SHA of the tree object this commit points to","type":"string","x-swgg-descriptionLineList":["**Required**. The SHA of the tree object this commit points to"]}},"required":["message","tree"],"x-swgg-tags0":"github-git"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Fcommits_20POST.body.author":{"properties":{"date":{"default":"2008-07-09T16:13:30+12:00","description":"no description","type":"string"},"email":{"default":"schacon@gmail.com","description":"no description","type":"string"},"name":{"default":"Scott Chacon","description":"no description","type":"string"}},"x-swgg-tags0":"github-git"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Frefs_20POST.body":{"properties":{"ref":{"default":"refs/heads/featureA","description":"**Required**. The name of the fully qualified reference (ie: ```refs/heads/master```). If it doesn't start with 'refs' and have at least two slashes, it will be rejected.","type":"string","x-swgg-descriptionLineList":["**Required**. The name of the fully qualified reference (ie: ```refs/heads/master```). If it doesn't start with 'refs' and have at least two slashes, it will be rejected."]},"sha":{"default":"aa218f56b14c9653891f9e74264a383fa43fefbd","description":"**Required**. The SHA1 value to set this reference to","type":"string","x-swgg-descriptionLineList":["**Required**. The SHA1 value to set this reference to"]}},"required":["ref","sha"],"x-swgg-tags0":"github-git"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Frefs_2F_7Bref_7D_20PATCH.body":{"properties":{"force":{"default":false,"description":"Indicates whether to force the update or to make sure the update is a fast-forward update. Leaving this out or setting it to ```false``` will make sure you're not overwriting work. Default: ```false```","type":"boolean","x-swgg-descriptionLineList":["Indicates whether to force the update or to make sure the update is a fast-forward update. Leaving this out or setting it to ```false``` will make sure you're not overwriting work. Default: ```false```"]},"sha":{"default":"aa218f56b14c9653891f9e74264a383fa43fefbd","description":"**Required**. The SHA1 value to set this reference to","type":"string","x-swgg-descriptionLineList":["**Required**. The SHA1 value to set this reference to"]}},"required":["sha"],"x-swgg-tags0":"github-git"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Ftags_20POST.body":{"properties":{"message":{"default":"initial version\n","description":"The tag message","type":"string","x-swgg-descriptionLineList":["The tag message"]},"object":{"default":"c3d0be41ecbe669545ee3e94d31ed9a4bc91ee3c","description":"The SHA of the git object this is tagging","type":"string","x-swgg-descriptionLineList":["The SHA of the git object this is tagging"]},"tag":{"default":"v0.0.1","description":"The tag","type":"string","x-swgg-descriptionLineList":["The tag"]},"tagger":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Ftags_20POST.body.tagger","type":"object","x-swgg-descriptionLineList":["An object with information about the individual creating the tag."]},"type":{"default":"commit","description":"The type of the object we're tagging. Normally this is a ```commit``` but it can also be a ```tree``` or a ```blob```.","type":"string","x-swgg-descriptionLineList":["The type of the object we're tagging. Normally this is a ```commit``` but it can also be a ```tree``` or a ```blob```."]}},"x-swgg-tags0":"github-git"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Ftags_20POST.body.tagger":{"properties":{"date":{"default":"2011-06-17T14:53:35-07:00","description":"no description","type":"string"},"email":{"default":"schacon@gmail.com","description":"no description","type":"string"},"name":{"default":"Scott Chacon","description":"no description","type":"string"}},"x-swgg-tags0":"github-git"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Ftrees_20POST.body":{"properties":{"base_tree":{"default":"9fb037999f264ba9a7fc6274d15fa3ae2ab98312","description":"The SHA1 of the tree you want to update with new data. If you don't set this, the commit will be created on top of everything; however, it will only contain your change, the rest of your files will show up as deleted.","type":"string","x-swgg-descriptionLineList":["The SHA1 of the tree you want to update with new data. If you don't set this, the commit will be created on top of everything; however, it will only contain your change, the rest of your files will show up as deleted."]},"tree":{"default":[{"mode":"100644","path":"file.rb","sha":"44b4fc6d56897b048c772eb4087f854f46256132","type":"blob"}],"description":"no description","items":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Ftrees_20POST.body.tree"},"type":"array"}},"x-swgg-tags0":"github-git"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Ftrees_20POST.body.tree":{"properties":{"mode":{"default":"100644","description":"no description","type":"string"},"path":{"default":"file.rb","description":"no description","type":"string"},"sha":{"default":"44b4fc6d56897b048c772eb4087f854f46256132","description":"no description","type":"string"},"type":{"default":"blob","description":"no description","type":"string"}},"x-swgg-tags0":"github-git"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fhooks_20POST.body":{"properties":{"active":{"default":true,"description":"Determines if notifications are sent when the webhook is triggered. Set to ```true``` to send notifications. Default: ```true```.","type":"boolean","x-swgg-descriptionLineList":["Determines if notifications are sent when the webhook is triggered. Set to ```true``` to send notifications. Default: ```true```."]},"config":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fhooks_20POST.body.config","type":"object","x-swgg-descriptionLineList":["**Required**. Key/value pairs to provide settings for this webhook. [These are defined below](https://developer.github.com/v3/repos/hooks/#create-hook-config-params)."]},"events":{"default":["push"],"description":"Determines what [events](https://developer.github.com/v3/activity/events/types/) the hook is triggered for.  Default: ```[\"push\"]```","items":{"type":"string"},"type":"array","x-swgg-descriptionLineList":["Determines what [events](https://developer.github.com/v3/activity/events/types/) the hook is triggered for.  Default: ```[\"push\"]```"]},"name":{"default":"web","description":"**Required**. Must be passed as \"web\".","type":"string","x-swgg-descriptionLineList":["**Required**. Must be passed as \"web\"."]}},"required":["name","config"],"x-swgg-tags0":"github-repos"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fhooks_20POST.body.config":{"properties":{"content_type":{"default":"json","description":"no description","type":"string"},"url":{"default":"http://example.com/webhook","description":"no description","type":"string"}},"x-swgg-tags0":"github-repos"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fhooks_2F_7Bid_7D_20PATCH.body":{"properties":{"active":{"default":true,"description":"Determines if notifications are sent when the webhook is triggered. Set to ```true``` to send notifications. Default: ```true```.","type":"boolean","x-swgg-descriptionLineList":["Determines if notifications are sent when the webhook is triggered. Set to ```true``` to send notifications. Default: ```true```."]},"add_events":{"default":["pull_request"],"description":"Determines a list of events to be added to the list of events that the Hook triggers for.","items":{"type":"string"},"type":"array","x-swgg-descriptionLineList":["Determines a list of events to be added to the list of events that the Hook triggers for."]},"config":{"description":"**Required**. Key/value pairs to provide settings for this webhook. [These are defined below](https://developer.github.com/v3/repos/hooks/#create-hook-config-params).","type":"object","x-swgg-descriptionLineList":["**Required**. Key/value pairs to provide settings for this webhook. [These are defined below](https://developer.github.com/v3/repos/hooks/#create-hook-config-params)."]},"events":{"default":["push"],"description":"Determines what [events](https://developer.github.com/v3/activity/events/types/) the hook is triggered for. This replaces the entire array of events.  Default: ```[\"push\"]```","items":{"type":"string"},"type":"array","x-swgg-descriptionLineList":["Determines what [events](https://developer.github.com/v3/activity/events/types/) the hook is triggered for. This replaces the entire array of events.  Default: ```[\"push\"]```"]},"remove_events":{"description":"Determines a list of events to be removed from the list of events that the Hook triggers for.","items":{"type":"string"},"type":"array","x-swgg-descriptionLineList":["Determines a list of events to be removed from the list of events that the Hook triggers for."]}},"x-swgg-tags0":"github-repos"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fimport_20PATCH.body":{"properties":{"vcs_password":{"default":"secret","description":"The password to provide to the originating repository.","type":"string","x-swgg-descriptionLineList":["The password to provide to the originating repository."]},"vcs_username":{"default":"octocat","description":"The username to provide to the originating repository.","type":"string","x-swgg-descriptionLineList":["The username to provide to the originating repository."]}},"x-swgg-tags0":"github-migration"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fimport_20PUT.body":{"properties":{"tfvc_project":{"description":"For a tfvc import, the name of the project that is being imported.","type":"string","x-swgg-descriptionLineList":["For a tfvc import, the name of the project that is being imported."]},"vcs":{"default":"subversion","description":"The originating VCS type. Can be one of ```subversion```, ```git```, ```mercurial```, or ```tfvc```. Please be aware that without this parameter, the import job will take additional time to detect the VCS type before beginning the import. This detection step will be reflected in the response.","enum":["subversion","git","mercurial","tfvc"],"type":"string","x-swgg-descriptionLineList":["The originating VCS type. Can be one of ```subversion```, ```git```, ```mercurial```, or ```tfvc```. Please be aware that without this parameter, the import job will take additional time to detect the VCS type before beginning the import. This detection step will be reflected in the response."]},"vcs_password":{"default":"secret","description":"If authentication is required, the password to provide to ```vcs_url```.","type":"string","x-swgg-descriptionLineList":["If authentication is required, the password to provide to ```vcs_url```."]},"vcs_url":{"default":"http://svn.mycompany.com/svn/myproject","description":"**Required** The URL of the originating repository.","type":"string","x-swgg-descriptionLineList":["**Required** The URL of the originating repository."]},"vcs_username":{"default":"octocat","description":"If authentication is required, the username to provide to ```vcs_url```.","type":"string","x-swgg-descriptionLineList":["If authentication is required, the username to provide to ```vcs_url```."]}},"required":["vcs_url"],"x-swgg-tags0":"github-migration"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fimport_2Fauthors_2F_7Bauthor_id_7D_20PATCH.body":{"properties":{"email":{"default":"hubot@github.com","description":"The new Git author email.","type":"string","x-swgg-descriptionLineList":["The new Git author email."]},"name":{"default":"Hubot the Robot","description":"The new Git author name.","type":"string","x-swgg-descriptionLineList":["The new Git author name."]}},"x-swgg-tags0":"github-migration"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fimport_2Flfs_20PATCH.body":{"properties":{"use_lfs":{"default":"opt_in","description":"**Required** Can be one of ```opt_in``` (large files will be stored using Git LFS) or ```opt_out``` (large files will be removed during the import).","enum":["opt_in","opt_out"],"type":"string","x-swgg-descriptionLineList":["**Required** Can be one of ```opt_in``` (large files will be stored using Git LFS) or ```opt_out``` (large files will be removed during the import)."]}},"required":["use_lfs"],"x-swgg-tags0":"github-migration"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fissues_20POST.body":{"properties":{"assignee":{"description":"Login for the user that this issue should be assigned to. NOTE: Only users with push access can set the assignee for new issues. The assignee is silently dropped otherwise. **This field is deprecated.**","type":"string","x-swgg-descriptionLineList":["Login for the user that this issue should be assigned to. NOTE: Only users with push access can set the assignee for new issues. The assignee is silently dropped otherwise. **This field is deprecated.**"]},"assignees":{"default":["octocat"],"description":"no description","items":{"type":"string"},"type":"array"},"body":{"default":"I'm having a problem with this.","description":"no description","type":"string"},"labels":{"default":["bug"],"description":"no description","items":{"type":"string"},"type":"array"},"milestone":{"default":1,"description":"The ```number``` of the milestone to associate this issue with. NOTE: Only users with push access can set the milestone for new issues. The milestone is silently dropped otherwise.","type":"integer","x-swgg-descriptionLineList":["The ```number``` of the milestone to associate this issue with. NOTE: Only users with push access can set the milestone for new issues. The milestone is silently dropped otherwise."]},"title":{"default":"Found a bug","description":"**Required**. The title of the issue.","type":"string","x-swgg-descriptionLineList":["**Required**. The title of the issue."]}},"required":["title"],"x-swgg-tags0":"github-issues"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fissues_2F_7Bnumber_7D_20PATCH.body":{"properties":{"assignee":{"description":"Login for the user that this issue should be assigned to. **This field is deprecated.**","type":"string","x-swgg-descriptionLineList":["Login for the user that this issue should be assigned to. **This field is deprecated.**"]},"assignees":{"default":["octocat"],"description":"no description","items":{"type":"string"},"type":"array"},"body":{"default":"I'm having a problem with this.","description":"no description","type":"string"},"labels":{"default":["bug"],"description":"no description","items":{"type":"string"},"type":"array"},"milestone":{"default":1,"description":"The ```number``` of the milestone to associate this issue with or ```null``` to remove current. NOTE: Only users with push access can set the milestone for issues. The milestone is silently dropped otherwise.","type":"integer","x-swgg-descriptionLineList":["The ```number``` of the milestone to associate this issue with or ```null``` to remove current. NOTE: Only users with push access can set the milestone for issues. The milestone is silently dropped otherwise."]},"state":{"default":"open","description":"State of the issue. Either ```open``` or ```closed```.","type":"string","x-swgg-descriptionLineList":["State of the issue. Either ```open``` or ```closed```."]},"title":{"default":"Found a bug","description":"The title of the issue.","type":"string","x-swgg-descriptionLineList":["The title of the issue."]}},"x-swgg-tags0":"github-issues"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fissues_2F_7Bnumber_7D_2Fassignees_20DELETE.body":{"properties":{"assignees":{"default":["hubot","other_user"],"description":"no description","items":{"type":"string"},"type":"array"}},"x-swgg-tags0":"github-issues"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fissues_2F_7Bnumber_7D_2Fassignees_20POST.body":{"properties":{"assignees":{"default":["hubot","other_user"],"description":"no description","items":{"type":"string"},"type":"array"}},"x-swgg-tags0":"github-issues"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fissues_2F_7Bnumber_7D_2Fcomments_20POST.body":{"properties":{"body":{"default":"Me too","description":"no description","type":"string"}},"x-swgg-tags0":"github-issues"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fissues_2F_7Bnumber_7D_2Flock_20PUT.body":{"properties":{"active_lock_reason":{"default":"too heated","description":"no description","type":"string"},"lock_reason":{"description":"The reason for locking the issue or pull request conversation. Lock will fail if you don't use one of these reasons:\n* ```off-topic```\n* ```too heated```\n* ```resolved```\n* ```spam```","type":"string","x-swgg-descriptionLineList":["The reason for locking the issue or pull request conversation. Lock will fail if you don't use one of these reasons:","* ```off-topic```","* ```too heated```","* ```resolved```","* ```spam```"]},"locked":{"default":true,"description":"no description","type":"boolean"}},"x-swgg-tags0":"github-issues"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fissues_2F_7Bnumber_7D_2Freactions_20POST.body":{"properties":{"content":{"default":"heart","description":"**Required**. The [reaction type](https://developer.github.com/v3/reactions/#reaction-types) to add to the issue.","type":"string","x-swgg-descriptionLineList":["**Required**. The [reaction type](https://developer.github.com/v3/reactions/#reaction-types) to add to the issue."]}},"required":["content"],"x-swgg-tags0":"github-reactions"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fissues_2Fcomments_2F_7Bid_7D_20PATCH.body":{"properties":{"body":{"default":"Me too","description":"no description","type":"string"}},"x-swgg-tags0":"github-issues"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fissues_2Fcomments_2F_7Bid_7D_2Freactions_20POST.body":{"properties":{"content":{"default":"heart","description":"**Required**. The [reaction type](https://developer.github.com/v3/reactions/#reaction-types) to add to the issue comment.","type":"string","x-swgg-descriptionLineList":["**Required**. The [reaction type](https://developer.github.com/v3/reactions/#reaction-types) to add to the issue comment."]}},"required":["content"],"x-swgg-tags0":"github-reactions"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fkeys_20POST.body":{"properties":{"key":{"default":"ssh-rsa AAA...","description":"The contents of the key.","type":"string","x-swgg-descriptionLineList":["The contents of the key."]},"read_only":{"default":true,"description":"If ```true```, the key will only be able to read repository contents. Otherwise, the key will be able to read and write.","type":"boolean","x-swgg-descriptionLineList":["If ```true```, the key will only be able to read repository contents. Otherwise, the key will be able to read and write."]},"title":{"default":"octocat@octomac","description":"A name for the key.","type":"string","x-swgg-descriptionLineList":["A name for the key."]}},"x-swgg-tags0":"github-repos"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Flabels_20POST.body":{"properties":{"color":{"default":"f29513","description":"**Required**.  The [hexadecimal color code](http://www.color-hex.com/) for the label, without the leading ```#```.","type":"string","x-swgg-descriptionLineList":["**Required**.  The [hexadecimal color code](http://www.color-hex.com/) for the label, without the leading ```#```."]},"description":{"default":"Houston, we have a problem","description":"A short description of the label.","type":"string","x-swgg-descriptionLineList":["A short description of the label."]},"name":{"default":"bug","description":"**Required**. The name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing ```:strawberry:``` will render the emoji . For a full list of available emoji and codes, see [emoji-cheat-sheet.com](http://emoji-cheat-sheet.com/).","type":"string","x-swgg-descriptionLineList":["**Required**. The name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing ```:strawberry:``` will render the emoji . For a full list of available emoji and codes, see [emoji-cheat-sheet.com](http://emoji-cheat-sheet.com/)."]}},"required":["name","color"],"x-swgg-tags0":"github-issues"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Flabels_2F_7Bname_7D_20PATCH.body":{"properties":{"color":{"default":"b01f26","description":"The [hexadecimal color code](http://www.color-hex.com/) for the label, without the leading ```#```.","type":"string","x-swgg-descriptionLineList":["The [hexadecimal color code](http://www.color-hex.com/) for the label, without the leading ```#```."]},"description":{"default":"Small bug fix required","description":"A short description of the label.","type":"string","x-swgg-descriptionLineList":["A short description of the label."]},"name":{"default":"bug :bug:","description":"no description","type":"string"}},"x-swgg-tags0":"github-issues"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fmilestones_20POST.body":{"properties":{"description":{"default":"Tracking milestone for version 1.0","description":"A description of the milestone.","type":"string","x-swgg-descriptionLineList":["A description of the milestone."]},"due_on":{"default":"2012-10-09T23:39:01Z","description":"The milestone due date. This is a timestamp in ISO 8601 format: ```YYYY-MM-DDTHH:MM:SSZ```.","type":"string","x-swgg-descriptionLineList":["The milestone due date. This is a timestamp in ISO 8601 format: ```YYYY-MM-DDTHH:MM:SSZ```."]},"state":{"default":"open","description":"The state of the milestone. Either ```open``` or ```closed```. Default: ```open```","type":"string","x-swgg-descriptionLineList":["The state of the milestone. Either ```open``` or ```closed```. Default: ```open```"]},"title":{"default":"v1.0","description":"**Required**. The title of the milestone.","type":"string","x-swgg-descriptionLineList":["**Required**. The title of the milestone."]}},"required":["title"],"x-swgg-tags0":"github-issues"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fmilestones_2F_7Bnumber_7D_20PATCH.body":{"properties":{"description":{"default":"Tracking milestone for version 1.0","description":"A description of the milestone.","type":"string","x-swgg-descriptionLineList":["A description of the milestone."]},"due_on":{"default":"2012-10-09T23:39:01Z","description":"The milestone due date. This is a timestamp in ISO 8601 format: ```YYYY-MM-DDTHH:MM:SSZ```.","type":"string","x-swgg-descriptionLineList":["The milestone due date. This is a timestamp in ISO 8601 format: ```YYYY-MM-DDTHH:MM:SSZ```."]},"state":{"default":"open","description":"The state of the milestone. Either ```open``` or ```closed```. Default: ```open```","type":"string","x-swgg-descriptionLineList":["The state of the milestone. Either ```open``` or ```closed```. Default: ```open```"]},"title":{"default":"v1.0","description":"The title of the milestone.","type":"string","x-swgg-descriptionLineList":["The title of the milestone."]}},"x-swgg-tags0":"github-issues"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fprojects_20POST.body":{"properties":{"body":{"default":"Developer documentation project for the developer site.","description":"no description","type":"string"},"name":{"default":"Projects Documentation","description":"**Required**. The name of the project.","type":"string","x-swgg-descriptionLineList":["**Required**. The name of the project."]}},"required":["name"],"x-swgg-tags0":"github-projects"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpulls_20POST.body":{"properties":{"base":{"default":"master","description":"**Required**. The name of the branch you want the changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repository that requests a merge to a base of another repository.","type":"string","x-swgg-descriptionLineList":["**Required**. The name of the branch you want the changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repository that requests a merge to a base of another repository."]},"body":{"default":"Please pull this in!","description":"no description","type":"string"},"head":{"default":"octocat:new-feature","description":"**Required**. The name of the branch where your changes are implemented. For cross-repository pull requests in the same network, namespace ```head``` with a user like this: ```username:branch```.","type":"string","x-swgg-descriptionLineList":["**Required**. The name of the branch where your changes are implemented. For cross-repository pull requests in the same network, namespace ```head``` with a user like this: ```username:branch```."]},"maintainer_can_modify":{"description":"Indicates whether [maintainers can modify](https://help.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/) the pull request.","type":"boolean","x-swgg-descriptionLineList":["Indicates whether [maintainers can modify](https://help.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/) the pull request."]},"title":{"default":"Amazing new feature","description":"**Required**. The title of the pull request.","type":"string","x-swgg-descriptionLineList":["**Required**. The title of the pull request."]}},"required":["title","head","base"],"x-swgg-tags0":"github-pulls"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpulls_2F_7Bnumber_7D_20PATCH.body":{"properties":{"base":{"default":"master","description":"The name of the branch you want your changes pulled into. This should be an existing branch on the current repository. You cannot update the base branch on a pull request to point to another repository.","type":"string","x-swgg-descriptionLineList":["The name of the branch you want your changes pulled into. This should be an existing branch on the current repository. You cannot update the base branch on a pull request to point to another repository."]},"body":{"default":"updated body","description":"no description","type":"string"},"maintainer_can_modify":{"description":"Indicates whether [maintainers can modify](https://help.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/) the pull request.","type":"boolean","x-swgg-descriptionLineList":["Indicates whether [maintainers can modify](https://help.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/) the pull request."]},"state":{"default":"open","description":"State of this Pull Request. Either ```open``` or ```closed```.","type":"string","x-swgg-descriptionLineList":["State of this Pull Request. Either ```open``` or ```closed```."]},"title":{"default":"new title","description":"The title of the pull request.","type":"string","x-swgg-descriptionLineList":["The title of the pull request."]}},"x-swgg-tags0":"github-pulls"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpulls_2F_7Bnumber_7D_2Fcomments_20POST.body":{"properties":{"body":{"default":"Nice change","description":"no description","type":"string"},"commit_id":{"default":"6dcb09b5b57875f334f61aebed695e2e4193db5e","description":"**Required**. The SHA of the commit needing a comment. Not using the latest commit SHA may render your comment outdated if a subsequent commit modifies the line you specify as the ```position```.","type":"string","x-swgg-descriptionLineList":["**Required**. The SHA of the commit needing a comment. Not using the latest commit SHA may render your comment outdated if a subsequent commit modifies the line you specify as the ```position```."]},"path":{"default":"file1.txt","description":"**Required**. The relative path to the file that necessitates a comment.","type":"string","x-swgg-descriptionLineList":["**Required**. The relative path to the file that necessitates a comment."]},"position":{"default":4,"description":"**Required**. The position in the diff where you want to add a review comment. Note this value is not the same as the line number in the file. For help finding the position value, read the note below.","type":"integer","x-swgg-descriptionLineList":["**Required**. The position in the diff where you want to add a review comment. Note this value is not the same as the line number in the file. For help finding the position value, read the note below."]}},"required":["commit_id","path","position"],"x-swgg-tags0":"github-pulls"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpulls_2F_7Bnumber_7D_2Frequested_reviewers_20DELETE.body":{"properties":{"reviewers":{"default":["octocat","hubot","other_user"],"description":"no description","items":{"type":"string"},"type":"array"},"team_reviewers":{"default":["justice-league"],"description":"no description","items":{"type":"string"},"type":"array"}},"x-swgg-tags0":"github-pulls"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpulls_2F_7Bnumber_7D_2Frequested_reviewers_20POST.body":{"properties":{"reviewers":{"default":["octocat","hubot","other_user"],"description":"no description","items":{"type":"string"},"type":"array"},"team_reviewers":{"default":["justice-league"],"description":"no description","items":{"type":"string"},"type":"array"}},"x-swgg-tags0":"github-pulls"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpulls_2F_7Bnumber_7D_2Freviews_20POST.body":{"properties":{"body":{"default":"This is close to perfect! Please address the suggested inline change.","description":"no description","type":"string"},"comments":{"default":[{"body":"Please add more information here, and fix this typo.","path":"file.md","position":6}],"description":"no description","items":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpulls_2F_7Bnumber_7D_2Freviews_20POST.body.comments"},"type":"array"},"commit_id":{"default":"ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091","description":"The SHA of the commit that needs a review. Not using the latest commit SHA may render your review comment outdated if a subsequent commit modifies the line you specify as the ```position```. Defaults to the most recent commit in the pull request when you do not specify a value.","type":"string","x-swgg-descriptionLineList":["The SHA of the commit that needs a review. Not using the latest commit SHA may render your review comment outdated if a subsequent commit modifies the line you specify as the ```position```. Defaults to the most recent commit in the pull request when you do not specify a value."]},"event":{"default":"REQUEST_CHANGES","description":"The review action you want to perform. The review actions include: ```APPROVE```, ```REQUEST_CHANGES```, or ```COMMENT```. By leaving this blank, you set the review action state to ```PENDING```, which means you will need to [submit the pull request review](https://developer.github.com/v3/pulls/reviews/#submit-a-pull-request-review) when you are ready.","type":"string","x-swgg-descriptionLineList":["The review action you want to perform. The review actions include: ```APPROVE```, ```REQUEST_CHANGES```, or ```COMMENT```. By leaving this blank, you set the review action state to ```PENDING```, which means you will need to [submit the pull request review](https://developer.github.com/v3/pulls/reviews/#submit-a-pull-request-review) when you are ready."]}},"x-swgg-tags0":"github-pulls"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpulls_2F_7Bnumber_7D_2Freviews_20POST.body.comments":{"properties":{"body":{"default":"Please add more information here, and fix this typo.","description":"no description","type":"string"},"path":{"default":"file.md","description":"no description","type":"string"},"position":{"default":6,"description":"no description","type":"number"}},"x-swgg-tags0":"github-pulls"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpulls_2Fcomments_2F_7Bid_7D_20PATCH.body":{"properties":{"body":{"default":"Nice change","description":"no description","type":"string"}},"x-swgg-tags0":"github-pulls"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpulls_2Fcomments_2F_7Bid_7D_2Freactions_20POST.body":{"properties":{"content":{"default":"heart","description":"**Required**. The [reaction type](https://developer.github.com/v3/reactions/#reaction-types) to add to the pull request review comment.","type":"string","x-swgg-descriptionLineList":["**Required**. The [reaction type](https://developer.github.com/v3/reactions/#reaction-types) to add to the pull request review comment."]}},"required":["content"],"x-swgg-tags0":"github-reactions"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Freleases_20POST.body":{"properties":{"body":{"default":"Description of the release","description":"no description","type":"string"},"draft":{"default":false,"description":"```true``` to create a draft (unpublished) release, ```false``` to create a published one. Default: ```false```","type":"boolean","x-swgg-descriptionLineList":["```true``` to create a draft (unpublished) release, ```false``` to create a published one. Default: ```false```"]},"name":{"default":"v1.0.0","description":"The name of the release.","type":"string","x-swgg-descriptionLineList":["The name of the release."]},"prerelease":{"default":false,"description":"```true``` to identify the release as a prerelease. ```false``` to identify the release as a full release. Default: ```false```","type":"boolean","x-swgg-descriptionLineList":["```true``` to identify the release as a prerelease. ```false``` to identify the release as a full release. Default: ```false```"]},"tag_name":{"default":"v1.0.0","description":"**Required**. The name of the tag.","type":"string","x-swgg-descriptionLineList":["**Required**. The name of the tag."]},"target_commitish":{"default":"master","description":"Specifies the commitish value that determines where the Git tag is created from.  Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository's default branch (usually ```master```).","type":"string","x-swgg-descriptionLineList":["Specifies the commitish value that determines where the Git tag is created from.  Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository's default branch (usually ```master```)."]}},"required":["tag_name"],"x-swgg-tags0":"github-repos"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Freleases_2F_7Bid_7D_20PATCH.body":{"properties":{"body":{"default":"Description of the release","description":"no description","type":"string"},"draft":{"default":false,"description":"```true``` makes the release a draft, and ```false``` publishes the release.","type":"boolean","x-swgg-descriptionLineList":["```true``` makes the release a draft, and ```false``` publishes the release."]},"name":{"default":"v1.0.0","description":"The name of the release.","type":"string","x-swgg-descriptionLineList":["The name of the release."]},"prerelease":{"default":false,"description":"```true``` to identify the release as a prerelease, ```false``` to identify the release as a full release.","type":"boolean","x-swgg-descriptionLineList":["```true``` to identify the release as a prerelease, ```false``` to identify the release as a full release."]},"tag_name":{"default":"v1.0.0","description":"The name of the tag.","type":"string","x-swgg-descriptionLineList":["The name of the tag."]},"target_commitish":{"default":"master","description":"Specifies the commitish value that determines where the Git tag is created from.  Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository's default branch (usually ```master```).","type":"string","x-swgg-descriptionLineList":["Specifies the commitish value that determines where the Git tag is created from.  Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository's default branch (usually ```master```)."]}},"x-swgg-tags0":"github-repos"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Freleases_2Fassets_2F_7Bid_7D_20PATCH.body":{"properties":{"label":{"default":"Mac binary","description":"An alternate short description of the asset. Used in place of the filename.","type":"string","x-swgg-descriptionLineList":["An alternate short description of the asset. Used in place of the filename."]},"name":{"default":"foo-1.0.0-osx.zip","description":"The file name of the asset.","type":"string","x-swgg-descriptionLineList":["The file name of the asset."]}},"x-swgg-tags0":"github-repos"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fstatuses_2F_7Bsha_7D_20POST.body":{"properties":{"context":{"default":"default","description":"A string label to differentiate this status from the status of other systems. Default: ```default```","type":"string","x-swgg-descriptionLineList":["A string label to differentiate this status from the status of other systems. Default: ```default```"]},"description":{"default":"The build succeeded!","description":"A short description of the status.","type":"string","x-swgg-descriptionLineList":["A short description of the status."]},"state":{"default":"success","description":"**Required**. The state of the status. Can be one of ```error```, ```failure```, ```pending```, or ```success```.","enum":["error","failure","pending","success"],"type":"string","x-swgg-descriptionLineList":["**Required**. The state of the status. Can be one of ```error```, ```failure```, ```pending```, or ```success```."]},"target_url":{"default":"https://example.com/build/status","description":"The target URL to associate with this status.  This URL will be linked from the GitHub UI to allow users to easily see the source of the status.\nFor example, if your continuous integration system is posting build status, you would want to provide the deep link for the build output for this specific SHA:\n```http://ci.example.com/user/repo/build/sha```","type":"string","x-swgg-descriptionLineList":["The target URL to associate with this status.  This URL will be linked from the GitHub UI to allow users to easily see the source of the status.","For example, if your continuous integration system is posting build status, you would want to provide the deep link for the build output for this specific SHA:","```http://ci.example.com/user/repo/build/sha```"]}},"required":["state"],"x-swgg-tags0":"github-repos"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Ftopics_20PUT.body":{"properties":{"names":{"default":["octocat","atom","electron","API"],"description":"no description","items":{"type":"string"},"type":"array"}},"x-swgg-tags0":"github-repos"},"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Ftransfer_20POST.body":{"properties":{"new_owner":{"default":"github","description":"**Required:** The username or organization name the repository will be transferred to.","type":"string","x-swgg-descriptionLineList":["**Required:** The username or organization name the repository will be transferred to."]},"team_id":{"default":[12,345],"description":"no description","items":{"type":"number"},"type":"array"}},"x-swgg-tags0":"github-repos"},"_2Fteams_2F_7Bid_7D_20PATCH.body":{"properties":{"description":{"default":"new team description","description":"The description of the team.","type":"string","x-swgg-descriptionLineList":["The description of the team."]},"name":{"default":"new team name","description":"**Required**. The name of the team.","type":"string","x-swgg-descriptionLineList":["**Required**. The name of the team."]},"parent_team_id":{"description":"The ID of a team to set as the parent team. **Note**: You must pass the ```hellcat-preview``` media type to use this parameter.","type":"integer","x-swgg-descriptionLineList":["The ID of a team to set as the parent team. **Note**: You must pass the ```hellcat-preview``` media type to use this parameter."]},"permission":{"description":"**Deprecated**. The permission that new repositories will be added to the team with when none is specified. Can be one of:\n* ```pull``` - team members can pull, but not push to or administer newly-added repositories.\n* ```push``` - team members can pull and push, but not administer newly-added repositories.\n* ```admin``` - team members can pull, push and administer newly-added repositories.\nDefault: ```pull```","enum":["pull","push","admin"],"type":"string","x-swgg-descriptionLineList":["**Deprecated**. The permission that new repositories will be added to the team with when none is specified. Can be one of:","* ```pull``` - team members can pull, but not push to or administer newly-added repositories.","* ```push``` - team members can pull and push, but not administer newly-added repositories.","* ```admin``` - team members can pull, push and administer newly-added repositories.","Default: ```pull```"]},"privacy":{"default":"closed","description":"The level of privacy this team should have. Editing teams without specifying this parameter leaves ```privacy``` intact. The options are:\n**For a non-nested team:**\n* ```secret``` - only visible to organization owners and members of this team.\n* ```closed``` - visible to all members of this organization.\n**For a parent or child team:**\n* ```closed``` - visible to all members of this organization.","type":"string","x-swgg-descriptionLineList":["The level of privacy this team should have. Editing teams without specifying this parameter leaves ```privacy``` intact. The options are:","**For a non-nested team:**","* ```secret``` - only visible to organization owners and members of this team.","* ```closed``` - visible to all members of this organization.","**For a parent or child team:**","* ```closed``` - visible to all members of this organization."]}},"required":["name"],"x-swgg-tags0":"github-teams"},"_2Fteams_2F_7Bteam_id_7D_2Fdiscussions_20POST.body":{"properties":{"body":{"default":"Hi! This is an area for us to collaborate as a team.","description":"no description","type":"string"},"private":{"description":"Private posts are only visible to team members, organization owners, and team maintainers. Public posts are visible to all members of the organization. Set to ```true``` to create a private post.\nDefault: ```false```","type":"boolean","x-swgg-descriptionLineList":["Private posts are only visible to team members, organization owners, and team maintainers. Public posts are visible to all members of the organization. Set to ```true``` to create a private post.","Default: ```false```"]},"title":{"default":"Our first team post","description":"**Required**. The discussion post's title.","type":"string","x-swgg-descriptionLineList":["**Required**. The discussion post's title."]}},"required":["title"],"x-swgg-tags0":"github-teams"},"_2Fteams_2F_7Bteam_id_7D_2Fdiscussions_2F_7Bdiscussion_number_7D_20PATCH.body":{"properties":{"title":{"default":"Welcome to our first team post","description":"The discussion post's title.","type":"string","x-swgg-descriptionLineList":["The discussion post's title."]}},"x-swgg-tags0":"github-teams"},"_2Fteams_2F_7Bteam_id_7D_2Fdiscussions_2F_7Bdiscussion_number_7D_2Fcomments_20POST.body":{"properties":{"body":{"default":"Do you like apples?","description":"no description","type":"string"}},"x-swgg-tags0":"github-teams"},"_2Fteams_2F_7Bteam_id_7D_2Fdiscussions_2F_7Bdiscussion_number_7D_2Fcomments_2F_7Bcomment_number_7D_20PATCH.body":{"properties":{"body":{"default":"Do you like pineapples?","description":"no description","type":"string"}},"x-swgg-tags0":"github-teams"},"_2Fteams_2F_7Bteam_id_7D_2Fdiscussions_2F_7Bdiscussion_number_7D_2Fcomments_2F_7Bcomment_number_7D_2Freactions_20POST.body":{"properties":{"content":{"default":"heart","description":"**Required**. The [reaction type](https://developer.github.com/v3/reactions/#reaction-types) to add to the team discussion comment.","type":"string","x-swgg-descriptionLineList":["**Required**. The [reaction type](https://developer.github.com/v3/reactions/#reaction-types) to add to the team discussion comment."]}},"required":["content"],"x-swgg-tags0":"github-reactions"},"_2Fteams_2F_7Bteam_id_7D_2Fdiscussions_2F_7Bdiscussion_number_7D_2Freactions_20POST.body":{"properties":{"content":{"default":"heart","description":"**Required**. The [reaction type](https://developer.github.com/v3/reactions/#reaction-types) to add to the team discussion.","type":"string","x-swgg-descriptionLineList":["**Required**. The [reaction type](https://developer.github.com/v3/reactions/#reaction-types) to add to the team discussion."]}},"required":["content"],"x-swgg-tags0":"github-reactions"},"_2Fuser_20PATCH.body":{"properties":{"bio":{"default":"There once...","description":"The new short biography of the user.","type":"string","x-swgg-descriptionLineList":["The new short biography of the user."]},"blog":{"default":"https://github.com/blog","description":"The new blog URL of the user.","type":"string","x-swgg-descriptionLineList":["The new blog URL of the user."]},"company":{"default":"GitHub","description":"The new company of the user.","type":"string","x-swgg-descriptionLineList":["The new company of the user."]},"email":{"default":"octocat@github.com","description":"The publicly visible email address of the user.","type":"string","x-swgg-descriptionLineList":["The publicly visible email address of the user."]},"hireable":{"default":true,"description":"The new hiring availability of the user.","type":"boolean","x-swgg-descriptionLineList":["The new hiring availability of the user."]},"location":{"default":"San Francisco","description":"The new location of the user.","type":"string","x-swgg-descriptionLineList":["The new location of the user."]},"name":{"default":"monalisa octocat","description":"The new name of the user.","type":"string","x-swgg-descriptionLineList":["The new name of the user."]}},"x-swgg-tags0":"github-users"},"_2Fuser_2Fgpg_keys_20POST.body":{"properties":{"armored_public_key":{"default":"-----BEGIN PGP PUBLIC KEY BLOCK-----\n...\n-----END PGP PUBLIC KEY BLOCK-----","description":"no description","type":"string"}},"x-swgg-tags0":"github-users"},"_2Fuser_2Fkeys_20POST.body":{"properties":{"key":{"default":"ssh-rsa AAA...","description":"no description","type":"string"},"title":{"default":"octocat@octomac","description":"no description","type":"string"}},"x-swgg-tags0":"github-users"},"_2Fuser_2Fmemberships_2Forgs_2F_7Borg_7D_20PATCH.body":{"properties":{"state":{"default":"active","description":"**Required**. The state that the membership should be in. Only ```active``` will be accepted.","type":"string","x-swgg-descriptionLineList":["**Required**. The state that the membership should be in. Only ```active``` will be accepted."]}},"required":["state"],"x-swgg-tags0":"github-orgs"},"_2Fuser_2Frepos_20POST.body":{"properties":{"allow_merge_commit":{"default":true,"description":"Either ```true``` to allow merging pull requests with a merge commit, or ```false``` to prevent merging pull requests with merge commits. Default: ```true```","type":"boolean","x-swgg-descriptionLineList":["Either ```true``` to allow merging pull requests with a merge commit, or ```false``` to prevent merging pull requests with merge commits. Default: ```true```"]},"allow_rebase_merge":{"default":true,"description":"Either ```true``` to allow rebase-merging pull requests, or ```false``` to prevent rebase-merging. Default: ```true```","type":"boolean","x-swgg-descriptionLineList":["Either ```true``` to allow rebase-merging pull requests, or ```false``` to prevent rebase-merging. Default: ```true```"]},"allow_squash_merge":{"default":true,"description":"Either ```true``` to allow squash-merging pull requests, or ```false``` to prevent squash-merging. Default: ```true```","type":"boolean","x-swgg-descriptionLineList":["Either ```true``` to allow squash-merging pull requests, or ```false``` to prevent squash-merging. Default: ```true```"]},"auto_init":{"default":false,"description":"Pass ```true``` to create an initial commit with empty README. Default: ```false```.","type":"boolean","x-swgg-descriptionLineList":["Pass ```true``` to create an initial commit with empty README. Default: ```false```."]},"description":{"default":"This is your first repository","description":"A short description of the repository.","type":"string","x-swgg-descriptionLineList":["A short description of the repository."]},"gitignore_template":{"description":"Desired language or platform [.gitignore template](https://github.com/github/gitignore) to apply. Use the name of the template without the extension. For example, \"Haskell\".","type":"string","x-swgg-descriptionLineList":["Desired language or platform [.gitignore template](https://github.com/github/gitignore) to apply. Use the name of the template without the extension. For example, \"Haskell\"."]},"has_issues":{"default":true,"description":"Either ```true``` to enable issues for this repository or ```false``` to disable them. Default: ```true```.","type":"boolean","x-swgg-descriptionLineList":["Either ```true``` to enable issues for this repository or ```false``` to disable them. Default: ```true```."]},"has_projects":{"default":true,"description":"Either ```true``` to enable projects for this repository or ```false``` to disable them. Default: ```true```. **Note:** If you're creating a repository in an organization that has disabled repository projects, the default is ```false```, and if you pass ```true```, the API returns an error.","type":"boolean","x-swgg-descriptionLineList":["Either ```true``` to enable projects for this repository or ```false``` to disable them. Default: ```true```. **Note:** If you're creating a repository in an organization that has disabled repository projects, the default is ```false```, and if you pass ```true```, the API returns an error."]},"has_wiki":{"default":true,"description":"Either ```true``` to enable the wiki for this repository or ```false``` to disable it. Default: ```true```.","type":"boolean","x-swgg-descriptionLineList":["Either ```true``` to enable the wiki for this repository or ```false``` to disable it. Default: ```true```."]},"homepage":{"default":"https://github.com","description":"A URL with more information about the repository.","type":"string","x-swgg-descriptionLineList":["A URL with more information about the repository."]},"license_template":{"description":"Choose an [open source license template](https://choosealicense.com/) that best suits your needs, and then use the [license keyword](https://help.github.com/articles/licensing-a-repository/#searching-github-by-license-type) as the ```license_template``` string. For example, \"mit\" or \"mpl-2.0\".","type":"string","x-swgg-descriptionLineList":["Choose an [open source license template](https://choosealicense.com/) that best suits your needs, and then use the [license keyword](https://help.github.com/articles/licensing-a-repository/#searching-github-by-license-type) as the ```license_template``` string. For example, \"mit\" or \"mpl-2.0\"."]},"name":{"default":"Hello-World","description":"**Required**. The name of the repository.","type":"string","x-swgg-descriptionLineList":["**Required**. The name of the repository."]},"private":{"default":false,"description":"Either ```true``` to create a private repository or ```false``` to create a public one. Creating private repositories requires a paid GitHub account.  Default: ```false```.","type":"boolean","x-swgg-descriptionLineList":["Either ```true``` to create a private repository or ```false``` to create a public one. Creating private repositories requires a paid GitHub account.  Default: ```false```."]},"team_id":{"description":"The id of the team that will be granted access to this repository. This is only valid when creating a repository in an organization.","type":"integer","x-swgg-descriptionLineList":["The id of the team that will be granted access to this repository. This is only valid when creating a repository in an organization."]}},"required":["name"],"x-swgg-tags0":"github-repos"}},"info":{"title":"swgg-github-all","version":"2018.3.25","x-swgg-description":"this zero-dependency package will provide a (nodejs-compatible) swagger-client for github-all's web-apis, with a working web-demo","x-swgg-homepage":"https://github.com/kaizhu256/node-swgg-github-all"},"parameters":{"github-all.key":{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},"github-all.user-agent":{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]}},"paths":{"/&lt;upload_url&gt;/repos/{owner}/{repo}/releases/{id}/assets":{"post":{"consumes":[],"description":"[Releases](https://developer.github.com/v3/repos/releases/#upload-a-release-asset) - Upload a release asset\n\nThis endpoint makes use of [a Hypermedia relation](https://developer.github.com/v3/#hypermedia) to determine which URL to access. This endpoint is provided by a URI template in [the release's API response](https://developer.github.com/v3/repos/releases/#get-a-single-release). You need to use an HTTP client which supports [SNI](http://en.wikipedia.org/wiki/Server_Name_Indication) to make calls to this endpoint.\n\nThe asset data is expected in its raw binary form, rather than JSON. Everything else about the endpoint is the same as the rest of the API. For example, you'll still need to pass your authentication to be able to upload an asset.","operationId":"_2F_26lt_3Bupload_url_26gt_3B_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Freleases_2F_7Bid_7D_2Fassets_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"},{"default":"foo.zip","description":"**Required**. The file name of the asset. This should be set in a URI query parameter.","in":"query","name":"name","required":true,"type":"string","x-swgg-descriptionLineList":["**Required**. The file name of the asset. This should be set in a URI query parameter."]},{"description":"**Required**. The content type of the asset. This should be set in the Header. Example:\n```\napplication/zip\n```\n. For a list of acceptable types, refer this list of [media types](https://www.iana.org/assignments/media-types/media-types.xhtml).","in":"query","name":"Content-Type","required":true,"type":"string","x-swgg-descriptionLineList":["**Required**. The content type of the asset. This should be set in the Header. Example:","```","application/zip","```",". For a list of acceptable types, refer this list of [media types](https://www.iana.org/assignments/media-types/media-types.xhtml)."]},{"description":"An alternate short description of the asset. Used in place of the filename. This should be set in a URI query parameter.","in":"query","name":"label","type":"string","x-swgg-descriptionLineList":["An alternate short description of the asset. Used in place of the filename. This should be set in a URI query parameter."]}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Releases](https://developer.github.com/v3/repos/releases/#upload-a-release-asset) - Upload a release asset","","This endpoint makes use of [a Hypermedia relation](https://developer.github.com/v3/#hypermedia) to determine which URL to access. This endpoint is provided by a URI template in [the release's API response](https://developer.github.com/v3/repos/releases/#get-a-single-release). You need to use an HTTP client which supports [SNI](http://en.wikipedia.org/wiki/Server_Name_Indication) to make calls to this endpoint.","","The asset data is expected in its raw binary form, rather than JSON. Everything else about the endpoint is the same as the rest of the API. For example, you'll still need to pass your authentication to be able to upload an asset."],"x-swgg-host":"","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Releases](https://developer.github.com/v3/repos/releases/#upload-a-release-asset) - Upload a release asset","x-swgg-tags0":"github-repos"}},"/app":{"get":{"consumes":[],"description":"[GitHub Apps](https://developer.github.com/v3/apps/#get-the-authenticated-github-app) - Get the authenticated GitHub App\n\nReturns the GitHub App associated with the [authentication credentials](https://developer.github.com/apps/building-github-apps/authentication-options-for-github-apps#authenticating-as-a-github-app) used.","operationId":"_2Fapp_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.machine-man-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.machine-man-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]}],"responses":{"default":{"description":"default response"}},"tags":["github-apps"],"x-swgg-descriptionLineList":["[GitHub Apps](https://developer.github.com/v3/apps/#get-the-authenticated-github-app) - Get the authenticated GitHub App","","Returns the GitHub App associated with the [authentication credentials](https://developer.github.com/apps/building-github-apps/authentication-options-for-github-apps#authenticating-as-a-github-app) used."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[GitHub Apps](https://developer.github.com/v3/apps/#get-the-authenticated-github-app) - Get the authenticated GitHub App","x-swgg-tags0":"github-apps"}},"/app/installations":{"get":{"consumes":[],"description":"[GitHub Apps](https://developer.github.com/v3/apps/#find-installations) - Find installations","operationId":"_2Fapp_2Finstallations_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.machine-man-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.machine-man-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]}],"responses":{"default":{"description":"default response"}},"tags":["github-apps"],"x-swgg-descriptionLineList":["[GitHub Apps](https://developer.github.com/v3/apps/#find-installations) - Find installations"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[GitHub Apps](https://developer.github.com/v3/apps/#find-installations) - Find installations","x-swgg-tags0":"github-apps"}},"/app/installations/{installation_id}":{"get":{"consumes":[],"description":"[GitHub Apps](https://developer.github.com/v3/apps/#get-a-single-installation) - Get a single installation","operationId":"_2Fapp_2Finstallations_2F_7Binstallation_id_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.machine-man-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.machine-man-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"installation_id","description":"no description","in":"path","name":"installation_id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-apps"],"x-swgg-descriptionLineList":["[GitHub Apps](https://developer.github.com/v3/apps/#get-a-single-installation) - Get a single installation"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[GitHub Apps](https://developer.github.com/v3/apps/#get-a-single-installation) - Get a single installation","x-swgg-tags0":"github-apps"}},"/apps/{app_slug}":{"get":{"consumes":[],"description":"[GitHub Apps](https://developer.github.com/v3/apps/#get-a-single-github-app) - Get a single GitHub App\n\n**Note**: The ```:app_slug``` is just the URL-friendly name of your GitHub App. You can find this on the settings page for your GitHub App (e.g., ```https://github.com/settings/apps/:app_slug```).","operationId":"_2Fapps_2F_7Bapp_slug_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.machine-man-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.machine-man-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"app_slug","description":"no description","in":"path","name":"app_slug","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-apps"],"x-swgg-descriptionLineList":["[GitHub Apps](https://developer.github.com/v3/apps/#get-a-single-github-app) - Get a single GitHub App","","**Note**: The ```:app_slug``` is just the URL-friendly name of your GitHub App. You can find this on the settings page for your GitHub App (e.g., ```https://github.com/settings/apps/:app_slug```)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[GitHub Apps](https://developer.github.com/v3/apps/#get-a-single-github-app) - Get a single GitHub App","x-swgg-tags0":"github-apps"}},"/codes_of_conduct":{"get":{"consumes":[],"description":"[Codes of Conduct](https://developer.github.com/v3/codes_of_conduct/#list-all-codes-of-conduct) - List all codes of conduct","operationId":"_2Fcodes_of_conduct_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.scarlet-witch-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.scarlet-witch-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]}],"responses":{"default":{"description":"default response"}},"tags":["github-misc"],"x-swgg-descriptionLineList":["[Codes of Conduct](https://developer.github.com/v3/codes_of_conduct/#list-all-codes-of-conduct) - List all codes of conduct"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Codes of Conduct](https://developer.github.com/v3/codes_of_conduct/#list-all-codes-of-conduct) - List all codes of conduct","x-swgg-tags0":"github-misc"}},"/codes_of_conduct/{key}":{"get":{"consumes":[],"description":"[Codes of Conduct](https://developer.github.com/v3/codes_of_conduct/#get-an-individual-code-of-conduct) - Get an individual code of conduct","operationId":"_2Fcodes_of_conduct_2F_7Bkey_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.scarlet-witch-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.scarlet-witch-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"key","description":"no description","in":"path","name":"key","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-misc"],"x-swgg-descriptionLineList":["[Codes of Conduct](https://developer.github.com/v3/codes_of_conduct/#get-an-individual-code-of-conduct) - Get an individual code of conduct"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Codes of Conduct](https://developer.github.com/v3/codes_of_conduct/#get-an-individual-code-of-conduct) - Get an individual code of conduct","x-swgg-tags0":"github-misc"}},"/emojis":{"get":{"consumes":[],"description":"[Emojis](https://developer.github.com/v3/emojis/#emojis) - Emojis\n\nLists all the emojis available to use on GitHub.","operationId":"_2Femojis_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]}],"responses":{"default":{"description":"default response"}},"tags":["github-misc"],"x-swgg-descriptionLineList":["[Emojis](https://developer.github.com/v3/emojis/#emojis) - Emojis","","Lists all the emojis available to use on GitHub."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Emojis](https://developer.github.com/v3/emojis/#emojis) - Emojis","x-swgg-tags0":"github-misc"}},"/events":{"get":{"consumes":[],"description":"[Events](https://developer.github.com/v3/activity/events/#list-public-events) - List public events","operationId":"_2Fevents_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]}],"responses":{"default":{"description":"default response"}},"tags":["github-activity"],"x-swgg-descriptionLineList":["[Events](https://developer.github.com/v3/activity/events/#list-public-events) - List public events"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Events](https://developer.github.com/v3/activity/events/#list-public-events) - List public events","x-swgg-tags0":"github-activity"}},"/feeds":{"get":{"consumes":[],"description":"[Feeds](https://developer.github.com/v3/activity/feeds/#list-feeds) - List Feeds\n\nGitHub provides several timeline resources in [Atom](http://en.wikipedia.org/wiki/Atom_(standard)) format. The Feeds API lists all the feeds available to the authenticated user:\n-  **Timeline**: The GitHub global public timeline\n-  **User**: The public timeline for any user, using [URI template](https://developer.github.com/v3/#hypermedia)\n-  **Current user public**: The public timeline for the authenticated user\n-  **Current user**: The private timeline for the authenticated user\n-  **Current user actor**: The private timeline for activity created by the authenticated user\n-  **Current user organizations**: The private timeline for the organizations the authenticated user is a member of.\n\n**Note**: Private feeds are only returned when [authenticating via Basic Auth](https://developer.github.com/v3/#basic-authentication) since current feed URIs use the older, non revocable auth tokens.","operationId":"_2Ffeeds_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]}],"responses":{"default":{"description":"default response"}},"tags":["github-activity"],"x-swgg-descriptionLineList":["[Feeds](https://developer.github.com/v3/activity/feeds/#list-feeds) - List Feeds","","GitHub provides several timeline resources in [Atom](http://en.wikipedia.org/wiki/Atom_(standard)) format. The Feeds API lists all the feeds available to the authenticated user:","-  **Timeline**: The GitHub global public timeline","-  **User**: The public timeline for any user, using [URI template](https://developer.github.com/v3/#hypermedia)","-  **Current user public**: The public timeline for the authenticated user","-  **Current user**: The private timeline for the authenticated user","-  **Current user actor**: The private timeline for activity created by the authenticated user","-  **Current user organizations**: The private timeline for the organizations the authenticated user is a member of.","","**Note**: Private feeds are only returned when [authenticating via Basic Auth](https://developer.github.com/v3/#basic-authentication) since current feed URIs use the older, non revocable auth tokens."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Feeds](https://developer.github.com/v3/activity/feeds/#list-feeds) - List Feeds","x-swgg-tags0":"github-activity"}},"/gists":{"post":{"consumes":[],"description":"[Gists](https://developer.github.com/v3/gists/#create-a-gist) - Create a gist","operationId":"_2Fgists_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3.raw","application/vnd.github.v3.base64","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Fgists_20POST.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-gists"],"x-swgg-descriptionLineList":["[Gists](https://developer.github.com/v3/gists/#create-a-gist) - Create a gist"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Gists](https://developer.github.com/v3/gists/#create-a-gist) - Create a gist","x-swgg-tags0":"github-gists"}},"/gists/public":{"get":{"consumes":[],"description":"[Gists](https://developer.github.com/v3/gists/#list-all-public-gists) - List all public gists\n\nList all public gists sorted by most recently updated to least recently updated.\n\nNote: With [pagination](https://developer.github.com/v3/#pagination), you can fetch up to 3000 gists. For example, you can fetch 100 pages with 30 gists per page or 30 pages with 100 gists per page.","operationId":"_2Fgists_2Fpublic_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3.raw","application/vnd.github.v3.base64","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"description":"A timestamp in ISO 8601 format: ```YYYY-MM-DDTHH:MM:SSZ```. Only gists updated at or after this time are returned.","in":"query","name":"since","type":"string","x-swgg-descriptionLineList":["A timestamp in ISO 8601 format: ```YYYY-MM-DDTHH:MM:SSZ```. Only gists updated at or after this time are returned."]}],"responses":{"default":{"description":"default response"}},"tags":["github-gists"],"x-swgg-descriptionLineList":["[Gists](https://developer.github.com/v3/gists/#list-all-public-gists) - List all public gists","","List all public gists sorted by most recently updated to least recently updated.","","Note: With [pagination](https://developer.github.com/v3/#pagination), you can fetch up to 3000 gists. For example, you can fetch 100 pages with 30 gists per page or 30 pages with 100 gists per page."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Gists](https://developer.github.com/v3/gists/#list-all-public-gists) - List all public gists","x-swgg-tags0":"github-gists"}},"/gists/starred":{"get":{"consumes":[],"description":"[Gists](https://developer.github.com/v3/gists/#list-starred-gists) - List starred gists\n\nList the authenticated user's starred gists:","operationId":"_2Fgists_2Fstarred_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3.raw","application/vnd.github.v3.base64","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"description":"A timestamp in ISO 8601 format: ```YYYY-MM-DDTHH:MM:SSZ```. Only gists updated at or after this time are returned.","in":"query","name":"since","type":"string","x-swgg-descriptionLineList":["A timestamp in ISO 8601 format: ```YYYY-MM-DDTHH:MM:SSZ```. Only gists updated at or after this time are returned."]}],"responses":{"default":{"description":"default response"}},"tags":["github-gists"],"x-swgg-descriptionLineList":["[Gists](https://developer.github.com/v3/gists/#list-starred-gists) - List starred gists","","List the authenticated user's starred gists:"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Gists](https://developer.github.com/v3/gists/#list-starred-gists) - List starred gists","x-swgg-tags0":"github-gists"}},"/gists/{gist_id}/comments":{"get":{"consumes":[],"description":"[Gist Comments](https://developer.github.com/v3/gists/comments/#list-comments-on-a-gist) - List comments on a gist","operationId":"_2Fgists_2F_7Bgist_id_7D_2Fcomments_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3.raw+json","application/vnd.github.v3.text+json","application/vnd.github.v3.html+json","application/vnd.github.v3.full+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"gist_id","description":"no description","in":"path","name":"gist_id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-gists"],"x-swgg-descriptionLineList":["[Gist Comments](https://developer.github.com/v3/gists/comments/#list-comments-on-a-gist) - List comments on a gist"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Gist Comments](https://developer.github.com/v3/gists/comments/#list-comments-on-a-gist) - List comments on a gist","x-swgg-tags0":"github-gists"},"post":{"consumes":[],"description":"[Gist Comments](https://developer.github.com/v3/gists/comments/#create-a-comment) - Create a comment","operationId":"_2Fgists_2F_7Bgist_id_7D_2Fcomments_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3.raw+json","application/vnd.github.v3.text+json","application/vnd.github.v3.html+json","application/vnd.github.v3.full+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"gist_id","description":"no description","in":"path","name":"gist_id","required":true,"type":"string"},{"description":"**Required**. The comment text.","in":"body","name":"body","required":true,"schema":{"$ref":"#/definitions/_2Fgists_2F_7Bgist_id_7D_2Fcomments_20POST.body"},"x-swgg-descriptionLineList":["**Required**. The comment text."]}],"responses":{"default":{"description":"default response"}},"tags":["github-gists"],"x-swgg-descriptionLineList":["[Gist Comments](https://developer.github.com/v3/gists/comments/#create-a-comment) - Create a comment"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Gist Comments](https://developer.github.com/v3/gists/comments/#create-a-comment) - Create a comment","x-swgg-tags0":"github-gists"}},"/gists/{gist_id}/comments/{id}":{"delete":{"consumes":[],"description":"[Gist Comments](https://developer.github.com/v3/gists/comments/#delete-a-comment) - Delete a comment","operationId":"_2Fgists_2F_7Bgist_id_7D_2Fcomments_2F_7Bid_7D_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3.raw+json","application/vnd.github.v3.text+json","application/vnd.github.v3.html+json","application/vnd.github.v3.full+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"gist_id","description":"no description","in":"path","name":"gist_id","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-gists"],"x-swgg-descriptionLineList":["[Gist Comments](https://developer.github.com/v3/gists/comments/#delete-a-comment) - Delete a comment"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Gist Comments](https://developer.github.com/v3/gists/comments/#delete-a-comment) - Delete a comment","x-swgg-tags0":"github-gists"},"get":{"consumes":[],"description":"[Gist Comments](https://developer.github.com/v3/gists/comments/#get-a-single-comment) - Get a single comment","operationId":"_2Fgists_2F_7Bgist_id_7D_2Fcomments_2F_7Bid_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3.raw+json","application/vnd.github.v3.text+json","application/vnd.github.v3.html+json","application/vnd.github.v3.full+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"gist_id","description":"no description","in":"path","name":"gist_id","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-gists"],"x-swgg-descriptionLineList":["[Gist Comments](https://developer.github.com/v3/gists/comments/#get-a-single-comment) - Get a single comment"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Gist Comments](https://developer.github.com/v3/gists/comments/#get-a-single-comment) - Get a single comment","x-swgg-tags0":"github-gists"},"patch":{"consumes":[],"description":"[Gist Comments](https://developer.github.com/v3/gists/comments/#edit-a-comment) - Edit a comment","operationId":"_2Fgists_2F_7Bgist_id_7D_2Fcomments_2F_7Bid_7D_20PATCH","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3.raw+json","application/vnd.github.v3.text+json","application/vnd.github.v3.html+json","application/vnd.github.v3.full+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"gist_id","description":"no description","in":"path","name":"gist_id","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"},{"description":"**Required**. The comment text.","in":"body","name":"body","required":true,"schema":{"$ref":"#/definitions/_2Fgists_2F_7Bgist_id_7D_2Fcomments_2F_7Bid_7D_20PATCH.body"},"x-swgg-descriptionLineList":["**Required**. The comment text."]}],"responses":{"default":{"description":"default response"}},"tags":["github-gists"],"x-swgg-descriptionLineList":["[Gist Comments](https://developer.github.com/v3/gists/comments/#edit-a-comment) - Edit a comment"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Gist Comments](https://developer.github.com/v3/gists/comments/#edit-a-comment) - Edit a comment","x-swgg-tags0":"github-gists"}},"/gists/{id}":{"delete":{"consumes":[],"description":"[Gists](https://developer.github.com/v3/gists/#delete-a-gist) - Delete a gist","operationId":"_2Fgists_2F_7Bid_7D_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3.raw","application/vnd.github.v3.base64","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-gists"],"x-swgg-descriptionLineList":["[Gists](https://developer.github.com/v3/gists/#delete-a-gist) - Delete a gist"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Gists](https://developer.github.com/v3/gists/#delete-a-gist) - Delete a gist","x-swgg-tags0":"github-gists"},"get":{"consumes":[],"description":"[Gists](https://developer.github.com/v3/gists/#get-a-single-gist) - Get a single gist","operationId":"_2Fgists_2F_7Bid_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3.raw","application/vnd.github.v3.base64","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-gists"],"x-swgg-descriptionLineList":["[Gists](https://developer.github.com/v3/gists/#get-a-single-gist) - Get a single gist"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Gists](https://developer.github.com/v3/gists/#get-a-single-gist) - Get a single gist","x-swgg-tags0":"github-gists"},"patch":{"consumes":[],"description":"[Gists](https://developer.github.com/v3/gists/#edit-a-gist) - Edit a gist","operationId":"_2Fgists_2F_7Bid_7D_20PATCH","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3.raw","application/vnd.github.v3.base64","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Fgists_2F_7Bid_7D_20PATCH.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-gists"],"x-swgg-descriptionLineList":["[Gists](https://developer.github.com/v3/gists/#edit-a-gist) - Edit a gist"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Gists](https://developer.github.com/v3/gists/#edit-a-gist) - Edit a gist","x-swgg-tags0":"github-gists"}},"/gists/{id}/commits":{"get":{"consumes":[],"description":"[Gists](https://developer.github.com/v3/gists/#list-gist-commits) - List gist commits","operationId":"_2Fgists_2F_7Bid_7D_2Fcommits_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3.raw","application/vnd.github.v3.base64","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-gists"],"x-swgg-descriptionLineList":["[Gists](https://developer.github.com/v3/gists/#list-gist-commits) - List gist commits"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Gists](https://developer.github.com/v3/gists/#list-gist-commits) - List gist commits","x-swgg-tags0":"github-gists"}},"/gists/{id}/forks":{"get":{"consumes":[],"description":"[Gists](https://developer.github.com/v3/gists/#list-gist-forks) - List gist forks","operationId":"_2Fgists_2F_7Bid_7D_2Fforks_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3.raw","application/vnd.github.v3.base64","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-gists"],"x-swgg-descriptionLineList":["[Gists](https://developer.github.com/v3/gists/#list-gist-forks) - List gist forks"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Gists](https://developer.github.com/v3/gists/#list-gist-forks) - List gist forks","x-swgg-tags0":"github-gists"},"post":{"consumes":[],"description":"[Gists](https://developer.github.com/v3/gists/#fork-a-gist) - Fork a gist","operationId":"_2Fgists_2F_7Bid_7D_2Fforks_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3.raw","application/vnd.github.v3.base64","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-gists"],"x-swgg-descriptionLineList":["[Gists](https://developer.github.com/v3/gists/#fork-a-gist) - Fork a gist"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Gists](https://developer.github.com/v3/gists/#fork-a-gist) - Fork a gist","x-swgg-tags0":"github-gists"}},"/gists/{id}/star":{"delete":{"consumes":[],"description":"[Gists](https://developer.github.com/v3/gists/#unstar-a-gist) - Unstar a gist","operationId":"_2Fgists_2F_7Bid_7D_2Fstar_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3.raw","application/vnd.github.v3.base64","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-gists"],"x-swgg-descriptionLineList":["[Gists](https://developer.github.com/v3/gists/#unstar-a-gist) - Unstar a gist"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Gists](https://developer.github.com/v3/gists/#unstar-a-gist) - Unstar a gist","x-swgg-tags0":"github-gists"},"get":{"consumes":[],"description":"[Gists](https://developer.github.com/v3/gists/#check-if-a-gist-is-starred) - Check if a gist is starred","operationId":"_2Fgists_2F_7Bid_7D_2Fstar_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3.raw","application/vnd.github.v3.base64","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-gists"],"x-swgg-descriptionLineList":["[Gists](https://developer.github.com/v3/gists/#check-if-a-gist-is-starred) - Check if a gist is starred"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Gists](https://developer.github.com/v3/gists/#check-if-a-gist-is-starred) - Check if a gist is starred","x-swgg-tags0":"github-gists"},"put":{"consumes":[],"description":"[Gists](https://developer.github.com/v3/gists/#star-a-gist) - Star a gist","operationId":"_2Fgists_2F_7Bid_7D_2Fstar_20PUT","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3.raw","application/vnd.github.v3.base64","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-gists"],"x-swgg-descriptionLineList":["[Gists](https://developer.github.com/v3/gists/#star-a-gist) - Star a gist"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Gists](https://developer.github.com/v3/gists/#star-a-gist) - Star a gist","x-swgg-tags0":"github-gists"}},"/gists/{id}/{sha}":{"get":{"consumes":[],"description":"[Gists](https://developer.github.com/v3/gists/#get-a-specific-revision-of-a-gist) - Get a specific revision of a gist","operationId":"_2Fgists_2F_7Bid_7D_2F_7Bsha_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3.raw","application/vnd.github.v3.base64","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"},{"default":"sha","description":"no description","in":"path","name":"sha","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-gists"],"x-swgg-descriptionLineList":["[Gists](https://developer.github.com/v3/gists/#get-a-specific-revision-of-a-gist) - Get a specific revision of a gist"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Gists](https://developer.github.com/v3/gists/#get-a-specific-revision-of-a-gist) - Get a specific revision of a gist","x-swgg-tags0":"github-gists"}},"/gitignore/templates":{"get":{"consumes":[],"description":"[Gitignore](https://developer.github.com/v3/gitignore/#listing-available-templates) - Listing available templates\n\nList all templates available to pass as an option when [creating a repository](https://developer.github.com/v3/repos/#create).","operationId":"_2Fgitignore_2Ftemplates_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]}],"responses":{"default":{"description":"default response"}},"tags":["github-misc"],"x-swgg-descriptionLineList":["[Gitignore](https://developer.github.com/v3/gitignore/#listing-available-templates) - Listing available templates","","List all templates available to pass as an option when [creating a repository](https://developer.github.com/v3/repos/#create)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Gitignore](https://developer.github.com/v3/gitignore/#listing-available-templates) - Listing available templates","x-swgg-tags0":"github-misc"}},"/gitignore/templates/C":{"get":{"consumes":[],"description":"[Gitignore](https://developer.github.com/v3/gitignore/#get-a-single-template) - Get a single template\n\nThe API also allows fetching the source of a single template.","operationId":"_2Fgitignore_2Ftemplates_2FC_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]}],"responses":{"default":{"description":"default response"}},"tags":["github-misc"],"x-swgg-descriptionLineList":["[Gitignore](https://developer.github.com/v3/gitignore/#get-a-single-template) - Get a single template","","The API also allows fetching the source of a single template."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Gitignore](https://developer.github.com/v3/gitignore/#get-a-single-template) - Get a single template","x-swgg-tags0":"github-misc"}},"/installation/repositories":{"get":{"consumes":[],"description":"[Installations](https://developer.github.com/v3/apps/installations/#list-repositories) - List repositories\n\nList repositories that are accessible to the authenticated installation.","operationId":"_2Finstallation_2Frepositories_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.machine-man-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.machine-man-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]}],"responses":{"default":{"description":"default response"}},"tags":["github-apps"],"x-swgg-descriptionLineList":["[Installations](https://developer.github.com/v3/apps/installations/#list-repositories) - List repositories","","List repositories that are accessible to the authenticated installation."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Installations](https://developer.github.com/v3/apps/installations/#list-repositories) - List repositories","x-swgg-tags0":"github-apps"}},"/installations/{installation_id}/access_tokens":{"post":{"consumes":[],"description":"[GitHub Apps](https://developer.github.com/v3/apps/#create-a-new-installation-token) - Create a new installation token\n\nCreates an access token that enables a GitHub App to make authenticated API requests for the app's installation on an organization or individual account. Installation tokens expire one hour from the time you create them. Using an expired token produces a status code of ```401 - Unauthorized```, and requires creating a new installation token.","operationId":"_2Finstallations_2F_7Binstallation_id_7D_2Faccess_tokens_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.machine-man-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.machine-man-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"installation_id","description":"no description","in":"path","name":"installation_id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-apps"],"x-swgg-descriptionLineList":["[GitHub Apps](https://developer.github.com/v3/apps/#create-a-new-installation-token) - Create a new installation token","","Creates an access token that enables a GitHub App to make authenticated API requests for the app's installation on an organization or individual account. Installation tokens expire one hour from the time you create them. Using an expired token produces a status code of ```401 - Unauthorized```, and requires creating a new installation token."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[GitHub Apps](https://developer.github.com/v3/apps/#create-a-new-installation-token) - Create a new installation token","x-swgg-tags0":"github-apps"}},"/issues":{"get":{"consumes":[],"description":"[Issues](https://developer.github.com/v3/issues/#list-issues) - List issues\n\n**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.symmetra-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\n**Note**: In the past, pull requests and issues were more closely aligned than they are now. As far as the API is concerned, every pull request is an issue, but not every issue is a pull request.\n\nThis endpoint may also return pull requests in the response. If an issue is a pull request, the object will include a ```pull_request``` key.\n\nList all issues **assigned** to the authenticated user across all visible repositories including owned repositories, member repositories, and organization repositories:","operationId":"_2Fissues_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.sailor-v-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.symmetra-preview+json","application/vnd.github.squirrel-girl-preview","application/vnd.github.machine-man-preview","application/vnd.github.sailor-v-preview+json","application/vnd.github.v3.raw+json","application/vnd.github.v3.text+json","application/vnd.github.v3.html+json","application/vnd.github.v3.full+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"assigned","description":"Indicates which sorts of issues to return. Can be one of:\n* ```assigned```: Issues assigned to you\n* ```created```: Issues created by you\n* ```mentioned```: Issues mentioning you\n* ```subscribed```: Issues you're subscribed to updates for\n* ```all```: All issues the authenticated user can see, regardless of participation or creation\nDefault: ```assigned```","enum":["assigned","created","mentioned","subscribed","all"],"in":"query","name":"filter","type":"string","x-swgg-descriptionLineList":["Indicates which sorts of issues to return. Can be one of:","* ```assigned```: Issues assigned to you","* ```created```: Issues created by you","* ```mentioned```: Issues mentioning you","* ```subscribed```: Issues you're subscribed to updates for","* ```all```: All issues the authenticated user can see, regardless of participation or creation","Default: ```assigned```"]},{"default":"open","description":"Indicates the state of the issues to return. Can be either ```open```, ```closed```, or ```all```. Default: ```open```","in":"query","name":"state","type":"string","x-swgg-descriptionLineList":["Indicates the state of the issues to return. Can be either ```open```, ```closed```, or ```all```. Default: ```open```"]},{"description":"A list of comma separated label names.  Example: ```bug,ui,@high```","in":"query","name":"labels","type":"string","x-swgg-descriptionLineList":["A list of comma separated label names.  Example: ```bug,ui,@high```"]},{"default":"created","description":"What to sort results by. Can be either ```created```, ```updated```, ```comments```. Default: ```created```","in":"query","name":"sort","type":"string","x-swgg-descriptionLineList":["What to sort results by. Can be either ```created```, ```updated```, ```comments```. Default: ```created```"]},{"default":"desc","description":"The direction of the sort. Can be either ```asc``` or ```desc```. Default: ```desc```","in":"query","name":"direction","type":"string","x-swgg-descriptionLineList":["The direction of the sort. Can be either ```asc``` or ```desc```. Default: ```desc```"]},{"description":"Only issues updated at or after this time are returned. This is a timestamp in ISO 8601 format: ```YYYY-MM-DDTHH:MM:SSZ```.","in":"query","name":"since","type":"string","x-swgg-descriptionLineList":["Only issues updated at or after this time are returned. This is a timestamp in ISO 8601 format: ```YYYY-MM-DDTHH:MM:SSZ```."]}],"responses":{"default":{"description":"default response"}},"tags":["github-issues"],"x-swgg-descriptionLineList":["[Issues](https://developer.github.com/v3/issues/#list-issues) - List issues","","**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.symmetra-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","**Note**: In the past, pull requests and issues were more closely aligned than they are now. As far as the API is concerned, every pull request is an issue, but not every issue is a pull request.","","This endpoint may also return pull requests in the response. If an issue is a pull request, the object will include a ```pull_request``` key.","","List all issues **assigned** to the authenticated user across all visible repositories including owned repositories, member repositories, and organization repositories:"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Issues](https://developer.github.com/v3/issues/#list-issues) - List issues","x-swgg-tags0":"github-issues"}},"/legacy/issues/search/{owner}/{repository}/{state}/{keyword}":{"get":{"consumes":[],"description":"[Legacy Search](https://developer.github.com/v3/search/legacy/#search-issues) - Search issues\n\nFind issues by state and keyword.","operationId":"_2Flegacy_2Fissues_2Fsearch_2F_7Bowner_7D_2F_7Brepository_7D_2F_7Bstate_7D_2F_7Bkeyword_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repository","description":"no description","in":"path","name":"repository","required":true,"type":"string"},{"default":"state","description":"Indicates the state of the issues to return. Can be either ```open``` or ```closed```.","in":"path","name":"state","required":true,"type":"string","x-swgg-descriptionLineList":["Indicates the state of the issues to return. Can be either ```open``` or ```closed```."]},{"default":"keyword","description":"The search term.","in":"path","name":"keyword","required":true,"type":"string","x-swgg-descriptionLineList":["The search term."]}],"responses":{"default":{"description":"default response"}},"tags":["github-search"],"x-swgg-descriptionLineList":["[Legacy Search](https://developer.github.com/v3/search/legacy/#search-issues) - Search issues","","Find issues by state and keyword."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Legacy Search](https://developer.github.com/v3/search/legacy/#search-issues) - Search issues","x-swgg-tags0":"github-search"}},"/legacy/repos/search/{keyword}":{"get":{"consumes":[],"description":"[Legacy Search](https://developer.github.com/v3/search/legacy/#search-repositories) - Search repositories\n\nFind repositories by keyword. Note, this legacy method does not follow the v3 pagination pattern. This method returns up to 100 results per page and pages can be fetched using the ```start_page``` parameter.","operationId":"_2Flegacy_2Frepos_2Fsearch_2F_7Bkeyword_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"keyword","description":"The search term","in":"path","name":"keyword","required":true,"type":"string","x-swgg-descriptionLineList":["The search term"]},{"description":"Filter results by language","in":"query","name":"language","type":"string","x-swgg-descriptionLineList":["Filter results by language"]},{"description":"The page number to fetch","in":"query","name":"start_page","type":"string","x-swgg-descriptionLineList":["The page number to fetch"]},{"description":"The sort field. One of ```stars```, ```forks```, or ```updated```. Default: results are sorted by best match.","in":"query","name":"sort","type":"string","x-swgg-descriptionLineList":["The sort field. One of ```stars```, ```forks```, or ```updated```. Default: results are sorted by best match."]},{"description":"The sort field. if ```sort``` param is provided. Can be either ```asc``` or ```desc```.","in":"query","name":"order","type":"string","x-swgg-descriptionLineList":["The sort field. if ```sort``` param is provided. Can be either ```asc``` or ```desc```."]}],"responses":{"default":{"description":"default response"}},"tags":["github-search"],"x-swgg-descriptionLineList":["[Legacy Search](https://developer.github.com/v3/search/legacy/#search-repositories) - Search repositories","","Find repositories by keyword. Note, this legacy method does not follow the v3 pagination pattern. This method returns up to 100 results per page and pages can be fetched using the ```start_page``` parameter."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Legacy Search](https://developer.github.com/v3/search/legacy/#search-repositories) - Search repositories","x-swgg-tags0":"github-search"}},"/legacy/user/email/{email}":{"get":{"consumes":[],"description":"[Legacy Search](https://developer.github.com/v3/search/legacy/#email-search) - Email search\n\nThis API call is added for compatibility reasons only. There's no guarantee that full email searches will always be available. The ```@``` character in the address must be left unencoded. Searches only against public email addresses (as configured on the user's GitHub profile).","operationId":"_2Flegacy_2Fuser_2Femail_2F_7Bemail_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"email","description":"The email address","in":"path","name":"email","required":true,"type":"string","x-swgg-descriptionLineList":["The email address"]}],"responses":{"default":{"description":"default response"}},"tags":["github-search"],"x-swgg-descriptionLineList":["[Legacy Search](https://developer.github.com/v3/search/legacy/#email-search) - Email search","","This API call is added for compatibility reasons only. There's no guarantee that full email searches will always be available. The ```@``` character in the address must be left unencoded. Searches only against public email addresses (as configured on the user's GitHub profile)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Legacy Search](https://developer.github.com/v3/search/legacy/#email-search) - Email search","x-swgg-tags0":"github-search"}},"/legacy/user/search/{keyword}":{"get":{"consumes":[],"description":"[Legacy Search](https://developer.github.com/v3/search/legacy/#search-users) - Search users\n\nFind users by keyword.","operationId":"_2Flegacy_2Fuser_2Fsearch_2F_7Bkeyword_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"keyword","description":"The search term","in":"path","name":"keyword","required":true,"type":"string","x-swgg-descriptionLineList":["The search term"]},{"description":"The page number to fetch","in":"query","name":"start_page","type":"string","x-swgg-descriptionLineList":["The page number to fetch"]},{"description":"The sort field. One of ```stars```, ```forks```, or ```updated```. Default: results are sorted by best match.","in":"query","name":"sort","type":"string","x-swgg-descriptionLineList":["The sort field. One of ```stars```, ```forks```, or ```updated```. Default: results are sorted by best match."]},{"description":"The sort field. if ```sort``` param is provided. Can be either ```asc``` or ```desc```.","in":"query","name":"order","type":"string","x-swgg-descriptionLineList":["The sort field. if ```sort``` param is provided. Can be either ```asc``` or ```desc```."]}],"responses":{"default":{"description":"default response"}},"tags":["github-search"],"x-swgg-descriptionLineList":["[Legacy Search](https://developer.github.com/v3/search/legacy/#search-users) - Search users","","Find users by keyword."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Legacy Search](https://developer.github.com/v3/search/legacy/#search-users) - Search users","x-swgg-tags0":"github-search"}},"/licenses":{"get":{"consumes":[],"description":"[Licenses](https://developer.github.com/v3/licenses/#list-all-licenses) - List all licenses","operationId":"_2Flicenses_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]}],"responses":{"default":{"description":"default response"}},"tags":["github-misc"],"x-swgg-descriptionLineList":["[Licenses](https://developer.github.com/v3/licenses/#list-all-licenses) - List all licenses"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Licenses](https://developer.github.com/v3/licenses/#list-all-licenses) - List all licenses","x-swgg-tags0":"github-misc"}},"/licenses/{license}":{"get":{"consumes":[],"description":"[Licenses](https://developer.github.com/v3/licenses/#get-an-individual-license) - Get an individual license","operationId":"_2Flicenses_2F_7Blicense_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"license","description":"no description","in":"path","name":"license","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-misc"],"x-swgg-descriptionLineList":["[Licenses](https://developer.github.com/v3/licenses/#get-an-individual-license) - Get an individual license"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Licenses](https://developer.github.com/v3/licenses/#get-an-individual-license) - Get an individual license","x-swgg-tags0":"github-misc"}},"/markdown":{"post":{"consumes":[],"description":"[Markdown](https://developer.github.com/v3/markdown/#render-an-arbitrary-markdown-document) - Render an arbitrary Markdown document","operationId":"_2Fmarkdown_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Fmarkdown_20POST.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-misc"],"x-swgg-descriptionLineList":["[Markdown](https://developer.github.com/v3/markdown/#render-an-arbitrary-markdown-document) - Render an arbitrary Markdown document"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Markdown](https://developer.github.com/v3/markdown/#render-an-arbitrary-markdown-document) - Render an arbitrary Markdown document","x-swgg-tags0":"github-misc"}},"/markdown/raw":{"post":{"consumes":[],"description":"[Markdown](https://developer.github.com/v3/markdown/#render-a-markdown-document-in-raw-mode) - Render a Markdown document in raw mode","operationId":"_2Fmarkdown_2Fraw_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]}],"responses":{"default":{"description":"default response"}},"tags":["github-misc"],"x-swgg-descriptionLineList":["[Markdown](https://developer.github.com/v3/markdown/#render-a-markdown-document-in-raw-mode) - Render a Markdown document in raw mode"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Markdown](https://developer.github.com/v3/markdown/#render-a-markdown-document-in-raw-mode) - Render a Markdown document in raw mode","x-swgg-tags0":"github-misc"}},"/marketplace_listing/accounts/{id}":{"get":{"consumes":[],"description":"[GitHub Marketplace](https://developer.github.com/v3/apps/marketplace/#check-if-a-github-account-is-associated-with-any-marketplace-listing) - Check if a GitHub account is associated with any Marketplace listing","operationId":"_2Fmarketplace_listing_2Faccounts_2F_7Bid_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.valkyrie-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.valkyrie-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-apps"],"x-swgg-descriptionLineList":["[GitHub Marketplace](https://developer.github.com/v3/apps/marketplace/#check-if-a-github-account-is-associated-with-any-marketplace-listing) - Check if a GitHub account is associated with any Marketplace listing"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[GitHub Marketplace](https://developer.github.com/v3/apps/marketplace/#check-if-a-github-account-is-associated-with-any-marketplace-listing) - Check if a GitHub account is associated with any Marketplace listing","x-swgg-tags0":"github-apps"}},"/marketplace_listing/plans":{"get":{"consumes":[],"description":"[GitHub Marketplace](https://developer.github.com/v3/apps/marketplace/#list-all-plans-for-your-marketplace-listing) - List all plans for your Marketplace listing","operationId":"_2Fmarketplace_listing_2Fplans_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.valkyrie-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.valkyrie-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]}],"responses":{"default":{"description":"default response"}},"tags":["github-apps"],"x-swgg-descriptionLineList":["[GitHub Marketplace](https://developer.github.com/v3/apps/marketplace/#list-all-plans-for-your-marketplace-listing) - List all plans for your Marketplace listing"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[GitHub Marketplace](https://developer.github.com/v3/apps/marketplace/#list-all-plans-for-your-marketplace-listing) - List all plans for your Marketplace listing","x-swgg-tags0":"github-apps"}},"/marketplace_listing/plans/{id}/accounts":{"get":{"consumes":[],"description":"[GitHub Marketplace](https://developer.github.com/v3/apps/marketplace/#list-all-github-accounts-user-or-organization-on-a-specific-plan) - List all GitHub accounts (user or organization) on a specific plan","operationId":"_2Fmarketplace_listing_2Fplans_2F_7Bid_7D_2Faccounts_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.valkyrie-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.valkyrie-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"},{"default":"created","description":"Sorts the GitHub accounts by the date they were created or last updated. Can be one of ```created``` or ```updated```. Default: ```created```","enum":["created","updated"],"in":"query","name":"sort","type":"string","x-swgg-descriptionLineList":["Sorts the GitHub accounts by the date they were created or last updated. Can be one of ```created``` or ```updated```. Default: ```created```"]},{"description":"To return the oldest accounts first, set to ```asc```. Can be one of ```asc``` or ```desc```. Ignored without the ```sort``` parameter.","enum":["asc","desc","sort"],"in":"query","name":"direction","type":"string","x-swgg-descriptionLineList":["To return the oldest accounts first, set to ```asc```. Can be one of ```asc``` or ```desc```. Ignored without the ```sort``` parameter."]}],"responses":{"default":{"description":"default response"}},"tags":["github-apps"],"x-swgg-descriptionLineList":["[GitHub Marketplace](https://developer.github.com/v3/apps/marketplace/#list-all-github-accounts-user-or-organization-on-a-specific-plan) - List all GitHub accounts (user or organization) on a specific plan"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[GitHub Marketplace](https://developer.github.com/v3/apps/marketplace/#list-all-github-accounts-user-or-organization-on-a-specific-plan) - List all GitHub accounts (user or organization) on a specific plan","x-swgg-tags0":"github-apps"}},"/meta":{"get":{"consumes":[],"description":"[Meta](https://developer.github.com/v3/meta/#meta) - Meta\n\nThis endpoint provides information about GitHub.com, the service.","operationId":"_2Fmeta_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"description":"Whether authentication with username and password is supported.","in":"query","name":"verifiable_password_authentication","type":"boolean","x-swgg-descriptionLineList":["Whether authentication with username and password is supported."]},{"description":"The currently-deployed SHA of [```github-services```](https://github.com/github/github-services).","in":"query","name":"github_services_sha","type":"string","x-swgg-descriptionLineList":["The currently-deployed SHA of [```github-services```](https://github.com/github/github-services)."]}],"responses":{"default":{"description":"default response"}},"tags":["github-misc"],"x-swgg-descriptionLineList":["[Meta](https://developer.github.com/v3/meta/#meta) - Meta","","This endpoint provides information about GitHub.com, the service."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Meta](https://developer.github.com/v3/meta/#meta) - Meta","x-swgg-tags0":"github-misc"}},"/networks/{owner}/{repo}/events":{"get":{"consumes":[],"description":"[Events](https://developer.github.com/v3/activity/events/#list-public-events-for-a-network-of-repositories) - List public events for a network of repositories","operationId":"_2Fnetworks_2F_7Bowner_7D_2F_7Brepo_7D_2Fevents_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-activity"],"x-swgg-descriptionLineList":["[Events](https://developer.github.com/v3/activity/events/#list-public-events-for-a-network-of-repositories) - List public events for a network of repositories"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Events](https://developer.github.com/v3/activity/events/#list-public-events-for-a-network-of-repositories) - List public events for a network of repositories","x-swgg-tags0":"github-activity"}},"/notifications":{"get":{"consumes":[],"description":"[Notifications](https://developer.github.com/v3/activity/notifications/#list-your-notifications) - List your notifications\n\nList all notifications for the current user, sorted by most recently updated.","operationId":"_2Fnotifications_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":false,"description":"If ```true```, show notifications marked as read. Default: ```false```","in":"query","name":"all","type":"boolean","x-swgg-descriptionLineList":["If ```true```, show notifications marked as read. Default: ```false```"]},{"default":false,"description":"If ```true```, only shows notifications in which the user is directly participating or mentioned. Default: ```false```","in":"query","name":"participating","type":"boolean","x-swgg-descriptionLineList":["If ```true```, only shows notifications in which the user is directly participating or mentioned. Default: ```false```"]},{"default":"Time.now","description":"Only show notifications updated after the given time. This is a timestamp in ISO 8601 format: ```YYYY-MM-DDTHH:MM:SSZ```. Default: ```Time.now```","in":"query","name":"since","type":"string","x-swgg-descriptionLineList":["Only show notifications updated after the given time. This is a timestamp in ISO 8601 format: ```YYYY-MM-DDTHH:MM:SSZ```. Default: ```Time.now```"]},{"description":"Only show notifications updated before the given time. This is a timestamp in ISO 8601 format: ```YYYY-MM-DDTHH:MM:SSZ```.","in":"query","name":"before","type":"string","x-swgg-descriptionLineList":["Only show notifications updated before the given time. This is a timestamp in ISO 8601 format: ```YYYY-MM-DDTHH:MM:SSZ```."]}],"responses":{"default":{"description":"default response"}},"tags":["github-activity"],"x-swgg-descriptionLineList":["[Notifications](https://developer.github.com/v3/activity/notifications/#list-your-notifications) - List your notifications","","List all notifications for the current user, sorted by most recently updated."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Notifications](https://developer.github.com/v3/activity/notifications/#list-your-notifications) - List your notifications","x-swgg-tags0":"github-activity"},"put":{"consumes":[],"description":"[Notifications](https://developer.github.com/v3/activity/notifications/#mark-as-read) - Mark as read\n\nMarking a notification as \"read\" removes it from the [default view on GitHub](https://github.com/notifications).","operationId":"_2Fnotifications_20PUT","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"Time.now","description":"Describes the last point that notifications were checked.  Anything updated since this time will not be updated. This is a timestamp in ISO 8601 format: ```YYYY-MM-DDTHH:MM:SSZ```. Default: ```Time.now```","in":"query","name":"last_read_at","type":"string","x-swgg-descriptionLineList":["Describes the last point that notifications were checked.  Anything updated since this time will not be updated. This is a timestamp in ISO 8601 format: ```YYYY-MM-DDTHH:MM:SSZ```. Default: ```Time.now```"]}],"responses":{"default":{"description":"default response"}},"tags":["github-activity"],"x-swgg-descriptionLineList":["[Notifications](https://developer.github.com/v3/activity/notifications/#mark-as-read) - Mark as read","","Marking a notification as \"read\" removes it from the [default view on GitHub](https://github.com/notifications)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Notifications](https://developer.github.com/v3/activity/notifications/#mark-as-read) - Mark as read","x-swgg-tags0":"github-activity"}},"/notifications/threads/{id}":{"get":{"consumes":[],"description":"[Notifications](https://developer.github.com/v3/activity/notifications/#view-a-single-thread) - View a single thread","operationId":"_2Fnotifications_2Fthreads_2F_7Bid_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-activity"],"x-swgg-descriptionLineList":["[Notifications](https://developer.github.com/v3/activity/notifications/#view-a-single-thread) - View a single thread"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Notifications](https://developer.github.com/v3/activity/notifications/#view-a-single-thread) - View a single thread","x-swgg-tags0":"github-activity"},"patch":{"consumes":[],"description":"[Notifications](https://developer.github.com/v3/activity/notifications/#mark-a-thread-as-read) - Mark a thread as read","operationId":"_2Fnotifications_2Fthreads_2F_7Bid_7D_20PATCH","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-activity"],"x-swgg-descriptionLineList":["[Notifications](https://developer.github.com/v3/activity/notifications/#mark-a-thread-as-read) - Mark a thread as read"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Notifications](https://developer.github.com/v3/activity/notifications/#mark-a-thread-as-read) - Mark a thread as read","x-swgg-tags0":"github-activity"}},"/notifications/threads/{id}/subscription":{"delete":{"consumes":[],"description":"[Notifications](https://developer.github.com/v3/activity/notifications/#delete-a-thread-subscription) - Delete a Thread Subscription","operationId":"_2Fnotifications_2Fthreads_2F_7Bid_7D_2Fsubscription_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-activity"],"x-swgg-descriptionLineList":["[Notifications](https://developer.github.com/v3/activity/notifications/#delete-a-thread-subscription) - Delete a Thread Subscription"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Notifications](https://developer.github.com/v3/activity/notifications/#delete-a-thread-subscription) - Delete a Thread Subscription","x-swgg-tags0":"github-activity"},"get":{"consumes":[],"description":"[Notifications](https://developer.github.com/v3/activity/notifications/#get-a-thread-subscription) - Get a Thread Subscription\n\nThis checks to see if the current user is subscribed to a thread.  You can also [get a Repository subscription](https://developer.github.com/v3/activity/watching/#get-a-repository-subscription).\n\nNote that subscriptions are only generated if a user is participating in a conversation--for example, they've replied to the thread, were **@mention**ed, or manually subscribe to a thread.","operationId":"_2Fnotifications_2Fthreads_2F_7Bid_7D_2Fsubscription_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-activity"],"x-swgg-descriptionLineList":["[Notifications](https://developer.github.com/v3/activity/notifications/#get-a-thread-subscription) - Get a Thread Subscription","","This checks to see if the current user is subscribed to a thread.  You can also [get a Repository subscription](https://developer.github.com/v3/activity/watching/#get-a-repository-subscription).","","Note that subscriptions are only generated if a user is participating in a conversation--for example, they've replied to the thread, were **@mention**ed, or manually subscribe to a thread."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Notifications](https://developer.github.com/v3/activity/notifications/#get-a-thread-subscription) - Get a Thread Subscription","x-swgg-tags0":"github-activity"},"put":{"consumes":[],"description":"[Notifications](https://developer.github.com/v3/activity/notifications/#set-a-thread-subscription) - Set a Thread Subscription\n\nThis lets you subscribe or unsubscribe from a conversation. Unsubscribing from a conversation mutes all future notifications (until you comment or get **@mention**ed once more).","operationId":"_2Fnotifications_2Fthreads_2F_7Bid_7D_2Fsubscription_20PUT","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"},{"description":"Determines if notifications should be received from this thread","in":"query","name":"subscribed","type":"boolean","x-swgg-descriptionLineList":["Determines if notifications should be received from this thread"]},{"description":"Determines if all notifications should be blocked from this thread","in":"query","name":"ignored","type":"boolean","x-swgg-descriptionLineList":["Determines if all notifications should be blocked from this thread"]}],"responses":{"default":{"description":"default response"}},"tags":["github-activity"],"x-swgg-descriptionLineList":["[Notifications](https://developer.github.com/v3/activity/notifications/#set-a-thread-subscription) - Set a Thread Subscription","","This lets you subscribe or unsubscribe from a conversation. Unsubscribing from a conversation mutes all future notifications (until you comment or get **@mention**ed once more)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Notifications](https://developer.github.com/v3/activity/notifications/#set-a-thread-subscription) - Set a Thread Subscription","x-swgg-tags0":"github-activity"}},"/organizations":{"get":{"consumes":[],"description":"[Organizations](https://developer.github.com/v3/orgs/#list-all-organizations) - List all organizations\n\nLists all organizations, in the order that they were created on GitHub.\n\n**Note:** Pagination is powered exclusively by the ```since``` parameter. Use the [Link header](https://developer.github.com/v3/#link-header) to get the URL for the next page of organizations.","operationId":"_2Forganizations_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"description":"The integer ID of the last Organization that you've seen.","in":"query","name":"since","type":"string","x-swgg-descriptionLineList":["The integer ID of the last Organization that you've seen."]}],"responses":{"default":{"description":"default response"}},"tags":["github-orgs"],"x-swgg-descriptionLineList":["[Organizations](https://developer.github.com/v3/orgs/#list-all-organizations) - List all organizations","","Lists all organizations, in the order that they were created on GitHub.","","**Note:** Pagination is powered exclusively by the ```since``` parameter. Use the [Link header](https://developer.github.com/v3/#link-header) to get the URL for the next page of organizations."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Organizations](https://developer.github.com/v3/orgs/#list-all-organizations) - List all organizations","x-swgg-tags0":"github-orgs"}},"/orgs/{org}":{"get":{"consumes":[],"description":"[Organizations](https://developer.github.com/v3/orgs/#get-an-organization) - Get an organization","operationId":"_2Forgs_2F_7Borg_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"org","description":"no description","in":"path","name":"org","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-orgs"],"x-swgg-descriptionLineList":["[Organizations](https://developer.github.com/v3/orgs/#get-an-organization) - Get an organization"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Organizations](https://developer.github.com/v3/orgs/#get-an-organization) - Get an organization","x-swgg-tags0":"github-orgs"},"patch":{"consumes":[],"description":"[Organizations](https://developer.github.com/v3/orgs/#edit-an-organization) - Edit an organization","operationId":"_2Forgs_2F_7Borg_7D_20PATCH","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"org","description":"no description","in":"path","name":"org","required":true,"type":"string"},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Forgs_2F_7Borg_7D_20PATCH.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-orgs"],"x-swgg-descriptionLineList":["[Organizations](https://developer.github.com/v3/orgs/#edit-an-organization) - Edit an organization"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Organizations](https://developer.github.com/v3/orgs/#edit-an-organization) - Edit an organization","x-swgg-tags0":"github-orgs"}},"/orgs/{org}/blocks":{"get":{"consumes":[],"description":"[Blocking Organization Users](https://developer.github.com/v3/orgs/blocking/#list-blocked-users) - List blocked users\n\nList the users blocked by an organization.","operationId":"_2Forgs_2F_7Borg_7D_2Fblocks_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.giant-sentry-fist-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.giant-sentry-fist-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"org","description":"no description","in":"path","name":"org","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-orgs"],"x-swgg-descriptionLineList":["[Blocking Organization Users](https://developer.github.com/v3/orgs/blocking/#list-blocked-users) - List blocked users","","List the users blocked by an organization."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Blocking Organization Users](https://developer.github.com/v3/orgs/blocking/#list-blocked-users) - List blocked users","x-swgg-tags0":"github-orgs"}},"/orgs/{org}/blocks/{username}":{"delete":{"consumes":[],"description":"[Blocking Organization Users](https://developer.github.com/v3/orgs/blocking/#unblock-a-user) - Unblock a user","operationId":"_2Forgs_2F_7Borg_7D_2Fblocks_2F_7Busername_7D_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.giant-sentry-fist-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.giant-sentry-fist-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"org","description":"no description","in":"path","name":"org","required":true,"type":"string"},{"default":"username","description":"no description","in":"path","name":"username","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-orgs"],"x-swgg-descriptionLineList":["[Blocking Organization Users](https://developer.github.com/v3/orgs/blocking/#unblock-a-user) - Unblock a user"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Blocking Organization Users](https://developer.github.com/v3/orgs/blocking/#unblock-a-user) - Unblock a user","x-swgg-tags0":"github-orgs"},"get":{"consumes":[],"description":"[Blocking Organization Users](https://developer.github.com/v3/orgs/blocking/#check-whether-a-user-is-blocked-from-an-organization) - Check whether a user is blocked from an organization","operationId":"_2Forgs_2F_7Borg_7D_2Fblocks_2F_7Busername_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.giant-sentry-fist-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.giant-sentry-fist-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"org","description":"no description","in":"path","name":"org","required":true,"type":"string"},{"default":"username","description":"no description","in":"path","name":"username","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-orgs"],"x-swgg-descriptionLineList":["[Blocking Organization Users](https://developer.github.com/v3/orgs/blocking/#check-whether-a-user-is-blocked-from-an-organization) - Check whether a user is blocked from an organization"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Blocking Organization Users](https://developer.github.com/v3/orgs/blocking/#check-whether-a-user-is-blocked-from-an-organization) - Check whether a user is blocked from an organization","x-swgg-tags0":"github-orgs"},"put":{"consumes":[],"description":"[Blocking Organization Users](https://developer.github.com/v3/orgs/blocking/#block-a-user) - Block a user","operationId":"_2Forgs_2F_7Borg_7D_2Fblocks_2F_7Busername_7D_20PUT","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.giant-sentry-fist-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.giant-sentry-fist-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"org","description":"no description","in":"path","name":"org","required":true,"type":"string"},{"default":"username","description":"no description","in":"path","name":"username","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-orgs"],"x-swgg-descriptionLineList":["[Blocking Organization Users](https://developer.github.com/v3/orgs/blocking/#block-a-user) - Block a user"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Blocking Organization Users](https://developer.github.com/v3/orgs/blocking/#block-a-user) - Block a user","x-swgg-tags0":"github-orgs"}},"/orgs/{org}/events":{"get":{"consumes":[],"description":"[Events](https://developer.github.com/v3/activity/events/#list-public-events-for-an-organization) - List public events for an organization","operationId":"_2Forgs_2F_7Borg_7D_2Fevents_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"org","description":"no description","in":"path","name":"org","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-activity"],"x-swgg-descriptionLineList":["[Events](https://developer.github.com/v3/activity/events/#list-public-events-for-an-organization) - List public events for an organization"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Events](https://developer.github.com/v3/activity/events/#list-public-events-for-an-organization) - List public events for an organization","x-swgg-tags0":"github-activity"}},"/orgs/{org}/hooks":{"get":{"consumes":[],"description":"[Organization Webhooks](https://developer.github.com/v3/orgs/hooks/#list-hooks) - List hooks","operationId":"_2Forgs_2F_7Borg_7D_2Fhooks_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"org","description":"no description","in":"path","name":"org","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-orgs"],"x-swgg-descriptionLineList":["[Organization Webhooks](https://developer.github.com/v3/orgs/hooks/#list-hooks) - List hooks"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Organization Webhooks](https://developer.github.com/v3/orgs/hooks/#list-hooks) - List hooks","x-swgg-tags0":"github-orgs"},"post":{"consumes":[],"description":"[Organization Webhooks](https://developer.github.com/v3/orgs/hooks/#create-a-hook) - Create a hook","operationId":"_2Forgs_2F_7Borg_7D_2Fhooks_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"org","description":"no description","in":"path","name":"org","required":true,"type":"string"},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Forgs_2F_7Borg_7D_2Fhooks_20POST.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-orgs"],"x-swgg-descriptionLineList":["[Organization Webhooks](https://developer.github.com/v3/orgs/hooks/#create-a-hook) - Create a hook"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Organization Webhooks](https://developer.github.com/v3/orgs/hooks/#create-a-hook) - Create a hook","x-swgg-tags0":"github-orgs"}},"/orgs/{org}/hooks/{id}":{"delete":{"consumes":[],"description":"[Organization Webhooks](https://developer.github.com/v3/orgs/hooks/#delete-a-hook) - Delete a hook","operationId":"_2Forgs_2F_7Borg_7D_2Fhooks_2F_7Bid_7D_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"org","description":"no description","in":"path","name":"org","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-orgs"],"x-swgg-descriptionLineList":["[Organization Webhooks](https://developer.github.com/v3/orgs/hooks/#delete-a-hook) - Delete a hook"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Organization Webhooks](https://developer.github.com/v3/orgs/hooks/#delete-a-hook) - Delete a hook","x-swgg-tags0":"github-orgs"},"get":{"consumes":[],"description":"[Organization Webhooks](https://developer.github.com/v3/orgs/hooks/#get-single-hook) - Get single hook","operationId":"_2Forgs_2F_7Borg_7D_2Fhooks_2F_7Bid_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"org","description":"no description","in":"path","name":"org","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-orgs"],"x-swgg-descriptionLineList":["[Organization Webhooks](https://developer.github.com/v3/orgs/hooks/#get-single-hook) - Get single hook"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Organization Webhooks](https://developer.github.com/v3/orgs/hooks/#get-single-hook) - Get single hook","x-swgg-tags0":"github-orgs"},"patch":{"consumes":[],"description":"[Organization Webhooks](https://developer.github.com/v3/orgs/hooks/#edit-a-hook) - Edit a hook","operationId":"_2Forgs_2F_7Borg_7D_2Fhooks_2F_7Bid_7D_20PATCH","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"org","description":"no description","in":"path","name":"org","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Forgs_2F_7Borg_7D_2Fhooks_2F_7Bid_7D_20PATCH.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-orgs"],"x-swgg-descriptionLineList":["[Organization Webhooks](https://developer.github.com/v3/orgs/hooks/#edit-a-hook) - Edit a hook"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Organization Webhooks](https://developer.github.com/v3/orgs/hooks/#edit-a-hook) - Edit a hook","x-swgg-tags0":"github-orgs"}},"/orgs/{org}/hooks/{id}/pings":{"post":{"consumes":[],"description":"[Organization Webhooks](https://developer.github.com/v3/orgs/hooks/#ping-a-hook) - Ping a hook\n\nThis will trigger a [ping event](https://developer.github.com/webhooks/#ping-event) to be sent to the hook.","operationId":"_2Forgs_2F_7Borg_7D_2Fhooks_2F_7Bid_7D_2Fpings_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"org","description":"no description","in":"path","name":"org","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-orgs"],"x-swgg-descriptionLineList":["[Organization Webhooks](https://developer.github.com/v3/orgs/hooks/#ping-a-hook) - Ping a hook","","This will trigger a [ping event](https://developer.github.com/webhooks/#ping-event) to be sent to the hook."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Organization Webhooks](https://developer.github.com/v3/orgs/hooks/#ping-a-hook) - Ping a hook","x-swgg-tags0":"github-orgs"}},"/orgs/{org}/invitations":{"get":{"consumes":[],"description":"[Organization Members](https://developer.github.com/v3/orgs/members/#list-pending-organization-invitations) - List pending organization invitations\n\n**Note:** You can now use the API to invite users to a GitHub organization. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-01-25-organization-invitation-api-preview) for full details. To access this feature, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.dazzler-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nThe return hash contains a ```role``` field which refers to the Organization Invitation role and will be one of the following values: ```direct_member```, ```admin```, ```billing_manager```,  ```hiring_manager```, or ```reinstate```. If the invitee is not a GitHub member, the ```login``` field in the return hash will be ```null```.","operationId":"_2Forgs_2F_7Borg_7D_2Finvitations_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.dazzler-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.dazzler-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"org","description":"no description","in":"path","name":"org","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-orgs"],"x-swgg-descriptionLineList":["[Organization Members](https://developer.github.com/v3/orgs/members/#list-pending-organization-invitations) - List pending organization invitations","","**Note:** You can now use the API to invite users to a GitHub organization. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-01-25-organization-invitation-api-preview) for full details. To access this feature, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.dazzler-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","The return hash contains a ```role``` field which refers to the Organization Invitation role and will be one of the following values: ```direct_member```, ```admin```, ```billing_manager```,  ```hiring_manager```, or ```reinstate```. If the invitee is not a GitHub member, the ```login``` field in the return hash will be ```null```."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Organization Members](https://developer.github.com/v3/orgs/members/#list-pending-organization-invitations) - List pending organization invitations","x-swgg-tags0":"github-orgs"},"post":{"consumes":[],"description":"[Organization Members](https://developer.github.com/v3/orgs/members/#create-organization-invitation) - Create organization invitation\n\n**Note:** You can now use the API to invite users to a GitHub organization. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-01-25-organization-invitation-api-preview) for full details. To access this feature, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.dazzler-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nInvite people to an organization by using their GitHub user ID or their email address. In order to create invitations in an organization, the authenticated user must be an organization owner.","operationId":"_2Forgs_2F_7Borg_7D_2Finvitations_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.dazzler-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.dazzler-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"org","description":"no description","in":"path","name":"org","required":true,"type":"string"},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Forgs_2F_7Borg_7D_2Finvitations_20POST.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-orgs"],"x-swgg-descriptionLineList":["[Organization Members](https://developer.github.com/v3/orgs/members/#create-organization-invitation) - Create organization invitation","","**Note:** You can now use the API to invite users to a GitHub organization. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-01-25-organization-invitation-api-preview) for full details. To access this feature, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.dazzler-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","Invite people to an organization by using their GitHub user ID or their email address. In order to create invitations in an organization, the authenticated user must be an organization owner."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Organization Members](https://developer.github.com/v3/orgs/members/#create-organization-invitation) - Create organization invitation","x-swgg-tags0":"github-orgs"}},"/orgs/{org}/invitations/{invitation_id}/teams":{"get":{"consumes":[],"description":"[Organization Members](https://developer.github.com/v3/orgs/members/#list-organization-invitation-teams) - List organization invitation teams\n\n**Note:** You can now use the API to invite users to a GitHub organization. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-01-25-organization-invitation-api-preview) for full details. To access this feature, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.dazzler-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nList all teams associated with an invitation. In order to see invitations in an organization, the authenticated user must be an organization owner.","operationId":"_2Forgs_2F_7Borg_7D_2Finvitations_2F_7Binvitation_id_7D_2Fteams_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.dazzler-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.dazzler-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"org","description":"no description","in":"path","name":"org","required":true,"type":"string"},{"default":"invitation_id","description":"no description","in":"path","name":"invitation_id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-orgs"],"x-swgg-descriptionLineList":["[Organization Members](https://developer.github.com/v3/orgs/members/#list-organization-invitation-teams) - List organization invitation teams","","**Note:** You can now use the API to invite users to a GitHub organization. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-01-25-organization-invitation-api-preview) for full details. To access this feature, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.dazzler-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","List all teams associated with an invitation. In order to see invitations in an organization, the authenticated user must be an organization owner."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Organization Members](https://developer.github.com/v3/orgs/members/#list-organization-invitation-teams) - List organization invitation teams","x-swgg-tags0":"github-orgs"}},"/orgs/{org}/members":{"get":{"consumes":[],"description":"[Organization Members](https://developer.github.com/v3/orgs/members/#members-list) - Members list\n\nList all users who are members of an organization. If the authenticated user is also a member of this organization then both concealed and public members will be returned.","operationId":"_2Forgs_2F_7Borg_7D_2Fmembers_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.dazzler-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.dazzler-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"org","description":"no description","in":"path","name":"org","required":true,"type":"string"},{"description":"Filter members returned in the list. Can be one of:\n* ```2fa_disabled``` - Members without [two-factor authentication](https://github.com/blog/1614-two-factor-authentication) enabled. Available for organization owners.\n* ```all``` - All members the authenticated user can see.\n\nDefault: ```all```","enum":["2fa_disabled","all"],"in":"query","name":"filter","type":"string","x-swgg-descriptionLineList":["Filter members returned in the list. Can be one of:","* ```2fa_disabled``` - Members without [two-factor authentication](https://github.com/blog/1614-two-factor-authentication) enabled. Available for organization owners.","* ```all``` - All members the authenticated user can see.","","Default: ```all```"]},{"description":"Filter members returned by their role. Can be one of:\n* ```all``` - All members of the organization, regardless of role.\n* ```admin``` -  Organization owners.\n* ```member``` - Non-owner organization members.\n\nDefault: ```all```","enum":["all","admin","member"],"in":"query","name":"role","type":"string","x-swgg-descriptionLineList":["Filter members returned by their role. Can be one of:","* ```all``` - All members of the organization, regardless of role.","* ```admin``` -  Organization owners.","* ```member``` - Non-owner organization members.","","Default: ```all```"]}],"responses":{"default":{"description":"default response"}},"tags":["github-orgs"],"x-swgg-descriptionLineList":["[Organization Members](https://developer.github.com/v3/orgs/members/#members-list) - Members list","","List all users who are members of an organization. If the authenticated user is also a member of this organization then both concealed and public members will be returned."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Organization Members](https://developer.github.com/v3/orgs/members/#members-list) - Members list","x-swgg-tags0":"github-orgs"}},"/orgs/{org}/members/{username}":{"delete":{"consumes":[],"description":"[Organization Members](https://developer.github.com/v3/orgs/members/#remove-a-member) - Remove a member\n\nRemoving a user from this list will remove them from all teams and they will no longer have any access to the organization's repositories.","operationId":"_2Forgs_2F_7Borg_7D_2Fmembers_2F_7Busername_7D_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.dazzler-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.dazzler-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"org","description":"no description","in":"path","name":"org","required":true,"type":"string"},{"default":"username","description":"no description","in":"path","name":"username","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-orgs"],"x-swgg-descriptionLineList":["[Organization Members](https://developer.github.com/v3/orgs/members/#remove-a-member) - Remove a member","","Removing a user from this list will remove them from all teams and they will no longer have any access to the organization's repositories."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Organization Members](https://developer.github.com/v3/orgs/members/#remove-a-member) - Remove a member","x-swgg-tags0":"github-orgs"},"get":{"consumes":[],"description":"[Organization Members](https://developer.github.com/v3/orgs/members/#check-membership) - Check membership\n\nCheck if a user is, publicly or privately, a member of the organization.","operationId":"_2Forgs_2F_7Borg_7D_2Fmembers_2F_7Busername_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.dazzler-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.dazzler-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"org","description":"no description","in":"path","name":"org","required":true,"type":"string"},{"default":"username","description":"no description","in":"path","name":"username","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-orgs"],"x-swgg-descriptionLineList":["[Organization Members](https://developer.github.com/v3/orgs/members/#check-membership) - Check membership","","Check if a user is, publicly or privately, a member of the organization."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Organization Members](https://developer.github.com/v3/orgs/members/#check-membership) - Check membership","x-swgg-tags0":"github-orgs"}},"/orgs/{org}/memberships/{username}":{"delete":{"consumes":[],"description":"[Organization Members](https://developer.github.com/v3/orgs/members/#remove-organization-membership) - Remove organization membership\n\nIn order to remove a user's membership with an organization, the authenticated user must be an organization owner.","operationId":"_2Forgs_2F_7Borg_7D_2Fmemberships_2F_7Busername_7D_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.dazzler-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.dazzler-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"org","description":"no description","in":"path","name":"org","required":true,"type":"string"},{"default":"username","description":"no description","in":"path","name":"username","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-orgs"],"x-swgg-descriptionLineList":["[Organization Members](https://developer.github.com/v3/orgs/members/#remove-organization-membership) - Remove organization membership","","In order to remove a user's membership with an organization, the authenticated user must be an organization owner."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Organization Members](https://developer.github.com/v3/orgs/members/#remove-organization-membership) - Remove organization membership","x-swgg-tags0":"github-orgs"},"get":{"consumes":[],"description":"[Organization Members](https://developer.github.com/v3/orgs/members/#get-organization-membership) - Get organization membership\n\nIn order to get a user's membership with an organization, the authenticated user must be an organization member.","operationId":"_2Forgs_2F_7Borg_7D_2Fmemberships_2F_7Busername_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.dazzler-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.dazzler-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"org","description":"no description","in":"path","name":"org","required":true,"type":"string"},{"default":"username","description":"no description","in":"path","name":"username","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-orgs"],"x-swgg-descriptionLineList":["[Organization Members](https://developer.github.com/v3/orgs/members/#get-organization-membership) - Get organization membership","","In order to get a user's membership with an organization, the authenticated user must be an organization member."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Organization Members](https://developer.github.com/v3/orgs/members/#get-organization-membership) - Get organization membership","x-swgg-tags0":"github-orgs"},"put":{"consumes":[],"description":"[Organization Members](https://developer.github.com/v3/orgs/members/#add-or-update-organization-membership) - Add or update organization membership\n\nOnly authenticated organization owners can add a member to the organization or update the member's role.\n-\n\nIf the authenticated user is adding a member to the organization, the invited user will receive an email inviting them to the organization. The user's [membership status](https://developer.github.com/v3/orgs/members/#get-organization-membership) will be ```pending``` until they accept the invitation.\n-\n\nAuthenticated users can update a user's membership by passing the ```role``` parameter. If the authenticated user changes a member's role to ```admin```, the affected user will receive an email notifying them that they've been made an organization owner. If the authenticated user changes an owner's role to ```member```, no email will be sent.","operationId":"_2Forgs_2F_7Borg_7D_2Fmemberships_2F_7Busername_7D_20PUT","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.dazzler-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.dazzler-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"org","description":"no description","in":"path","name":"org","required":true,"type":"string"},{"default":"username","description":"no description","in":"path","name":"username","required":true,"type":"string"},{"description":"The role to give the user in the organization. Can be one of:\n* ```admin``` - The user will become an owner of the organization.\n* ```member``` - The user will become a non-owner member of the organization.\n\nDefault: ```member```","enum":["admin","member"],"in":"query","name":"role","type":"string","x-swgg-descriptionLineList":["The role to give the user in the organization. Can be one of:","* ```admin``` - The user will become an owner of the organization.","* ```member``` - The user will become a non-owner member of the organization.","","Default: ```member```"]}],"responses":{"default":{"description":"default response"}},"tags":["github-orgs"],"x-swgg-descriptionLineList":["[Organization Members](https://developer.github.com/v3/orgs/members/#add-or-update-organization-membership) - Add or update organization membership","","Only authenticated organization owners can add a member to the organization or update the member's role.","-","","If the authenticated user is adding a member to the organization, the invited user will receive an email inviting them to the organization. The user's [membership status](https://developer.github.com/v3/orgs/members/#get-organization-membership) will be ```pending``` until they accept the invitation.","-","","Authenticated users can update a user's membership by passing the ```role``` parameter. If the authenticated user changes a member's role to ```admin```, the affected user will receive an email notifying them that they've been made an organization owner. If the authenticated user changes an owner's role to ```member```, no email will be sent."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Organization Members](https://developer.github.com/v3/orgs/members/#add-or-update-organization-membership) - Add or update organization membership","x-swgg-tags0":"github-orgs"}},"/orgs/{org}/migrations":{"get":{"consumes":[],"description":"[Migrations](https://developer.github.com/v3/migration/migrations/#get-a-list-of-migrations) - Get a list of migrations\n\nLists the most recent migrations.","operationId":"_2Forgs_2F_7Borg_7D_2Fmigrations_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.wyandotte-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.wyandotte-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"org","description":"no description","in":"path","name":"org","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-migration"],"x-swgg-descriptionLineList":["[Migrations](https://developer.github.com/v3/migration/migrations/#get-a-list-of-migrations) - Get a list of migrations","","Lists the most recent migrations."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Migrations](https://developer.github.com/v3/migration/migrations/#get-a-list-of-migrations) - Get a list of migrations","x-swgg-tags0":"github-migration"},"post":{"consumes":[],"description":"[Migrations](https://developer.github.com/v3/migration/migrations/#start-a-migration) - Start a migration\n\nInitiates the generation of a migration archive.","operationId":"_2Forgs_2F_7Borg_7D_2Fmigrations_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.wyandotte-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.wyandotte-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"org","description":"no description","in":"path","name":"org","required":true,"type":"string"},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Forgs_2F_7Borg_7D_2Fmigrations_20POST.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-migration"],"x-swgg-descriptionLineList":["[Migrations](https://developer.github.com/v3/migration/migrations/#start-a-migration) - Start a migration","","Initiates the generation of a migration archive."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Migrations](https://developer.github.com/v3/migration/migrations/#start-a-migration) - Start a migration","x-swgg-tags0":"github-migration"}},"/orgs/{org}/migrations/{id}":{"get":{"consumes":[],"description":"[Migrations](https://developer.github.com/v3/migration/migrations/#get-the-status-of-a-migration) - Get the status of a migration\n\nFetches the status of a migration.","operationId":"_2Forgs_2F_7Borg_7D_2Fmigrations_2F_7Bid_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.wyandotte-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.wyandotte-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"org","description":"no description","in":"path","name":"org","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-migration"],"x-swgg-descriptionLineList":["[Migrations](https://developer.github.com/v3/migration/migrations/#get-the-status-of-a-migration) - Get the status of a migration","","Fetches the status of a migration."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Migrations](https://developer.github.com/v3/migration/migrations/#get-the-status-of-a-migration) - Get the status of a migration","x-swgg-tags0":"github-migration"}},"/orgs/{org}/migrations/{id}/archive":{"delete":{"consumes":[],"description":"[Migrations](https://developer.github.com/v3/migration/migrations/#delete-a-migration-archive) - Delete a migration archive\n\nDeletes a previous migration archive. Migration archives are automatically deleted after seven days.","operationId":"_2Forgs_2F_7Borg_7D_2Fmigrations_2F_7Bid_7D_2Farchive_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.wyandotte-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.wyandotte-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"org","description":"no description","in":"path","name":"org","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-migration"],"x-swgg-descriptionLineList":["[Migrations](https://developer.github.com/v3/migration/migrations/#delete-a-migration-archive) - Delete a migration archive","","Deletes a previous migration archive. Migration archives are automatically deleted after seven days."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Migrations](https://developer.github.com/v3/migration/migrations/#delete-a-migration-archive) - Delete a migration archive","x-swgg-tags0":"github-migration"},"get":{"consumes":[],"description":"[Migrations](https://developer.github.com/v3/migration/migrations/#download-a-migration-archive) - Download a migration archive\n\nFetches the URL to a migration archive.","operationId":"_2Forgs_2F_7Borg_7D_2Fmigrations_2F_7Bid_7D_2Farchive_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.wyandotte-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.wyandotte-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"org","description":"no description","in":"path","name":"org","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-migration"],"x-swgg-descriptionLineList":["[Migrations](https://developer.github.com/v3/migration/migrations/#download-a-migration-archive) - Download a migration archive","","Fetches the URL to a migration archive."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Migrations](https://developer.github.com/v3/migration/migrations/#download-a-migration-archive) - Download a migration archive","x-swgg-tags0":"github-migration"}},"/orgs/{org}/migrations/{id}/repos/{repo_name}/lock":{"delete":{"consumes":[],"description":"[Migrations](https://developer.github.com/v3/migration/migrations/#unlock-a-repository) - Unlock a repository\n\nUnlocks a repository that was locked for migration. You should unlock each migrated repository and [delete them](https://developer.github.com/v3/repos/#delete-a-repository) when the migration is complete and you no longer need the source data.","operationId":"_2Forgs_2F_7Borg_7D_2Fmigrations_2F_7Bid_7D_2Frepos_2F_7Brepo_name_7D_2Flock_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.wyandotte-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.wyandotte-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"org","description":"no description","in":"path","name":"org","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"},{"default":"repo_name","description":"no description","in":"path","name":"repo_name","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-migration"],"x-swgg-descriptionLineList":["[Migrations](https://developer.github.com/v3/migration/migrations/#unlock-a-repository) - Unlock a repository","","Unlocks a repository that was locked for migration. You should unlock each migrated repository and [delete them](https://developer.github.com/v3/repos/#delete-a-repository) when the migration is complete and you no longer need the source data."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Migrations](https://developer.github.com/v3/migration/migrations/#unlock-a-repository) - Unlock a repository","x-swgg-tags0":"github-migration"}},"/orgs/{org}/outside_collaborators":{"get":{"consumes":[],"description":"[Organization Outside Collaborators](https://developer.github.com/v3/orgs/outside_collaborators/#list-outside-collaborators) - List outside collaborators\n\nList all users who are outside collaborators of an organization.","operationId":"_2Forgs_2F_7Borg_7D_2Foutside_collaborators_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"org","description":"no description","in":"path","name":"org","required":true,"type":"string"},{"description":"Filter the list of outside collaborators. Can be one of:\n* ```2fa_disabled```: Outside collaborators without [two-factor authentication](https://github.com/blog/1614-two-factor-authentication) enabled.\n* ```all```: All outside collaborators.\n\nDefault: ```all```","enum":["2fa_disabled","all"],"in":"query","name":"filter","type":"string","x-swgg-descriptionLineList":["Filter the list of outside collaborators. Can be one of:","* ```2fa_disabled```: Outside collaborators without [two-factor authentication](https://github.com/blog/1614-two-factor-authentication) enabled.","* ```all```: All outside collaborators.","","Default: ```all```"]}],"responses":{"default":{"description":"default response"}},"tags":["github-orgs"],"x-swgg-descriptionLineList":["[Organization Outside Collaborators](https://developer.github.com/v3/orgs/outside_collaborators/#list-outside-collaborators) - List outside collaborators","","List all users who are outside collaborators of an organization."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Organization Outside Collaborators](https://developer.github.com/v3/orgs/outside_collaborators/#list-outside-collaborators) - List outside collaborators","x-swgg-tags0":"github-orgs"}},"/orgs/{org}/outside_collaborators/{username}":{"delete":{"consumes":[],"description":"[Organization Outside Collaborators](https://developer.github.com/v3/orgs/outside_collaborators/#remove-outside-collaborator) - Remove outside collaborator\n\nRemoving a user from this list will remove them from all the organization's repositories.","operationId":"_2Forgs_2F_7Borg_7D_2Foutside_collaborators_2F_7Busername_7D_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"org","description":"no description","in":"path","name":"org","required":true,"type":"string"},{"default":"username","description":"no description","in":"path","name":"username","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-orgs"],"x-swgg-descriptionLineList":["[Organization Outside Collaborators](https://developer.github.com/v3/orgs/outside_collaborators/#remove-outside-collaborator) - Remove outside collaborator","","Removing a user from this list will remove them from all the organization's repositories."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Organization Outside Collaborators](https://developer.github.com/v3/orgs/outside_collaborators/#remove-outside-collaborator) - Remove outside collaborator","x-swgg-tags0":"github-orgs"},"put":{"consumes":[],"description":"[Organization Outside Collaborators](https://developer.github.com/v3/orgs/outside_collaborators/#convert-member-to-outside-collaborator) - Convert member to outside collaborator\n\nWhen an organization member is converted to an outside collaborator, they'll only have access to the repositories that their current team membership allows. The user will no longer be a member of the organization. For more information, see \"[Converting an organization member to an outside collaborator](https://help.github.com/articles/converting-an-organization-member-to-an-outside-collaborator/)\".","operationId":"_2Forgs_2F_7Borg_7D_2Foutside_collaborators_2F_7Busername_7D_20PUT","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"org","description":"no description","in":"path","name":"org","required":true,"type":"string"},{"default":"username","description":"no description","in":"path","name":"username","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-orgs"],"x-swgg-descriptionLineList":["[Organization Outside Collaborators](https://developer.github.com/v3/orgs/outside_collaborators/#convert-member-to-outside-collaborator) - Convert member to outside collaborator","","When an organization member is converted to an outside collaborator, they'll only have access to the repositories that their current team membership allows. The user will no longer be a member of the organization. For more information, see \"[Converting an organization member to an outside collaborator](https://help.github.com/articles/converting-an-organization-member-to-an-outside-collaborator/)\"."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Organization Outside Collaborators](https://developer.github.com/v3/orgs/outside_collaborators/#convert-member-to-outside-collaborator) - Convert member to outside collaborator","x-swgg-tags0":"github-orgs"}},"/orgs/{org}/projects":{"get":{"consumes":[],"description":"[Projects](https://developer.github.com/v3/projects/#list-organization-projects) - List organization projects","operationId":"_2Forgs_2F_7Borg_7D_2Fprojects_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.inertia-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.inertia-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"org","description":"no description","in":"path","name":"org","required":true,"type":"string"},{"default":"open","description":"Indicates the state of the projects to return. Can be either ```open```, ```closed```, or ```all```. Default: ```open```","in":"query","name":"state","type":"string","x-swgg-descriptionLineList":["Indicates the state of the projects to return. Can be either ```open```, ```closed```, or ```all```. Default: ```open```"]}],"responses":{"default":{"description":"default response"}},"tags":["github-projects"],"x-swgg-descriptionLineList":["[Projects](https://developer.github.com/v3/projects/#list-organization-projects) - List organization projects"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Projects](https://developer.github.com/v3/projects/#list-organization-projects) - List organization projects","x-swgg-tags0":"github-projects"},"post":{"consumes":[],"description":"[Projects](https://developer.github.com/v3/projects/#create-an-organization-project) - Create an organization project","operationId":"_2Forgs_2F_7Borg_7D_2Fprojects_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.inertia-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.inertia-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"org","description":"no description","in":"path","name":"org","required":true,"type":"string"},{"description":"The body of the project.","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Forgs_2F_7Borg_7D_2Fprojects_20POST.body"},"x-swgg-descriptionLineList":["The body of the project."]}],"responses":{"default":{"description":"default response"}},"tags":["github-projects"],"x-swgg-descriptionLineList":["[Projects](https://developer.github.com/v3/projects/#create-an-organization-project) - Create an organization project"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Projects](https://developer.github.com/v3/projects/#create-an-organization-project) - Create an organization project","x-swgg-tags0":"github-projects"}},"/orgs/{org}/public_members":{"get":{"consumes":[],"description":"[Organization Members](https://developer.github.com/v3/orgs/members/#public-members-list) - Public members list\n\nMembers of an organization can choose to have their membership publicized or not.","operationId":"_2Forgs_2F_7Borg_7D_2Fpublic_members_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.dazzler-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.dazzler-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"org","description":"no description","in":"path","name":"org","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-orgs"],"x-swgg-descriptionLineList":["[Organization Members](https://developer.github.com/v3/orgs/members/#public-members-list) - Public members list","","Members of an organization can choose to have their membership publicized or not."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Organization Members](https://developer.github.com/v3/orgs/members/#public-members-list) - Public members list","x-swgg-tags0":"github-orgs"}},"/orgs/{org}/public_members/{username}":{"delete":{"consumes":[],"description":"[Organization Members](https://developer.github.com/v3/orgs/members/#conceal-a-users-membership) - Conceal a user's membership","operationId":"_2Forgs_2F_7Borg_7D_2Fpublic_members_2F_7Busername_7D_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.dazzler-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.dazzler-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"org","description":"no description","in":"path","name":"org","required":true,"type":"string"},{"default":"username","description":"no description","in":"path","name":"username","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-orgs"],"x-swgg-descriptionLineList":["[Organization Members](https://developer.github.com/v3/orgs/members/#conceal-a-users-membership) - Conceal a user's membership"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Organization Members](https://developer.github.com/v3/orgs/members/#conceal-a-users-membership) - Conceal a user's membership","x-swgg-tags0":"github-orgs"},"get":{"consumes":[],"description":"[Organization Members](https://developer.github.com/v3/orgs/members/#check-public-membership) - Check public membership","operationId":"_2Forgs_2F_7Borg_7D_2Fpublic_members_2F_7Busername_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.dazzler-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.dazzler-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"org","description":"no description","in":"path","name":"org","required":true,"type":"string"},{"default":"username","description":"no description","in":"path","name":"username","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-orgs"],"x-swgg-descriptionLineList":["[Organization Members](https://developer.github.com/v3/orgs/members/#check-public-membership) - Check public membership"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Organization Members](https://developer.github.com/v3/orgs/members/#check-public-membership) - Check public membership","x-swgg-tags0":"github-orgs"},"put":{"consumes":[],"description":"[Organization Members](https://developer.github.com/v3/orgs/members/#publicize-a-users-membership) - Publicize a user's membership\n\nThe user can publicize their own membership. (A user cannot publicize the membership for another user.)","operationId":"_2Forgs_2F_7Borg_7D_2Fpublic_members_2F_7Busername_7D_20PUT","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.dazzler-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.dazzler-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"org","description":"no description","in":"path","name":"org","required":true,"type":"string"},{"default":"username","description":"no description","in":"path","name":"username","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-orgs"],"x-swgg-descriptionLineList":["[Organization Members](https://developer.github.com/v3/orgs/members/#publicize-a-users-membership) - Publicize a user's membership","","The user can publicize their own membership. (A user cannot publicize the membership for another user.)"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Organization Members](https://developer.github.com/v3/orgs/members/#publicize-a-users-membership) - Publicize a user's membership","x-swgg-tags0":"github-orgs"}},"/orgs/{org}/repos":{"get":{"consumes":[],"description":"[Repositories](https://developer.github.com/v3/repos/#list-organization-repositories) - List organization repositories\n\nList repositories for the specified org.","operationId":"_2Forgs_2F_7Borg_7D_2Frepos_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.nightshade-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.mercy-preview+json","application/vnd.github.nightshade-preview+json","application/vnd.github.jean-grey-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"org","description":"no description","in":"path","name":"org","required":true,"type":"string"},{"default":"all","description":"Can be one of ```all```, ```public```, ```private```, ```forks```, ```sources```, ```member```. Default: ```all```","enum":["all","public","private","forks","sources","member"],"in":"query","name":"type","type":"string","x-swgg-descriptionLineList":["Can be one of ```all```, ```public```, ```private```, ```forks```, ```sources```, ```member```. Default: ```all```"]}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Repositories](https://developer.github.com/v3/repos/#list-organization-repositories) - List organization repositories","","List repositories for the specified org."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Repositories](https://developer.github.com/v3/repos/#list-organization-repositories) - List organization repositories","x-swgg-tags0":"github-repos"}},"/orgs/{org}/teams":{"get":{"consumes":[],"description":"[Organization Teams](https://developer.github.com/v3/teams/#list-teams) - List teams\n\n**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.hellcat-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","operationId":"_2Forgs_2F_7Borg_7D_2Fteams_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hellcat-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3.repository+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"org","description":"no description","in":"path","name":"org","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-teams"],"x-swgg-descriptionLineList":["[Organization Teams](https://developer.github.com/v3/teams/#list-teams) - List teams","","**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.hellcat-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Organization Teams](https://developer.github.com/v3/teams/#list-teams) - List teams","x-swgg-tags0":"github-teams"},"post":{"consumes":[],"description":"[Organization Teams](https://developer.github.com/v3/teams/#create-team) - Create team\n\n**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.hellcat-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nTo create a team, the authenticated user must be a member of ```:org```.","operationId":"_2Forgs_2F_7Borg_7D_2Fteams_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hellcat-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3.repository+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"org","description":"no description","in":"path","name":"org","required":true,"type":"string"},{"description":"**Required**. The name of the team.","in":"query","name":"name","required":true,"type":"string","x-swgg-descriptionLineList":["**Required**. The name of the team."]},{"description":"The description of the team.","in":"query","name":"description","type":"string","x-swgg-descriptionLineList":["The description of the team."]},{"description":"The level of privacy this team should have. The options are:\n**For a non-nested team:**\n* ```secret``` - only visible to organization owners and members of this team.\n* ```closed``` - visible to all members of this organization.\nDefault: ```secret```\n**For a parent or child team:**\n* ```closed``` - visible to all members of this organization.\nDefault for child team: ```closed```\n**Note**: You must pass the ```hellcat-preview``` media type to set privacy default to ```closed``` for child teams.","in":"query","name":"privacy","type":"string","x-swgg-descriptionLineList":["The level of privacy this team should have. The options are:","**For a non-nested team:**","* ```secret``` - only visible to organization owners and members of this team.","* ```closed``` - visible to all members of this organization.","Default: ```secret```","**For a parent or child team:**","* ```closed``` - visible to all members of this organization.","Default for child team: ```closed```","**Note**: You must pass the ```hellcat-preview``` media type to set privacy default to ```closed``` for child teams."]},{"description":"**Deprecated**. The permission that new repositories will be added to the team with when none is specified. Can be one of:\n* ```pull``` - team members can pull, but not push to or administer newly-added repositories.\n* ```push``` - team members can pull and push, but not administer newly-added repositories.\n* ```admin``` - team members can pull, push and administer newly-added repositories.\nDefault: ```pull```","enum":["pull","push","admin"],"in":"query","name":"permission","type":"string","x-swgg-descriptionLineList":["**Deprecated**. The permission that new repositories will be added to the team with when none is specified. Can be one of:","* ```pull``` - team members can pull, but not push to or administer newly-added repositories.","* ```push``` - team members can pull and push, but not administer newly-added repositories.","* ```admin``` - team members can pull, push and administer newly-added repositories.","Default: ```pull```"]},{"description":"The ID of a team to set as the parent team. **Note**: You must pass the ```hellcat-preview``` media type to use this parameter.","in":"query","name":"parent_team_id","type":"integer","x-swgg-descriptionLineList":["The ID of a team to set as the parent team. **Note**: You must pass the ```hellcat-preview``` media type to use this parameter."]}],"responses":{"default":{"description":"default response"}},"tags":["github-teams"],"x-swgg-descriptionLineList":["[Organization Teams](https://developer.github.com/v3/teams/#create-team) - Create team","","**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.hellcat-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","To create a team, the authenticated user must be a member of ```:org```."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Organization Teams](https://developer.github.com/v3/teams/#create-team) - Create team","x-swgg-tags0":"github-teams"}},"/projects/columns/cards/{card_id}":{"delete":{"consumes":[],"description":"[Project cards](https://developer.github.com/v3/projects/cards/#delete-a-project-card) - Delete a project card","operationId":"_2Fprojects_2Fcolumns_2Fcards_2F_7Bcard_id_7D_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.inertia-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.inertia-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"card_id","description":"no description","in":"path","name":"card_id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-projects"],"x-swgg-descriptionLineList":["[Project cards](https://developer.github.com/v3/projects/cards/#delete-a-project-card) - Delete a project card"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Project cards](https://developer.github.com/v3/projects/cards/#delete-a-project-card) - Delete a project card","x-swgg-tags0":"github-projects"},"get":{"consumes":[],"description":"[Project cards](https://developer.github.com/v3/projects/cards/#get-a-project-card) - Get a project card","operationId":"_2Fprojects_2Fcolumns_2Fcards_2F_7Bcard_id_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.inertia-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.inertia-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"card_id","description":"no description","in":"path","name":"card_id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-projects"],"x-swgg-descriptionLineList":["[Project cards](https://developer.github.com/v3/projects/cards/#get-a-project-card) - Get a project card"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Project cards](https://developer.github.com/v3/projects/cards/#get-a-project-card) - Get a project card","x-swgg-tags0":"github-projects"},"patch":{"consumes":[],"description":"[Project cards](https://developer.github.com/v3/projects/cards/#update-a-project-card) - Update a project card","operationId":"_2Fprojects_2Fcolumns_2Fcards_2F_7Bcard_id_7D_20PATCH","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.inertia-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.inertia-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"card_id","description":"no description","in":"path","name":"card_id","required":true,"type":"string"},{"description":"The card's note content. Only valid for cards without another type of content, so this cannot be specified if the card already has a ```content_id``` and ```content_type```.","in":"query","name":"note","type":"string","x-swgg-descriptionLineList":["The card's note content. Only valid for cards without another type of content, so this cannot be specified if the card already has a ```content_id``` and ```content_type```."]}],"responses":{"default":{"description":"default response"}},"tags":["github-projects"],"x-swgg-descriptionLineList":["[Project cards](https://developer.github.com/v3/projects/cards/#update-a-project-card) - Update a project card"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Project cards](https://developer.github.com/v3/projects/cards/#update-a-project-card) - Update a project card","x-swgg-tags0":"github-projects"}},"/projects/columns/cards/{card_id}/moves":{"post":{"consumes":[],"description":"[Project cards](https://developer.github.com/v3/projects/cards/#move-a-project-card) - Move a project card","operationId":"_2Fprojects_2Fcolumns_2Fcards_2F_7Bcard_id_7D_2Fmoves_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.inertia-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.inertia-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"card_id","description":"no description","in":"path","name":"card_id","required":true,"type":"string"},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Fprojects_2Fcolumns_2Fcards_2F_7Bcard_id_7D_2Fmoves_20POST.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-projects"],"x-swgg-descriptionLineList":["[Project cards](https://developer.github.com/v3/projects/cards/#move-a-project-card) - Move a project card"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Project cards](https://developer.github.com/v3/projects/cards/#move-a-project-card) - Move a project card","x-swgg-tags0":"github-projects"}},"/projects/columns/{column_id}":{"delete":{"consumes":[],"description":"[Project columns](https://developer.github.com/v3/projects/columns/#delete-a-project-column) - Delete a project column","operationId":"_2Fprojects_2Fcolumns_2F_7Bcolumn_id_7D_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.inertia-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.inertia-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"column_id","description":"no description","in":"path","name":"column_id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-projects"],"x-swgg-descriptionLineList":["[Project columns](https://developer.github.com/v3/projects/columns/#delete-a-project-column) - Delete a project column"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Project columns](https://developer.github.com/v3/projects/columns/#delete-a-project-column) - Delete a project column","x-swgg-tags0":"github-projects"},"get":{"consumes":[],"description":"[Project columns](https://developer.github.com/v3/projects/columns/#get-a-project-column) - Get a project column","operationId":"_2Fprojects_2Fcolumns_2F_7Bcolumn_id_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.inertia-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.inertia-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"column_id","description":"no description","in":"path","name":"column_id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-projects"],"x-swgg-descriptionLineList":["[Project columns](https://developer.github.com/v3/projects/columns/#get-a-project-column) - Get a project column"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Project columns](https://developer.github.com/v3/projects/columns/#get-a-project-column) - Get a project column","x-swgg-tags0":"github-projects"},"patch":{"consumes":[],"description":"[Project columns](https://developer.github.com/v3/projects/columns/#update-a-project-column) - Update a project column","operationId":"_2Fprojects_2Fcolumns_2F_7Bcolumn_id_7D_20PATCH","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.inertia-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.inertia-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"column_id","description":"no description","in":"path","name":"column_id","required":true,"type":"string"},{"description":"**Required**. The new name of the column.","in":"query","name":"name","required":true,"type":"string","x-swgg-descriptionLineList":["**Required**. The new name of the column."]}],"responses":{"default":{"description":"default response"}},"tags":["github-projects"],"x-swgg-descriptionLineList":["[Project columns](https://developer.github.com/v3/projects/columns/#update-a-project-column) - Update a project column"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Project columns](https://developer.github.com/v3/projects/columns/#update-a-project-column) - Update a project column","x-swgg-tags0":"github-projects"}},"/projects/columns/{column_id}/cards":{"get":{"consumes":[],"description":"[Project cards](https://developer.github.com/v3/projects/cards/#list-project-cards) - List project cards","operationId":"_2Fprojects_2Fcolumns_2F_7Bcolumn_id_7D_2Fcards_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.inertia-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.inertia-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"column_id","description":"no description","in":"path","name":"column_id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-projects"],"x-swgg-descriptionLineList":["[Project cards](https://developer.github.com/v3/projects/cards/#list-project-cards) - List project cards"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Project cards](https://developer.github.com/v3/projects/cards/#list-project-cards) - List project cards","x-swgg-tags0":"github-projects"},"post":{"consumes":[],"description":"[Project cards](https://developer.github.com/v3/projects/cards/#create-a-project-card) - Create a project card","operationId":"_2Fprojects_2Fcolumns_2F_7Bcolumn_id_7D_2Fcards_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.inertia-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.inertia-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"column_id","description":"no description","in":"path","name":"column_id","required":true,"type":"string"},{"description":"The card's note content. Only valid for cards without another type of content, so this must be omitted if ```content_id``` and ```content_type``` are specified.","in":"query","name":"note","type":"string","x-swgg-descriptionLineList":["The card's note content. Only valid for cards without another type of content, so this must be omitted if ```content_id``` and ```content_type``` are specified."]},{"description":"The id of the issue to associate with this card.","in":"query","name":"content_id","type":"integer","x-swgg-descriptionLineList":["The id of the issue to associate with this card."]},{"description":"**Required if you specify a content_id**. The type of content to associate with this card. Can only be \"Issue\" at this time.","in":"query","name":"content_type","type":"string","x-swgg-descriptionLineList":["**Required if you specify a content_id**. The type of content to associate with this card. Can only be \"Issue\" at this time."]}],"responses":{"default":{"description":"default response"}},"tags":["github-projects"],"x-swgg-descriptionLineList":["[Project cards](https://developer.github.com/v3/projects/cards/#create-a-project-card) - Create a project card"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Project cards](https://developer.github.com/v3/projects/cards/#create-a-project-card) - Create a project card","x-swgg-tags0":"github-projects"}},"/projects/columns/{column_id}/moves":{"post":{"consumes":[],"description":"[Project columns](https://developer.github.com/v3/projects/columns/#move-a-project-column) - Move a project column","operationId":"_2Fprojects_2Fcolumns_2F_7Bcolumn_id_7D_2Fmoves_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.inertia-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.inertia-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"column_id","description":"no description","in":"path","name":"column_id","required":true,"type":"string"},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Fprojects_2Fcolumns_2F_7Bcolumn_id_7D_2Fmoves_20POST.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-projects"],"x-swgg-descriptionLineList":["[Project columns](https://developer.github.com/v3/projects/columns/#move-a-project-column) - Move a project column"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Project columns](https://developer.github.com/v3/projects/columns/#move-a-project-column) - Move a project column","x-swgg-tags0":"github-projects"}},"/projects/{project_id}":{"delete":{"consumes":[],"description":"[Projects](https://developer.github.com/v3/projects/#delete-a-project) - Delete a project","operationId":"_2Fprojects_2F_7Bproject_id_7D_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.inertia-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.inertia-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"project_id","description":"no description","in":"path","name":"project_id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-projects"],"x-swgg-descriptionLineList":["[Projects](https://developer.github.com/v3/projects/#delete-a-project) - Delete a project"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Projects](https://developer.github.com/v3/projects/#delete-a-project) - Delete a project","x-swgg-tags0":"github-projects"},"get":{"consumes":[],"description":"[Projects](https://developer.github.com/v3/projects/#get-a-project) - Get a project","operationId":"_2Fprojects_2F_7Bproject_id_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.inertia-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.inertia-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"project_id","description":"no description","in":"path","name":"project_id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-projects"],"x-swgg-descriptionLineList":["[Projects](https://developer.github.com/v3/projects/#get-a-project) - Get a project"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Projects](https://developer.github.com/v3/projects/#get-a-project) - Get a project","x-swgg-tags0":"github-projects"},"patch":{"consumes":[],"description":"[Projects](https://developer.github.com/v3/projects/#update-a-project) - Update a project","operationId":"_2Fprojects_2F_7Bproject_id_7D_20PATCH","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.inertia-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.inertia-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"project_id","description":"no description","in":"path","name":"project_id","required":true,"type":"string"},{"description":"The body of the project.","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Fprojects_2F_7Bproject_id_7D_20PATCH.body"},"x-swgg-descriptionLineList":["The body of the project."]}],"responses":{"default":{"description":"default response"}},"tags":["github-projects"],"x-swgg-descriptionLineList":["[Projects](https://developer.github.com/v3/projects/#update-a-project) - Update a project"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Projects](https://developer.github.com/v3/projects/#update-a-project) - Update a project","x-swgg-tags0":"github-projects"}},"/projects/{project_id}/columns":{"get":{"consumes":[],"description":"[Project columns](https://developer.github.com/v3/projects/columns/#list-project-columns) - List project columns","operationId":"_2Fprojects_2F_7Bproject_id_7D_2Fcolumns_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.inertia-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.inertia-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"project_id","description":"no description","in":"path","name":"project_id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-projects"],"x-swgg-descriptionLineList":["[Project columns](https://developer.github.com/v3/projects/columns/#list-project-columns) - List project columns"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Project columns](https://developer.github.com/v3/projects/columns/#list-project-columns) - List project columns","x-swgg-tags0":"github-projects"},"post":{"consumes":[],"description":"[Project columns](https://developer.github.com/v3/projects/columns/#create-a-project-column) - Create a project column","operationId":"_2Fprojects_2F_7Bproject_id_7D_2Fcolumns_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.inertia-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.inertia-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"project_id","description":"no description","in":"path","name":"project_id","required":true,"type":"string"},{"description":"**Required**. The name of the column.","in":"query","name":"name","required":true,"type":"string","x-swgg-descriptionLineList":["**Required**. The name of the column."]}],"responses":{"default":{"description":"default response"}},"tags":["github-projects"],"x-swgg-descriptionLineList":["[Project columns](https://developer.github.com/v3/projects/columns/#create-a-project-column) - Create a project column"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Project columns](https://developer.github.com/v3/projects/columns/#create-a-project-column) - Create a project column","x-swgg-tags0":"github-projects"}},"/rate_limit":{"get":{"consumes":[],"description":"[Rate Limit](https://developer.github.com/v3/rate_limit/#get-your-current-rate-limit-status) - Get your current rate limit status\n\nNote: Accessing this endpoint does not count against your rate limit.","operationId":"_2Frate_limit_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]}],"responses":{"default":{"description":"default response"}},"tags":["github-misc"],"x-swgg-descriptionLineList":["[Rate Limit](https://developer.github.com/v3/rate_limit/#get-your-current-rate-limit-status) - Get your current rate limit status","","Note: Accessing this endpoint does not count against your rate limit."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Rate Limit](https://developer.github.com/v3/rate_limit/#get-your-current-rate-limit-status) - Get your current rate limit status","x-swgg-tags0":"github-misc"}},"/reactions/{id}":{"delete":{"consumes":[],"description":"[Reactions](https://developer.github.com/v3/reactions/#delete-a-reaction) - Delete a reaction\n\n**Note:** The team discussions API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.echo-preview+json\n```\n\n**Note:** APIs for managing reactions are currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.squirrel-girl-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nOAuth access tokens require the ```read:discussion``` [scope](https://developer.github.com/apps/building-oauth-apps/scopes-for-oauth-apps/), when deleting a [team discussion](https://developer.github.com/v3/teams/discussions/) or [team discussion comment](https://developer.github.com/v3/teams/discussion_comments/).","operationId":"_2Freactions_2F_7Bid_7D_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.squirrel-girl-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.squirrel-girl-preview+json","application/vnd.github.jean-grey-preview+json","application/vnd.github.echo-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-reactions"],"x-swgg-descriptionLineList":["[Reactions](https://developer.github.com/v3/reactions/#delete-a-reaction) - Delete a reaction","","**Note:** The team discussions API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.echo-preview+json","```","","**Note:** APIs for managing reactions are currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.squirrel-girl-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","OAuth access tokens require the ```read:discussion``` [scope](https://developer.github.com/apps/building-oauth-apps/scopes-for-oauth-apps/), when deleting a [team discussion](https://developer.github.com/v3/teams/discussions/) or [team discussion comment](https://developer.github.com/v3/teams/discussion_comments/)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Reactions](https://developer.github.com/v3/reactions/#delete-a-reaction) - Delete a reaction","x-swgg-tags0":"github-reactions"}},"/repos/{owner}/{name}/community/profile":{"get":{"consumes":[],"description":"[Community](https://developer.github.com/v3/repos/community/#retrieve-community-profile-metrics) - Retrieve community profile metrics","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Bname_7D_2Fcommunity_2Fprofile_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.black-panther-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.black-panther-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"name","description":"no description","in":"path","name":"name","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Community](https://developer.github.com/v3/repos/community/#retrieve-community-profile-metrics) - Retrieve community profile metrics"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Community](https://developer.github.com/v3/repos/community/#retrieve-community-profile-metrics) - Retrieve community profile metrics","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}":{"delete":{"consumes":[],"description":"[Repositories](https://developer.github.com/v3/repos/#delete-a-repository) - Delete a repository\n\nDeleting a repository requires admin access.  If OAuth is used, the ```delete_repo``` scope is required.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.nightshade-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.mercy-preview+json","application/vnd.github.nightshade-preview+json","application/vnd.github.jean-grey-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Repositories](https://developer.github.com/v3/repos/#delete-a-repository) - Delete a repository","","Deleting a repository requires admin access.  If OAuth is used, the ```delete_repo``` scope is required."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Repositories](https://developer.github.com/v3/repos/#delete-a-repository) - Delete a repository","x-swgg-tags0":"github-repos"},"get":{"consumes":[],"description":"[Codes of Conduct](https://developer.github.com/v3/codes_of_conduct/#get-a-repositorys-code-of-conduct) - Get a repository's code of conduct\n\nWhen passed the preview media type, requests to get a repository will also return the repository's code of conduct if it can be detected from the repository's code of conduct file.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.scarlet-witch-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.scarlet-witch-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-misc"],"x-swgg-descriptionLineList":["[Codes of Conduct](https://developer.github.com/v3/codes_of_conduct/#get-a-repositorys-code-of-conduct) - Get a repository's code of conduct","","When passed the preview media type, requests to get a repository will also return the repository's code of conduct if it can be detected from the repository's code of conduct file."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Codes of Conduct](https://developer.github.com/v3/codes_of_conduct/#get-a-repositorys-code-of-conduct) - Get a repository's code of conduct","x-swgg-tags0":"github-misc"},"patch":{"consumes":[],"description":"[Repositories](https://developer.github.com/v3/repos/#edit) - Edit","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_20PATCH","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.nightshade-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.mercy-preview+json","application/vnd.github.nightshade-preview+json","application/vnd.github.jean-grey-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_20PATCH.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Repositories](https://developer.github.com/v3/repos/#edit) - Edit"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Repositories](https://developer.github.com/v3/repos/#edit) - Edit","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}#1":{"get":{"consumes":[],"description":"[Repositories](https://developer.github.com/v3/repos/#get) - Get","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_231_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.nightshade-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.mercy-preview+json","application/vnd.github.nightshade-preview+json","application/vnd.github.jean-grey-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Repositories](https://developer.github.com/v3/repos/#get) - Get"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Repositories](https://developer.github.com/v3/repos/#get) - Get","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/assignees":{"get":{"consumes":[],"description":"[Issue Assignees](https://developer.github.com/v3/issues/assignees/#list-assignees) - List assignees\n\nLists the [available assignees](https://help.github.com/articles/assigning-issues-and-pull-requests-to-other-github-users/) for issues in a repository.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fassignees_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.symmetra-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.symmetra-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-issues"],"x-swgg-descriptionLineList":["[Issue Assignees](https://developer.github.com/v3/issues/assignees/#list-assignees) - List assignees","","Lists the [available assignees](https://help.github.com/articles/assigning-issues-and-pull-requests-to-other-github-users/) for issues in a repository."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Issue Assignees](https://developer.github.com/v3/issues/assignees/#list-assignees) - List assignees","x-swgg-tags0":"github-issues"}},"/repos/{owner}/{repo}/assignees/{assignee}":{"get":{"consumes":[],"description":"[Issue Assignees](https://developer.github.com/v3/issues/assignees/#check-assignee) - Check assignee\n\nChecks if a user has permission to be assigned to an issue in this repository.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fassignees_2F_7Bassignee_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.symmetra-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.symmetra-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"assignee","description":"no description","in":"path","name":"assignee","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-issues"],"x-swgg-descriptionLineList":["[Issue Assignees](https://developer.github.com/v3/issues/assignees/#check-assignee) - Check assignee","","Checks if a user has permission to be assigned to an issue in this repository."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Issue Assignees](https://developer.github.com/v3/issues/assignees/#check-assignee) - Check assignee","x-swgg-tags0":"github-issues"}},"/repos/{owner}/{repo}/branches":{"get":{"consumes":[],"description":"[Branches](https://developer.github.com/v3/repos/branches/#list-branches) - List branches","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fbranches_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hellcat-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.luke-cage-preview+json","application/vnd.github.zzzax-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"description":"Setting to ```true``` returns only protected branches.","in":"query","name":"protected","type":"boolean","x-swgg-descriptionLineList":["Setting to ```true``` returns only protected branches."]}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Branches](https://developer.github.com/v3/repos/branches/#list-branches) - List branches"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Branches](https://developer.github.com/v3/repos/branches/#list-branches) - List branches","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/branches/{branch}":{"get":{"consumes":[],"description":"[Branches](https://developer.github.com/v3/repos/branches/#get-branch) - Get branch","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fbranches_2F_7Bbranch_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hellcat-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.luke-cage-preview+json","application/vnd.github.zzzax-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"branch","description":"no description","in":"path","name":"branch","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Branches](https://developer.github.com/v3/repos/branches/#get-branch) - Get branch"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Branches](https://developer.github.com/v3/repos/branches/#get-branch) - Get branch","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/branches/{branch}/protection":{"delete":{"consumes":[],"description":"[Branches](https://developer.github.com/v3/repos/branches/#remove-branch-protection) - Remove branch protection","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fbranches_2F_7Bbranch_7D_2Fprotection_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hellcat-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.luke-cage-preview+json","application/vnd.github.zzzax-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"branch","description":"no description","in":"path","name":"branch","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Branches](https://developer.github.com/v3/repos/branches/#remove-branch-protection) - Remove branch protection"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Branches](https://developer.github.com/v3/repos/branches/#remove-branch-protection) - Remove branch protection","x-swgg-tags0":"github-repos"},"get":{"consumes":[],"description":"[Branches](https://developer.github.com/v3/repos/branches/#get-branch-protection) - Get branch protection\n\n**Note:** The Protected Branches API now has a setting for requiring a specified number of approving pull request reviews before merging. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-03-16-protected-branches-required-approving-reviews) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.luke-cage-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fbranches_2F_7Bbranch_7D_2Fprotection_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hellcat-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.luke-cage-preview+json","application/vnd.github.zzzax-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"branch","description":"no description","in":"path","name":"branch","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Branches](https://developer.github.com/v3/repos/branches/#get-branch-protection) - Get branch protection","","**Note:** The Protected Branches API now has a setting for requiring a specified number of approving pull request reviews before merging. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-03-16-protected-branches-required-approving-reviews) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.luke-cage-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Branches](https://developer.github.com/v3/repos/branches/#get-branch-protection) - Get branch protection","x-swgg-tags0":"github-repos"},"put":{"consumes":[],"description":"[Branches](https://developer.github.com/v3/repos/branches/#update-branch-protection) - Update branch protection\n\n**Note:** The Protected Branches API now has a setting for requiring a specified number of approving pull request reviews before merging. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-03-16-protected-branches-required-approving-reviews) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.luke-cage-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nProtecting a branch requires admin or owner permissions to the repository.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fbranches_2F_7Bbranch_7D_2Fprotection_20PUT","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hellcat-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.luke-cage-preview+json","application/vnd.github.zzzax-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"branch","description":"no description","in":"path","name":"branch","required":true,"type":"string"},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fbranches_2F_7Bbranch_7D_2Fprotection_20PUT.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Branches](https://developer.github.com/v3/repos/branches/#update-branch-protection) - Update branch protection","","**Note:** The Protected Branches API now has a setting for requiring a specified number of approving pull request reviews before merging. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-03-16-protected-branches-required-approving-reviews) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.luke-cage-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","Protecting a branch requires admin or owner permissions to the repository."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Branches](https://developer.github.com/v3/repos/branches/#update-branch-protection) - Update branch protection","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins":{"delete":{"consumes":[],"description":"[Branches](https://developer.github.com/v3/repos/branches/#remove-admin-enforcement-of-protected-branch) - Remove admin enforcement of protected branch\n\nRemoving admin enforcement requires admin or owner permissions to the repository and branch protection to be enabled.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fbranches_2F_7Bbranch_7D_2Fprotection_2Fenforce_admins_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hellcat-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.luke-cage-preview+json","application/vnd.github.zzzax-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"branch","description":"no description","in":"path","name":"branch","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Branches](https://developer.github.com/v3/repos/branches/#remove-admin-enforcement-of-protected-branch) - Remove admin enforcement of protected branch","","Removing admin enforcement requires admin or owner permissions to the repository and branch protection to be enabled."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Branches](https://developer.github.com/v3/repos/branches/#remove-admin-enforcement-of-protected-branch) - Remove admin enforcement of protected branch","x-swgg-tags0":"github-repos"},"get":{"consumes":[],"description":"[Branches](https://developer.github.com/v3/repos/branches/#get-admin-enforcement-of-protected-branch) - Get admin enforcement of protected branch","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fbranches_2F_7Bbranch_7D_2Fprotection_2Fenforce_admins_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hellcat-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.luke-cage-preview+json","application/vnd.github.zzzax-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"branch","description":"no description","in":"path","name":"branch","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Branches](https://developer.github.com/v3/repos/branches/#get-admin-enforcement-of-protected-branch) - Get admin enforcement of protected branch"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Branches](https://developer.github.com/v3/repos/branches/#get-admin-enforcement-of-protected-branch) - Get admin enforcement of protected branch","x-swgg-tags0":"github-repos"},"post":{"consumes":[],"description":"[Branches](https://developer.github.com/v3/repos/branches/#add-admin-enforcement-of-protected-branch) - Add admin enforcement of protected branch\n\nAdding admin enforcement requires admin or owner permissions to the repository and branch protection to be enabled.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fbranches_2F_7Bbranch_7D_2Fprotection_2Fenforce_admins_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hellcat-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.luke-cage-preview+json","application/vnd.github.zzzax-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"branch","description":"no description","in":"path","name":"branch","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Branches](https://developer.github.com/v3/repos/branches/#add-admin-enforcement-of-protected-branch) - Add admin enforcement of protected branch","","Adding admin enforcement requires admin or owner permissions to the repository and branch protection to be enabled."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Branches](https://developer.github.com/v3/repos/branches/#add-admin-enforcement-of-protected-branch) - Add admin enforcement of protected branch","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews":{"delete":{"consumes":[],"description":"[Branches](https://developer.github.com/v3/repos/branches/#remove-pull-request-review-enforcement-of-protected-branch) - Remove pull request review enforcement of protected branch","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fbranches_2F_7Bbranch_7D_2Fprotection_2Frequired_pull_request_reviews_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hellcat-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.luke-cage-preview+json","application/vnd.github.zzzax-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"branch","description":"no description","in":"path","name":"branch","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Branches](https://developer.github.com/v3/repos/branches/#remove-pull-request-review-enforcement-of-protected-branch) - Remove pull request review enforcement of protected branch"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Branches](https://developer.github.com/v3/repos/branches/#remove-pull-request-review-enforcement-of-protected-branch) - Remove pull request review enforcement of protected branch","x-swgg-tags0":"github-repos"},"get":{"consumes":[],"description":"[Branches](https://developer.github.com/v3/repos/branches/#get-pull-request-review-enforcement-of-protected-branch) - Get pull request review enforcement of protected branch\n\n**Note:** The Protected Branches API now has a setting for requiring a specified number of approving pull request reviews before merging. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-03-16-protected-branches-required-approving-reviews) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.luke-cage-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fbranches_2F_7Bbranch_7D_2Fprotection_2Frequired_pull_request_reviews_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hellcat-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.luke-cage-preview+json","application/vnd.github.zzzax-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"branch","description":"no description","in":"path","name":"branch","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Branches](https://developer.github.com/v3/repos/branches/#get-pull-request-review-enforcement-of-protected-branch) - Get pull request review enforcement of protected branch","","**Note:** The Protected Branches API now has a setting for requiring a specified number of approving pull request reviews before merging. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-03-16-protected-branches-required-approving-reviews) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.luke-cage-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Branches](https://developer.github.com/v3/repos/branches/#get-pull-request-review-enforcement-of-protected-branch) - Get pull request review enforcement of protected branch","x-swgg-tags0":"github-repos"},"patch":{"consumes":[],"description":"[Branches](https://developer.github.com/v3/repos/branches/#update-pull-request-review-enforcement-of-protected-branch) - Update pull request review enforcement of protected branch\n\n**Note:** The Protected Branches API now has a setting for requiring a specified number of approving pull request reviews before merging. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-03-16-protected-branches-required-approving-reviews) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.luke-cage-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nUpdating pull request review enforcement requires admin or owner permissions to the repository and branch protection to be enabled.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fbranches_2F_7Bbranch_7D_2Fprotection_2Frequired_pull_request_reviews_20PATCH","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hellcat-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.luke-cage-preview+json","application/vnd.github.zzzax-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"branch","description":"no description","in":"path","name":"branch","required":true,"type":"string"},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fbranches_2F_7Bbranch_7D_2Fprotection_2Frequired_pull_request_reviews_20PATCH.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Branches](https://developer.github.com/v3/repos/branches/#update-pull-request-review-enforcement-of-protected-branch) - Update pull request review enforcement of protected branch","","**Note:** The Protected Branches API now has a setting for requiring a specified number of approving pull request reviews before merging. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-03-16-protected-branches-required-approving-reviews) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.luke-cage-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","Updating pull request review enforcement requires admin or owner permissions to the repository and branch protection to be enabled."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Branches](https://developer.github.com/v3/repos/branches/#update-pull-request-review-enforcement-of-protected-branch) - Update pull request review enforcement of protected branch","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/branches/{branch}/protection/required_signatures":{"delete":{"consumes":[],"description":"[Branches](https://developer.github.com/v3/repos/branches/#remove-required-signatures-of-protected-branch) - Remove required signatures of protected branch\n\n**Note:** Protected Branches API can now manage a setting for requiring signed commits. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-22-protected-branches-required-signatures) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.zzzax-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nWhen authenticated with admin or owner permissions to the repository, you can use this endpoint to disable required signed commits on a branch. You must enable branch protection to require signed commits.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fbranches_2F_7Bbranch_7D_2Fprotection_2Frequired_signatures_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hellcat-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.luke-cage-preview+json","application/vnd.github.zzzax-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"branch","description":"no description","in":"path","name":"branch","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Branches](https://developer.github.com/v3/repos/branches/#remove-required-signatures-of-protected-branch) - Remove required signatures of protected branch","","**Note:** Protected Branches API can now manage a setting for requiring signed commits. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-22-protected-branches-required-signatures) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.zzzax-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","When authenticated with admin or owner permissions to the repository, you can use this endpoint to disable required signed commits on a branch. You must enable branch protection to require signed commits."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Branches](https://developer.github.com/v3/repos/branches/#remove-required-signatures-of-protected-branch) - Remove required signatures of protected branch","x-swgg-tags0":"github-repos"},"get":{"consumes":[],"description":"[Branches](https://developer.github.com/v3/repos/branches/#get-required-signatures-of-protected-branch) - Get required signatures of protected branch\n\n**Note:** Protected Branches API can now manage a setting for requiring signed commits. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-22-protected-branches-required-signatures) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.zzzax-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nWhen authenticated with admin or owner permissions to the repository, you can use this endpoint to check whether a branch requires signed commits. An enabled status of ```true``` indicates you must sign commits on this branch. For more information, see [Signing commits with GPG](https://help.github.com/articles/signing-commits-with-gpg) in GitHub Help.\n\n**Note**: You must enable branch protection to require signed commits.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fbranches_2F_7Bbranch_7D_2Fprotection_2Frequired_signatures_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hellcat-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.luke-cage-preview+json","application/vnd.github.zzzax-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"branch","description":"no description","in":"path","name":"branch","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Branches](https://developer.github.com/v3/repos/branches/#get-required-signatures-of-protected-branch) - Get required signatures of protected branch","","**Note:** Protected Branches API can now manage a setting for requiring signed commits. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-22-protected-branches-required-signatures) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.zzzax-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","When authenticated with admin or owner permissions to the repository, you can use this endpoint to check whether a branch requires signed commits. An enabled status of ```true``` indicates you must sign commits on this branch. For more information, see [Signing commits with GPG](https://help.github.com/articles/signing-commits-with-gpg) in GitHub Help.","","**Note**: You must enable branch protection to require signed commits."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Branches](https://developer.github.com/v3/repos/branches/#get-required-signatures-of-protected-branch) - Get required signatures of protected branch","x-swgg-tags0":"github-repos"},"post":{"consumes":[],"description":"[Branches](https://developer.github.com/v3/repos/branches/#add-required-signatures-of-protected-branch) - Add required signatures of protected branch\n\n**Note:** Protected Branches API can now manage a setting for requiring signed commits. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-22-protected-branches-required-signatures) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.zzzax-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nWhen authenticated with admin or owner permissions to the repository, you can use this endpoint to require signed commits on a branch. You must enable branch protection to require signed commits.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fbranches_2F_7Bbranch_7D_2Fprotection_2Frequired_signatures_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hellcat-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.luke-cage-preview+json","application/vnd.github.zzzax-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"branch","description":"no description","in":"path","name":"branch","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Branches](https://developer.github.com/v3/repos/branches/#add-required-signatures-of-protected-branch) - Add required signatures of protected branch","","**Note:** Protected Branches API can now manage a setting for requiring signed commits. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-22-protected-branches-required-signatures) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.zzzax-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","When authenticated with admin or owner permissions to the repository, you can use this endpoint to require signed commits on a branch. You must enable branch protection to require signed commits."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Branches](https://developer.github.com/v3/repos/branches/#add-required-signatures-of-protected-branch) - Add required signatures of protected branch","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks":{"delete":{"consumes":[],"description":"[Branches](https://developer.github.com/v3/repos/branches/#remove-required-status-checks-of-protected-branch) - Remove required status checks of protected branch","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fbranches_2F_7Bbranch_7D_2Fprotection_2Frequired_status_checks_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hellcat-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.luke-cage-preview+json","application/vnd.github.zzzax-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"branch","description":"no description","in":"path","name":"branch","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Branches](https://developer.github.com/v3/repos/branches/#remove-required-status-checks-of-protected-branch) - Remove required status checks of protected branch"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Branches](https://developer.github.com/v3/repos/branches/#remove-required-status-checks-of-protected-branch) - Remove required status checks of protected branch","x-swgg-tags0":"github-repos"},"get":{"consumes":[],"description":"[Branches](https://developer.github.com/v3/repos/branches/#get-required-status-checks-of-protected-branch) - Get required status checks of protected branch","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fbranches_2F_7Bbranch_7D_2Fprotection_2Frequired_status_checks_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hellcat-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.luke-cage-preview+json","application/vnd.github.zzzax-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"branch","description":"no description","in":"path","name":"branch","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Branches](https://developer.github.com/v3/repos/branches/#get-required-status-checks-of-protected-branch) - Get required status checks of protected branch"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Branches](https://developer.github.com/v3/repos/branches/#get-required-status-checks-of-protected-branch) - Get required status checks of protected branch","x-swgg-tags0":"github-repos"},"patch":{"consumes":[],"description":"[Branches](https://developer.github.com/v3/repos/branches/#update-required-status-checks-of-protected-branch) - Update required status checks of protected branch\n\nUpdating required status checks requires admin or owner permissions to the repository and branch protection to be enabled.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fbranches_2F_7Bbranch_7D_2Fprotection_2Frequired_status_checks_20PATCH","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hellcat-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.luke-cage-preview+json","application/vnd.github.zzzax-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"branch","description":"no description","in":"path","name":"branch","required":true,"type":"string"},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fbranches_2F_7Bbranch_7D_2Fprotection_2Frequired_status_checks_20PATCH.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Branches](https://developer.github.com/v3/repos/branches/#update-required-status-checks-of-protected-branch) - Update required status checks of protected branch","","Updating required status checks requires admin or owner permissions to the repository and branch protection to be enabled."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Branches](https://developer.github.com/v3/repos/branches/#update-required-status-checks-of-protected-branch) - Update required status checks of protected branch","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts":{"delete":{"consumes":[],"description":"[Branches](https://developer.github.com/v3/repos/branches/#remove-required-status-checks-contexts-of-protected-branch) - Remove required status checks contexts of protected branch","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fbranches_2F_7Bbranch_7D_2Fprotection_2Frequired_status_checks_2Fcontexts_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hellcat-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.luke-cage-preview+json","application/vnd.github.zzzax-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"branch","description":"no description","in":"path","name":"branch","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Branches](https://developer.github.com/v3/repos/branches/#remove-required-status-checks-contexts-of-protected-branch) - Remove required status checks contexts of protected branch"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Branches](https://developer.github.com/v3/repos/branches/#remove-required-status-checks-contexts-of-protected-branch) - Remove required status checks contexts of protected branch","x-swgg-tags0":"github-repos"},"get":{"consumes":[],"description":"[Branches](https://developer.github.com/v3/repos/branches/#list-required-status-checks-contexts-of-protected-branch) - List required status checks contexts of protected branch","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fbranches_2F_7Bbranch_7D_2Fprotection_2Frequired_status_checks_2Fcontexts_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hellcat-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.luke-cage-preview+json","application/vnd.github.zzzax-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"branch","description":"no description","in":"path","name":"branch","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Branches](https://developer.github.com/v3/repos/branches/#list-required-status-checks-contexts-of-protected-branch) - List required status checks contexts of protected branch"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Branches](https://developer.github.com/v3/repos/branches/#list-required-status-checks-contexts-of-protected-branch) - List required status checks contexts of protected branch","x-swgg-tags0":"github-repos"},"post":{"consumes":[],"description":"[Branches](https://developer.github.com/v3/repos/branches/#add-required-status-checks-contexts-of-protected-branch) - Add required status checks contexts of protected branch","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fbranches_2F_7Bbranch_7D_2Fprotection_2Frequired_status_checks_2Fcontexts_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hellcat-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.luke-cage-preview+json","application/vnd.github.zzzax-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"branch","description":"no description","in":"path","name":"branch","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Branches](https://developer.github.com/v3/repos/branches/#add-required-status-checks-contexts-of-protected-branch) - Add required status checks contexts of protected branch"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Branches](https://developer.github.com/v3/repos/branches/#add-required-status-checks-contexts-of-protected-branch) - Add required status checks contexts of protected branch","x-swgg-tags0":"github-repos"},"put":{"consumes":[],"description":"[Branches](https://developer.github.com/v3/repos/branches/#replace-required-status-checks-contexts-of-protected-branch) - Replace required status checks contexts of protected branch","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fbranches_2F_7Bbranch_7D_2Fprotection_2Frequired_status_checks_2Fcontexts_20PUT","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hellcat-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.luke-cage-preview+json","application/vnd.github.zzzax-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"branch","description":"no description","in":"path","name":"branch","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Branches](https://developer.github.com/v3/repos/branches/#replace-required-status-checks-contexts-of-protected-branch) - Replace required status checks contexts of protected branch"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Branches](https://developer.github.com/v3/repos/branches/#replace-required-status-checks-contexts-of-protected-branch) - Replace required status checks contexts of protected branch","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/branches/{branch}/protection/restrictions":{"delete":{"consumes":[],"description":"[Branches](https://developer.github.com/v3/repos/branches/#remove-restrictions-of-protected-branch) - Remove restrictions of protected branch","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fbranches_2F_7Bbranch_7D_2Fprotection_2Frestrictions_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hellcat-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.luke-cage-preview+json","application/vnd.github.zzzax-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"branch","description":"no description","in":"path","name":"branch","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Branches](https://developer.github.com/v3/repos/branches/#remove-restrictions-of-protected-branch) - Remove restrictions of protected branch"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Branches](https://developer.github.com/v3/repos/branches/#remove-restrictions-of-protected-branch) - Remove restrictions of protected branch","x-swgg-tags0":"github-repos"},"get":{"consumes":[],"description":"[Branches](https://developer.github.com/v3/repos/branches/#get-restrictions-of-protected-branch) - Get restrictions of protected branch\n\n**Note**: Teams and users ```restrictions``` are only available for organization-owned repositories.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fbranches_2F_7Bbranch_7D_2Fprotection_2Frestrictions_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hellcat-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.luke-cage-preview+json","application/vnd.github.zzzax-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"branch","description":"no description","in":"path","name":"branch","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Branches](https://developer.github.com/v3/repos/branches/#get-restrictions-of-protected-branch) - Get restrictions of protected branch","","**Note**: Teams and users ```restrictions``` are only available for organization-owned repositories."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Branches](https://developer.github.com/v3/repos/branches/#get-restrictions-of-protected-branch) - Get restrictions of protected branch","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams":{"delete":{"consumes":[],"description":"[Branches](https://developer.github.com/v3/repos/branches/#remove-team-restrictions-of-protected-branch) - Remove team restrictions of protected branch\n\n**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.hellcat-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fbranches_2F_7Bbranch_7D_2Fprotection_2Frestrictions_2Fteams_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hellcat-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.luke-cage-preview+json","application/vnd.github.zzzax-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"branch","description":"no description","in":"path","name":"branch","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Branches](https://developer.github.com/v3/repos/branches/#remove-team-restrictions-of-protected-branch) - Remove team restrictions of protected branch","","**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.hellcat-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Branches](https://developer.github.com/v3/repos/branches/#remove-team-restrictions-of-protected-branch) - Remove team restrictions of protected branch","x-swgg-tags0":"github-repos"},"get":{"consumes":[],"description":"[Branches](https://developer.github.com/v3/repos/branches/#list-team-restrictions-of-protected-branch) - List team restrictions of protected branch\n\n**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.hellcat-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fbranches_2F_7Bbranch_7D_2Fprotection_2Frestrictions_2Fteams_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hellcat-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.luke-cage-preview+json","application/vnd.github.zzzax-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"branch","description":"no description","in":"path","name":"branch","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Branches](https://developer.github.com/v3/repos/branches/#list-team-restrictions-of-protected-branch) - List team restrictions of protected branch","","**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.hellcat-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Branches](https://developer.github.com/v3/repos/branches/#list-team-restrictions-of-protected-branch) - List team restrictions of protected branch","x-swgg-tags0":"github-repos"},"post":{"consumes":[],"description":"[Branches](https://developer.github.com/v3/repos/branches/#add-team-restrictions-of-protected-branch) - Add team restrictions of protected branch\n\n**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.hellcat-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fbranches_2F_7Bbranch_7D_2Fprotection_2Frestrictions_2Fteams_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hellcat-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.luke-cage-preview+json","application/vnd.github.zzzax-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"branch","description":"no description","in":"path","name":"branch","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Branches](https://developer.github.com/v3/repos/branches/#add-team-restrictions-of-protected-branch) - Add team restrictions of protected branch","","**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.hellcat-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Branches](https://developer.github.com/v3/repos/branches/#add-team-restrictions-of-protected-branch) - Add team restrictions of protected branch","x-swgg-tags0":"github-repos"},"put":{"consumes":[],"description":"[Branches](https://developer.github.com/v3/repos/branches/#replace-team-restrictions-of-protected-branch) - Replace team restrictions of protected branch\n\n**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.hellcat-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fbranches_2F_7Bbranch_7D_2Fprotection_2Frestrictions_2Fteams_20PUT","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hellcat-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.luke-cage-preview+json","application/vnd.github.zzzax-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"branch","description":"no description","in":"path","name":"branch","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Branches](https://developer.github.com/v3/repos/branches/#replace-team-restrictions-of-protected-branch) - Replace team restrictions of protected branch","","**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.hellcat-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Branches](https://developer.github.com/v3/repos/branches/#replace-team-restrictions-of-protected-branch) - Replace team restrictions of protected branch","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users":{"delete":{"consumes":[],"description":"[Branches](https://developer.github.com/v3/repos/branches/#remove-user-restrictions-of-protected-branch) - Remove user restrictions of protected branch","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fbranches_2F_7Bbranch_7D_2Fprotection_2Frestrictions_2Fusers_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hellcat-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.luke-cage-preview+json","application/vnd.github.zzzax-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"branch","description":"no description","in":"path","name":"branch","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Branches](https://developer.github.com/v3/repos/branches/#remove-user-restrictions-of-protected-branch) - Remove user restrictions of protected branch"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Branches](https://developer.github.com/v3/repos/branches/#remove-user-restrictions-of-protected-branch) - Remove user restrictions of protected branch","x-swgg-tags0":"github-repos"},"get":{"consumes":[],"description":"[Branches](https://developer.github.com/v3/repos/branches/#list-user-restrictions-of-protected-branch) - List user restrictions of protected branch","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fbranches_2F_7Bbranch_7D_2Fprotection_2Frestrictions_2Fusers_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hellcat-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.luke-cage-preview+json","application/vnd.github.zzzax-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"branch","description":"no description","in":"path","name":"branch","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Branches](https://developer.github.com/v3/repos/branches/#list-user-restrictions-of-protected-branch) - List user restrictions of protected branch"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Branches](https://developer.github.com/v3/repos/branches/#list-user-restrictions-of-protected-branch) - List user restrictions of protected branch","x-swgg-tags0":"github-repos"},"post":{"consumes":[],"description":"[Branches](https://developer.github.com/v3/repos/branches/#add-user-restrictions-of-protected-branch) - Add user restrictions of protected branch","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fbranches_2F_7Bbranch_7D_2Fprotection_2Frestrictions_2Fusers_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hellcat-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.luke-cage-preview+json","application/vnd.github.zzzax-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"branch","description":"no description","in":"path","name":"branch","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Branches](https://developer.github.com/v3/repos/branches/#add-user-restrictions-of-protected-branch) - Add user restrictions of protected branch"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Branches](https://developer.github.com/v3/repos/branches/#add-user-restrictions-of-protected-branch) - Add user restrictions of protected branch","x-swgg-tags0":"github-repos"},"put":{"consumes":[],"description":"[Branches](https://developer.github.com/v3/repos/branches/#replace-user-restrictions-of-protected-branch) - Replace user restrictions of protected branch","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fbranches_2F_7Bbranch_7D_2Fprotection_2Frestrictions_2Fusers_20PUT","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hellcat-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.luke-cage-preview+json","application/vnd.github.zzzax-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"branch","description":"no description","in":"path","name":"branch","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Branches](https://developer.github.com/v3/repos/branches/#replace-user-restrictions-of-protected-branch) - Replace user restrictions of protected branch"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Branches](https://developer.github.com/v3/repos/branches/#replace-user-restrictions-of-protected-branch) - Replace user restrictions of protected branch","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/collaborators":{"get":{"consumes":[],"description":"[Collaborators](https://developer.github.com/v3/repos/collaborators/#list-collaborators) - List collaborators\n\n**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.hellcat-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fcollaborators_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hellcat-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"description":"Filter collaborators returned by their affiliation. Can be one of:\n* ```outside```: All outside collaborators of an organization-owned repository.\n* ```direct```: All collaborators with permissions to an organization-owned repository, regardless of organization membership status.\n* ```all```: All collaborators the authenticated user can see.\nDefault: ```all```","enum":["outside","direct","all"],"in":"query","name":"affiliation","type":"string","x-swgg-descriptionLineList":["Filter collaborators returned by their affiliation. Can be one of:","* ```outside```: All outside collaborators of an organization-owned repository.","* ```direct```: All collaborators with permissions to an organization-owned repository, regardless of organization membership status.","* ```all```: All collaborators the authenticated user can see.","Default: ```all```"]}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Collaborators](https://developer.github.com/v3/repos/collaborators/#list-collaborators) - List collaborators","","**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.hellcat-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Collaborators](https://developer.github.com/v3/repos/collaborators/#list-collaborators) - List collaborators","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/collaborators/{username}":{"delete":{"consumes":[],"description":"[Collaborators](https://developer.github.com/v3/repos/collaborators/#remove-user-as-a-collaborator) - Remove user as a collaborator","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fcollaborators_2F_7Busername_7D_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hellcat-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"username","description":"no description","in":"path","name":"username","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Collaborators](https://developer.github.com/v3/repos/collaborators/#remove-user-as-a-collaborator) - Remove user as a collaborator"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Collaborators](https://developer.github.com/v3/repos/collaborators/#remove-user-as-a-collaborator) - Remove user as a collaborator","x-swgg-tags0":"github-repos"},"get":{"consumes":[],"description":"[Collaborators](https://developer.github.com/v3/repos/collaborators/#check-if-a-user-is-a-collaborator) - Check if a user is a collaborator\n\n**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.hellcat-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fcollaborators_2F_7Busername_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hellcat-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"username","description":"no description","in":"path","name":"username","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Collaborators](https://developer.github.com/v3/repos/collaborators/#check-if-a-user-is-a-collaborator) - Check if a user is a collaborator","","**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.hellcat-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Collaborators](https://developer.github.com/v3/repos/collaborators/#check-if-a-user-is-a-collaborator) - Check if a user is a collaborator","x-swgg-tags0":"github-repos"},"put":{"consumes":[],"description":"[Collaborators](https://developer.github.com/v3/repos/collaborators/#add-user-as-a-collaborator) - Add user as a collaborator","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fcollaborators_2F_7Busername_7D_20PUT","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hellcat-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"username","description":"no description","in":"path","name":"username","required":true,"type":"string"},{"description":"The permission to grant the collaborator. **Only valid on organization-owned repositories.** Can be one of:\n* ```pull``` - can pull, but not push to or administer this repository.\n* ```push``` - can pull and push, but not administer this repository.\n* ```admin``` - can pull, push and administer this repository.\nDefault: ```push```","enum":["pull","push","admin"],"in":"query","name":"permission","type":"string","x-swgg-descriptionLineList":["The permission to grant the collaborator. **Only valid on organization-owned repositories.** Can be one of:","* ```pull``` - can pull, but not push to or administer this repository.","* ```push``` - can pull and push, but not administer this repository.","* ```admin``` - can pull, push and administer this repository.","Default: ```push```"]}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Collaborators](https://developer.github.com/v3/repos/collaborators/#add-user-as-a-collaborator) - Add user as a collaborator"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Collaborators](https://developer.github.com/v3/repos/collaborators/#add-user-as-a-collaborator) - Add user as a collaborator","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/collaborators/{username}/permission":{"get":{"consumes":[],"description":"[Collaborators](https://developer.github.com/v3/repos/collaborators/#review-a-users-permission-level) - Review a user's permission level","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fcollaborators_2F_7Busername_7D_2Fpermission_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hellcat-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"username","description":"no description","in":"path","name":"username","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Collaborators](https://developer.github.com/v3/repos/collaborators/#review-a-users-permission-level) - Review a user's permission level"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Collaborators](https://developer.github.com/v3/repos/collaborators/#review-a-users-permission-level) - Review a user's permission level","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/comments":{"get":{"consumes":[],"description":"[Comments](https://developer.github.com/v3/repos/comments/#list-commit-comments-for-a-repository) - List commit comments for a repository\n\nCommit Comments use [these custom media types](https://developer.github.com/v3/repos/comments/#custom-media-types). You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).\n\nComments are ordered by ascending ID.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fcomments_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.squirrel-girl-preview"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.squirrel-girl-preview","application/vnd.github-commitcomment.raw+json","application/vnd.github-commitcomment.text+json","application/vnd.github-commitcomment.html+json","application/vnd.github-commitcomment.full+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Comments](https://developer.github.com/v3/repos/comments/#list-commit-comments-for-a-repository) - List commit comments for a repository","","Commit Comments use [these custom media types](https://developer.github.com/v3/repos/comments/#custom-media-types). You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).","","Comments are ordered by ascending ID."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Comments](https://developer.github.com/v3/repos/comments/#list-commit-comments-for-a-repository) - List commit comments for a repository","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/comments/{id}":{"delete":{"consumes":[],"description":"[Comments](https://developer.github.com/v3/repos/comments/#delete-a-commit-comment) - Delete a commit comment","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fcomments_2F_7Bid_7D_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.squirrel-girl-preview"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.squirrel-girl-preview","application/vnd.github-commitcomment.raw+json","application/vnd.github-commitcomment.text+json","application/vnd.github-commitcomment.html+json","application/vnd.github-commitcomment.full+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Comments](https://developer.github.com/v3/repos/comments/#delete-a-commit-comment) - Delete a commit comment"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Comments](https://developer.github.com/v3/repos/comments/#delete-a-commit-comment) - Delete a commit comment","x-swgg-tags0":"github-repos"},"get":{"consumes":[],"description":"[Comments](https://developer.github.com/v3/repos/comments/#get-a-single-commit-comment) - Get a single commit comment","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fcomments_2F_7Bid_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.squirrel-girl-preview"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.squirrel-girl-preview","application/vnd.github-commitcomment.raw+json","application/vnd.github-commitcomment.text+json","application/vnd.github-commitcomment.html+json","application/vnd.github-commitcomment.full+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Comments](https://developer.github.com/v3/repos/comments/#get-a-single-commit-comment) - Get a single commit comment"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Comments](https://developer.github.com/v3/repos/comments/#get-a-single-commit-comment) - Get a single commit comment","x-swgg-tags0":"github-repos"},"patch":{"consumes":[],"description":"[Comments](https://developer.github.com/v3/repos/comments/#update-a-commit-comment) - Update a commit comment","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fcomments_2F_7Bid_7D_20PATCH","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.squirrel-girl-preview"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.squirrel-girl-preview","application/vnd.github-commitcomment.raw+json","application/vnd.github-commitcomment.text+json","application/vnd.github-commitcomment.html+json","application/vnd.github-commitcomment.full+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"},{"description":"**Required**. The contents of the comment","in":"body","name":"body","required":true,"schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fcomments_2F_7Bid_7D_20PATCH.body"},"x-swgg-descriptionLineList":["**Required**. The contents of the comment"]}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Comments](https://developer.github.com/v3/repos/comments/#update-a-commit-comment) - Update a commit comment"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Comments](https://developer.github.com/v3/repos/comments/#update-a-commit-comment) - Update a commit comment","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/comments/{id}/reactions":{"get":{"consumes":[],"description":"[Reactions](https://developer.github.com/v3/reactions/#list-reactions-for-a-commit-comment) - List reactions for a commit comment\n\n**Note:** APIs for managing reactions are currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.squirrel-girl-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nList the reactions to a [commit comment](https://developer.github.com/v3/repos/comments/).","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fcomments_2F_7Bid_7D_2Freactions_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.squirrel-girl-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.squirrel-girl-preview+json","application/vnd.github.jean-grey-preview+json","application/vnd.github.echo-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"},{"description":"Returns a single [reaction type](https://developer.github.com/v3/reactions/#reaction-types). Omit this parameter to list all reactions to a commit comment.","in":"query","name":"content","type":"string","x-swgg-descriptionLineList":["Returns a single [reaction type](https://developer.github.com/v3/reactions/#reaction-types). Omit this parameter to list all reactions to a commit comment."]}],"responses":{"default":{"description":"default response"}},"tags":["github-reactions"],"x-swgg-descriptionLineList":["[Reactions](https://developer.github.com/v3/reactions/#list-reactions-for-a-commit-comment) - List reactions for a commit comment","","**Note:** APIs for managing reactions are currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.squirrel-girl-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","List the reactions to a [commit comment](https://developer.github.com/v3/repos/comments/)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Reactions](https://developer.github.com/v3/reactions/#list-reactions-for-a-commit-comment) - List reactions for a commit comment","x-swgg-tags0":"github-reactions"},"post":{"consumes":[],"description":"[Reactions](https://developer.github.com/v3/reactions/#create-reaction-for-a-commit-comment) - Create reaction for a commit comment\n\n**Note:** APIs for managing reactions are currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.squirrel-girl-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nCreate a reaction to a [commit comment](https://developer.github.com/v3/repos/comments/). A response with a ```Status: 200 OK``` means that you already added the reaction type to this commit comment.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fcomments_2F_7Bid_7D_2Freactions_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.squirrel-girl-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.squirrel-girl-preview+json","application/vnd.github.jean-grey-preview+json","application/vnd.github.echo-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fcomments_2F_7Bid_7D_2Freactions_20POST.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-reactions"],"x-swgg-descriptionLineList":["[Reactions](https://developer.github.com/v3/reactions/#create-reaction-for-a-commit-comment) - Create reaction for a commit comment","","**Note:** APIs for managing reactions are currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.squirrel-girl-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","Create a reaction to a [commit comment](https://developer.github.com/v3/repos/comments/). A response with a ```Status: 200 OK``` means that you already added the reaction type to this commit comment."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Reactions](https://developer.github.com/v3/reactions/#create-reaction-for-a-commit-comment) - Create reaction for a commit comment","x-swgg-tags0":"github-reactions"}},"/repos/{owner}/{repo}/commits":{"get":{"consumes":[],"description":"[Commits](https://developer.github.com/v3/repos/commits/#list-commits-on-a-repository) - List commits on a repository","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fcommits_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3.sha","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"master","description":"SHA or branch to start listing commits from. Default: the repository’s default branch (usually ```master```).","in":"query","name":"sha","type":"string","x-swgg-descriptionLineList":["SHA or branch to start listing commits from. Default: the repository’s default branch (usually ```master```)."]},{"description":"Only commits containing this file path will be returned.","in":"query","name":"path","type":"string","x-swgg-descriptionLineList":["Only commits containing this file path will be returned."]},{"description":"GitHub login or email address by which to filter by commit author.","in":"query","name":"author","type":"string","x-swgg-descriptionLineList":["GitHub login or email address by which to filter by commit author."]},{"description":"Only commits after this date will be returned. This is a timestamp in ISO 8601 format: ```YYYY-MM-DDTHH:MM:SSZ```.","in":"query","name":"since","type":"string","x-swgg-descriptionLineList":["Only commits after this date will be returned. This is a timestamp in ISO 8601 format: ```YYYY-MM-DDTHH:MM:SSZ```."]},{"description":"Only commits before this date will be returned. This is a timestamp in ISO 8601 format: ```YYYY-MM-DDTHH:MM:SSZ```.","in":"query","name":"until","type":"string","x-swgg-descriptionLineList":["Only commits before this date will be returned. This is a timestamp in ISO 8601 format: ```YYYY-MM-DDTHH:MM:SSZ```."]}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Commits](https://developer.github.com/v3/repos/commits/#list-commits-on-a-repository) - List commits on a repository"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Commits](https://developer.github.com/v3/repos/commits/#list-commits-on-a-repository) - List commits on a repository","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/commits/{ref}":{"get":{"consumes":[],"description":"[Commits](https://developer.github.com/v3/repos/commits/#get-the-sha-1-of-a-commit-reference) - Get the SHA-1 of a commit reference\n\nUsers with read access can get the SHA-1 of a commit reference:","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fcommits_2F_7Bref_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3.sha","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"ref","description":"no description","in":"path","name":"ref","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Commits](https://developer.github.com/v3/repos/commits/#get-the-sha-1-of-a-commit-reference) - Get the SHA-1 of a commit reference","","Users with read access can get the SHA-1 of a commit reference:"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Commits](https://developer.github.com/v3/repos/commits/#get-the-sha-1-of-a-commit-reference) - Get the SHA-1 of a commit reference","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/commits/{ref}/comments":{"get":{"consumes":[],"description":"[Comments](https://developer.github.com/v3/repos/comments/#list-comments-for-a-single-commit) - List comments for a single commit","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fcommits_2F_7Bref_7D_2Fcomments_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.squirrel-girl-preview"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.squirrel-girl-preview","application/vnd.github-commitcomment.raw+json","application/vnd.github-commitcomment.text+json","application/vnd.github-commitcomment.html+json","application/vnd.github-commitcomment.full+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"ref","description":"no description","in":"path","name":"ref","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Comments](https://developer.github.com/v3/repos/comments/#list-comments-for-a-single-commit) - List comments for a single commit"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Comments](https://developer.github.com/v3/repos/comments/#list-comments-for-a-single-commit) - List comments for a single commit","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/commits/{ref}/status":{"get":{"consumes":[],"description":"[Statuses](https://developer.github.com/v3/repos/statuses/#get-the-combined-status-for-a-specific-ref) - Get the combined status for a specific ref\n\nUsers with pull access can access a combined view of commit statuses for a given ref.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fcommits_2F_7Bref_7D_2Fstatus_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"ref","description":"**Required**. Ref to fetch the status for. It can be a SHA, a branch name, or a tag name.","in":"path","name":"ref","required":true,"type":"string","x-swgg-descriptionLineList":["**Required**. Ref to fetch the status for. It can be a SHA, a branch name, or a tag name."]}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Statuses](https://developer.github.com/v3/repos/statuses/#get-the-combined-status-for-a-specific-ref) - Get the combined status for a specific ref","","Users with pull access can access a combined view of commit statuses for a given ref."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Statuses](https://developer.github.com/v3/repos/statuses/#get-the-combined-status-for-a-specific-ref) - Get the combined status for a specific ref","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/commits/{ref}/statuses":{"get":{"consumes":[],"description":"[Statuses](https://developer.github.com/v3/repos/statuses/#list-statuses-for-a-specific-ref) - List statuses for a specific ref\n\nUsers with pull access can view commit statuses for a given ref:","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fcommits_2F_7Bref_7D_2Fstatuses_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"ref","description":"**Required**. Ref to list the statuses from. It can be a SHA, a branch name, or a tag name.","in":"path","name":"ref","required":true,"type":"string","x-swgg-descriptionLineList":["**Required**. Ref to list the statuses from. It can be a SHA, a branch name, or a tag name."]}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Statuses](https://developer.github.com/v3/repos/statuses/#list-statuses-for-a-specific-ref) - List statuses for a specific ref","","Users with pull access can view commit statuses for a given ref:"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Statuses](https://developer.github.com/v3/repos/statuses/#list-statuses-for-a-specific-ref) - List statuses for a specific ref","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/commits/{sha}#1":{"get":{"consumes":[],"description":"[Commits](https://developer.github.com/v3/repos/commits/#get-a-single-commit) - Get a single commit","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fcommits_2F_7Bsha_7D_231_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3.sha","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"sha","description":"no description","in":"path","name":"sha","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Commits](https://developer.github.com/v3/repos/commits/#get-a-single-commit) - Get a single commit"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Commits](https://developer.github.com/v3/repos/commits/#get-a-single-commit) - Get a single commit","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/commits/{sha}/comments#1":{"post":{"consumes":[],"description":"[Comments](https://developer.github.com/v3/repos/comments/#create-a-commit-comment) - Create a commit comment","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fcommits_2F_7Bsha_7D_2Fcomments_231_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.squirrel-girl-preview"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.squirrel-girl-preview","application/vnd.github-commitcomment.raw+json","application/vnd.github-commitcomment.text+json","application/vnd.github-commitcomment.html+json","application/vnd.github-commitcomment.full+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"sha","description":"no description","in":"path","name":"sha","required":true,"type":"string"},{"description":"**Required**. The contents of the comment.","in":"body","name":"body","required":true,"schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fcommits_2F_7Bsha_7D_2Fcomments_20POST.body"},"x-swgg-descriptionLineList":["**Required**. The contents of the comment."]}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Comments](https://developer.github.com/v3/repos/comments/#create-a-commit-comment) - Create a commit comment"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Comments](https://developer.github.com/v3/repos/comments/#create-a-commit-comment) - Create a commit comment","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/community/code_of_conduct":{"get":{"consumes":[],"description":"[Codes of Conduct](https://developer.github.com/v3/codes_of_conduct/#get-the-contents-of-a-repositorys-code-of-conduct) - Get the contents of a repository's code of conduct\n\nThis method returns the contents of the repository's code of conduct file, if one is detected.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fcommunity_2Fcode_of_conduct_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.scarlet-witch-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.scarlet-witch-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-misc"],"x-swgg-descriptionLineList":["[Codes of Conduct](https://developer.github.com/v3/codes_of_conduct/#get-the-contents-of-a-repositorys-code-of-conduct) - Get the contents of a repository's code of conduct","","This method returns the contents of the repository's code of conduct file, if one is detected."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Codes of Conduct](https://developer.github.com/v3/codes_of_conduct/#get-the-contents-of-a-repositorys-code-of-conduct) - Get the contents of a repository's code of conduct","x-swgg-tags0":"github-misc"}},"/repos/{owner}/{repo}/compare/{base}...{head}":{"get":{"consumes":[],"description":"[Commits](https://developer.github.com/v3/repos/commits/#compare-two-commits) - Compare two commits","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fcompare_2F_7Bbase_7D..._7Bhead_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3.sha","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"base","description":"no description","in":"path","name":"base","required":true,"type":"string"},{"default":"head","description":"no description","in":"path","name":"head","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Commits](https://developer.github.com/v3/repos/commits/#compare-two-commits) - Compare two commits"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Commits](https://developer.github.com/v3/repos/commits/#compare-two-commits) - Compare two commits","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/contents/{path}":{"delete":{"consumes":[],"description":"[Contents](https://developer.github.com/v3/repos/contents/#delete-a-file) - Delete a file\n\nThis method deletes a file in a repository","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fcontents_2F_7Bpath_7D_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3.raw","application/vnd.github.v3.html","application/vnd.github.v3.object","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"path","description":"**Required**. The content path.","in":"path","name":"path","required":true,"type":"string","x-swgg-descriptionLineList":["**Required**. The content path."]},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fcontents_2F_7Bpath_7D_20DELETE.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Contents](https://developer.github.com/v3/repos/contents/#delete-a-file) - Delete a file","","This method deletes a file in a repository"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Contents](https://developer.github.com/v3/repos/contents/#delete-a-file) - Delete a file","x-swgg-tags0":"github-repos"},"get":{"consumes":[],"description":"[Contents](https://developer.github.com/v3/repos/contents/#get-contents) - Get contents\n\nThis method returns the contents of a file or directory in a repository.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fcontents_2F_7Bpath_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3.raw","application/vnd.github.v3.html","application/vnd.github.v3.object","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"path","description":"The content path.","in":"path","name":"path","required":true,"type":"string","x-swgg-descriptionLineList":["The content path."]},{"default":"master","description":"The name of the commit/branch/tag. Default: the repository’s default branch (usually ```master```)","in":"query","name":"ref","type":"string","x-swgg-descriptionLineList":["The name of the commit/branch/tag. Default: the repository’s default branch (usually ```master```)"]}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Contents](https://developer.github.com/v3/repos/contents/#get-contents) - Get contents","","This method returns the contents of a file or directory in a repository."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Contents](https://developer.github.com/v3/repos/contents/#get-contents) - Get contents","x-swgg-tags0":"github-repos"},"put":{"consumes":[],"description":"[Contents](https://developer.github.com/v3/repos/contents/#create-a-file) - Create a file\n\nThis method creates a new file in a repository","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fcontents_2F_7Bpath_7D_20PUT","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3.raw","application/vnd.github.v3.html","application/vnd.github.v3.object","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"path","description":"**Required**. The content path.","in":"path","name":"path","required":true,"type":"string","x-swgg-descriptionLineList":["**Required**. The content path."]},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fcontents_2F_7Bpath_7D_20PUT.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Contents](https://developer.github.com/v3/repos/contents/#create-a-file) - Create a file","","This method creates a new file in a repository"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Contents](https://developer.github.com/v3/repos/contents/#create-a-file) - Create a file","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/contents/{path}#1":{"put":{"consumes":[],"description":"[Contents](https://developer.github.com/v3/repos/contents/#update-a-file) - Update a file\n\nThis method updates a file in a repository","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fcontents_2F_7Bpath_7D_231_20PUT","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3.raw","application/vnd.github.v3.html","application/vnd.github.v3.object","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"path","description":"**Required**. The content path.","in":"path","name":"path","required":true,"type":"string","x-swgg-descriptionLineList":["**Required**. The content path."]},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fcontents_2F_7Bpath_7D_231_20PUT.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Contents](https://developer.github.com/v3/repos/contents/#update-a-file) - Update a file","","This method updates a file in a repository"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Contents](https://developer.github.com/v3/repos/contents/#update-a-file) - Update a file","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/contributors":{"get":{"consumes":[],"description":"[Repositories](https://developer.github.com/v3/repos/#list-contributors) - List contributors\n\nLists contributors to the specified repository and sorts them by the number of commits per contributor in descending order. This endpoint may return information that is a few hours old because the GitHub REST API v3 caches contributor data to improve performance.\n\nGitHub identifies contributors by author email address. This endpoint groups contribution counts by GitHub user, which includes all associated email addresses. To improve performance, only the first 500 author email addresses in the repository link to GitHub users. The rest will appear as anonymous contributors without associated GitHub user information.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fcontributors_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.nightshade-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.mercy-preview+json","application/vnd.github.nightshade-preview+json","application/vnd.github.jean-grey-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"description":"Set to ```1``` or ```true``` to include anonymous contributors in results.","in":"query","name":"anon","type":"string","x-swgg-descriptionLineList":["Set to ```1``` or ```true``` to include anonymous contributors in results."]}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Repositories](https://developer.github.com/v3/repos/#list-contributors) - List contributors","","Lists contributors to the specified repository and sorts them by the number of commits per contributor in descending order. This endpoint may return information that is a few hours old because the GitHub REST API v3 caches contributor data to improve performance.","","GitHub identifies contributors by author email address. This endpoint groups contribution counts by GitHub user, which includes all associated email addresses. To improve performance, only the first 500 author email addresses in the repository link to GitHub users. The rest will appear as anonymous contributors without associated GitHub user information."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Repositories](https://developer.github.com/v3/repos/#list-contributors) - List contributors","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/deployments":{"get":{"consumes":[],"description":"[Deployments](https://developer.github.com/v3/repos/deployments/#list-deployments) - List deployments\n\nSimple filtering of deployments is available via query parameters:","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fdeployments_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.ant-man-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.machine-man-preview","application/vnd.github.ant-man-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"none","description":"The SHA that was recorded at creation time. Default: ```none```","in":"query","name":"sha","type":"string","x-swgg-descriptionLineList":["The SHA that was recorded at creation time. Default: ```none```"]},{"default":"none","description":"The name of the ref. This can be a branch, tag, or SHA. Default: ```none```","in":"query","name":"ref","type":"string","x-swgg-descriptionLineList":["The name of the ref. This can be a branch, tag, or SHA. Default: ```none```"]},{"default":"none","description":"The name of the task for the deployment (e.g., ```deploy``` or ```deploy:migrations```). Default: ```none```","in":"query","name":"task","type":"string","x-swgg-descriptionLineList":["The name of the task for the deployment (e.g., ```deploy``` or ```deploy:migrations```). Default: ```none```"]},{"default":"none","description":"The name of the environment that was deployed to (e.g., ```staging``` or ```production```). Default: ```none```","in":"query","name":"environment","type":"string","x-swgg-descriptionLineList":["The name of the environment that was deployed to (e.g., ```staging``` or ```production```). Default: ```none```"]}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Deployments](https://developer.github.com/v3/repos/deployments/#list-deployments) - List deployments","","Simple filtering of deployments is available via query parameters:"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Deployments](https://developer.github.com/v3/repos/deployments/#list-deployments) - List deployments","x-swgg-tags0":"github-repos"},"post":{"consumes":[],"description":"[Deployments](https://developer.github.com/v3/repos/deployments/#create-a-deployment) - Create a deployment\n\nDeployments offer a few configurable parameters with sane defaults.\n\nThe ```ref``` parameter can be any named branch, tag, or SHA. At GitHub we often deploy branches and verify them before we merge a pull request.\n\nThe ```environment``` parameter allows deployments to be issued to different runtime environments. Teams often have multiple environments for verifying their applications, such as ```production```, ```staging```, and ```qa```. This allows for easy tracking of which environments had deployments requested. The default environment is ```production```.\n\nThe ```auto_merge``` parameter is used to ensure that the requested ref is not behind the repository's default branch. If the ref is behind the default branch for the repository, we will attempt to merge it for you. If the merge succeeds, the API will return a successful merge commit. If merge conflicts prevent the merge from succeeding, the API will return a failure response.\n\nBy default, [commit statuses](https://developer.github.com/v3/repos/statuses) for every submitted context must be in a ```success``` state. The ```required_contexts``` parameter allows you to specify a subset of contexts that must be ```success```, or to specify contexts that have not yet been submitted. You are not required to use commit statuses to deploy. If you do not require any contexts or create any commit statuses, the deployment will always succeed.\n\nThe ```payload``` parameter is available for any extra information that a deployment system might need. It is a JSON text field that will be passed on when a deployment event is dispatched.\n\nThe ```task``` parameter is used by the deployment system to allow different execution paths. In the web world this might be ```deploy:migrations``` to run schema changes on the system. In the compiled world this could be a flag to compile an application with debugging enabled.\n\nUsers with ```repo``` or ```repo_deployment``` scopes can create a deployment for a given ref:","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fdeployments_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.ant-man-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.machine-man-preview","application/vnd.github.ant-man-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"description":"**Required**. The ref to deploy. This can be a branch, tag, or SHA.","in":"query","name":"ref","required":true,"type":"string","x-swgg-descriptionLineList":["**Required**. The ref to deploy. This can be a branch, tag, or SHA."]},{"default":"deploy","description":"Specifies a task to execute (e.g., ```deploy``` or ```deploy:migrations```). Default: ```deploy```","in":"query","name":"task","type":"string","x-swgg-descriptionLineList":["Specifies a task to execute (e.g., ```deploy``` or ```deploy:migrations```). Default: ```deploy```"]},{"default":true,"description":"Attempts to automatically merge the default branch into the requested ref, if it is behind the default branch. Default: ```true```","in":"query","name":"auto_merge","type":"boolean","x-swgg-descriptionLineList":["Attempts to automatically merge the default branch into the requested ref, if it is behind the default branch. Default: ```true```"]},{"description":"The status contexts to verify against commit status checks. If this parameter is omitted, then all unique contexts will be verified before a deployment is created. To bypass checking entirely pass an empty array. Defaults to all unique contexts.","in":"query","items":{"type":"string"},"name":"required_contexts","type":"array","x-swgg-descriptionLineList":["The status contexts to verify against commit status checks. If this parameter is omitted, then all unique contexts will be verified before a deployment is created. To bypass checking entirely pass an empty array. Defaults to all unique contexts."]},{"description":"JSON payload with extra information about the deployment. Default: ```\"\"```","in":"query","name":"payload","type":"string","x-swgg-descriptionLineList":["JSON payload with extra information about the deployment. Default: ```\"\"```"]},{"default":"production","description":"Name for the target deployment environment (e.g., ```production```, ```staging```, ```qa```). Default: ```production```","in":"query","name":"environment","type":"string","x-swgg-descriptionLineList":["Name for the target deployment environment (e.g., ```production```, ```staging```, ```qa```). Default: ```production```"]},{"description":"Short description of the deployment. Default: ```\"\"```","in":"query","name":"description","type":"string","x-swgg-descriptionLineList":["Short description of the deployment. Default: ```\"\"```"]},{"default":false,"description":"Specifies if the given environment is specific to the deployment and will no longer exist at some point in the future. Default: ```false``` **This parameter requires a custom media type to be specified. Please see more in the alert below.**","in":"query","name":"transient_environment","type":"boolean","x-swgg-descriptionLineList":["Specifies if the given environment is specific to the deployment and will no longer exist at some point in the future. Default: ```false``` **This parameter requires a custom media type to be specified. Please see more in the alert below.**"]},{"default":true,"description":"Specifies if the given environment is one that end-users directly interact with. Default: ```true``` when ```environment``` is ```production``` and ```false``` otherwise. **This parameter requires a custom media type to be specified. Please see more in the alert below.**","in":"query","name":"production_environment","type":"boolean","x-swgg-descriptionLineList":["Specifies if the given environment is one that end-users directly interact with. Default: ```true``` when ```environment``` is ```production``` and ```false``` otherwise. **This parameter requires a custom media type to be specified. Please see more in the alert below.**"]}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Deployments](https://developer.github.com/v3/repos/deployments/#create-a-deployment) - Create a deployment","","Deployments offer a few configurable parameters with sane defaults.","","The ```ref``` parameter can be any named branch, tag, or SHA. At GitHub we often deploy branches and verify them before we merge a pull request.","","The ```environment``` parameter allows deployments to be issued to different runtime environments. Teams often have multiple environments for verifying their applications, such as ```production```, ```staging```, and ```qa```. This allows for easy tracking of which environments had deployments requested. The default environment is ```production```.","","The ```auto_merge``` parameter is used to ensure that the requested ref is not behind the repository's default branch. If the ref is behind the default branch for the repository, we will attempt to merge it for you. If the merge succeeds, the API will return a successful merge commit. If merge conflicts prevent the merge from succeeding, the API will return a failure response.","","By default, [commit statuses](https://developer.github.com/v3/repos/statuses) for every submitted context must be in a ```success``` state. The ```required_contexts``` parameter allows you to specify a subset of contexts that must be ```success```, or to specify contexts that have not yet been submitted. You are not required to use commit statuses to deploy. If you do not require any contexts or create any commit statuses, the deployment will always succeed.","","The ```payload``` parameter is available for any extra information that a deployment system might need. It is a JSON text field that will be passed on when a deployment event is dispatched.","","The ```task``` parameter is used by the deployment system to allow different execution paths. In the web world this might be ```deploy:migrations``` to run schema changes on the system. In the compiled world this could be a flag to compile an application with debugging enabled.","","Users with ```repo``` or ```repo_deployment``` scopes can create a deployment for a given ref:"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Deployments](https://developer.github.com/v3/repos/deployments/#create-a-deployment) - Create a deployment","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/deployments/{id}":{"get":{"consumes":[],"description":"[Deployments](https://developer.github.com/v3/repos/deployments/#get-a-single-deployment) - Get a single deployment","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fdeployments_2F_7Bid_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.ant-man-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.machine-man-preview","application/vnd.github.ant-man-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Deployments](https://developer.github.com/v3/repos/deployments/#get-a-single-deployment) - Get a single deployment"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Deployments](https://developer.github.com/v3/repos/deployments/#get-a-single-deployment) - Get a single deployment","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/deployments/{id}/statuses":{"get":{"consumes":[],"description":"[Deployments](https://developer.github.com/v3/repos/deployments/#list-deployment-statuses) - List deployment statuses\n\nUsers with pull access can view deployment statuses for a deployment:","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fdeployments_2F_7Bid_7D_2Fstatuses_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.ant-man-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.machine-man-preview","application/vnd.github.ant-man-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"id","description":"**Required**. The deployment ID to list the statuses from.","in":"path","name":"id","required":true,"type":"string","x-swgg-descriptionLineList":["**Required**. The deployment ID to list the statuses from."]}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Deployments](https://developer.github.com/v3/repos/deployments/#list-deployment-statuses) - List deployment statuses","","Users with pull access can view deployment statuses for a deployment:"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Deployments](https://developer.github.com/v3/repos/deployments/#list-deployment-statuses) - List deployment statuses","x-swgg-tags0":"github-repos"},"post":{"consumes":[],"description":"[Deployments](https://developer.github.com/v3/repos/deployments/#create-a-deployment-status) - Create a deployment status\n\nUsers with push access can create deployment statuses for a given deployment:","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fdeployments_2F_7Bid_7D_2Fstatuses_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.ant-man-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.machine-man-preview","application/vnd.github.ant-man-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fdeployments_2F_7Bid_7D_2Fstatuses_20POST.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Deployments](https://developer.github.com/v3/repos/deployments/#create-a-deployment-status) - Create a deployment status","","Users with push access can create deployment statuses for a given deployment:"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Deployments](https://developer.github.com/v3/repos/deployments/#create-a-deployment-status) - Create a deployment status","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/deployments/{id}/statuses/{status_id}":{"get":{"consumes":[],"description":"[Deployments](https://developer.github.com/v3/repos/deployments/#get-a-single-deployment-status) - Get a single deployment status\n\nThis endpoint is part of the deployment and deployment status enhancement. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-04-06-deployment-and-deployment-status-enhancements) for full details.\n\nTo access the API during the Early Access period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.ant-man-preview+json\n```\n\nUsers with pull access can view a deployment status for a deployment:","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fdeployments_2F_7Bid_7D_2Fstatuses_2F_7Bstatus_id_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.ant-man-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.machine-man-preview","application/vnd.github.ant-man-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"id","description":"**Required**. The deployment ID to list the statuses from.","in":"path","name":"id","required":true,"type":"string","x-swgg-descriptionLineList":["**Required**. The deployment ID to list the statuses from."]},{"default":"status_id","description":"**Required**. The deployment status ID.","in":"path","name":"status_id","required":true,"type":"string","x-swgg-descriptionLineList":["**Required**. The deployment status ID."]}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Deployments](https://developer.github.com/v3/repos/deployments/#get-a-single-deployment-status) - Get a single deployment status","","This endpoint is part of the deployment and deployment status enhancement. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-04-06-deployment-and-deployment-status-enhancements) for full details.","","To access the API during the Early Access period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.ant-man-preview+json","```","","Users with pull access can view a deployment status for a deployment:"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Deployments](https://developer.github.com/v3/repos/deployments/#get-a-single-deployment-status) - Get a single deployment status","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/downloads":{"get":{"consumes":[],"description":"[Downloads](https://developer.github.com/v3/repos/downloads/#list-downloads-for-a-repository) - List downloads for a repository","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fdownloads_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Downloads](https://developer.github.com/v3/repos/downloads/#list-downloads-for-a-repository) - List downloads for a repository"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Downloads](https://developer.github.com/v3/repos/downloads/#list-downloads-for-a-repository) - List downloads for a repository","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/downloads/{id}":{"delete":{"consumes":[],"description":"[Downloads](https://developer.github.com/v3/repos/downloads/#delete-a-download) - Delete a download","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fdownloads_2F_7Bid_7D_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Downloads](https://developer.github.com/v3/repos/downloads/#delete-a-download) - Delete a download"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Downloads](https://developer.github.com/v3/repos/downloads/#delete-a-download) - Delete a download","x-swgg-tags0":"github-repos"},"get":{"consumes":[],"description":"[Downloads](https://developer.github.com/v3/repos/downloads/#get-a-single-download) - Get a single download","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fdownloads_2F_7Bid_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Downloads](https://developer.github.com/v3/repos/downloads/#get-a-single-download) - Get a single download"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Downloads](https://developer.github.com/v3/repos/downloads/#get-a-single-download) - Get a single download","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/events":{"get":{"consumes":[],"description":"[Events](https://developer.github.com/v3/activity/events/#list-repository-events) - List repository events","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fevents_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-activity"],"x-swgg-descriptionLineList":["[Events](https://developer.github.com/v3/activity/events/#list-repository-events) - List repository events"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Events](https://developer.github.com/v3/activity/events/#list-repository-events) - List repository events","x-swgg-tags0":"github-activity"}},"/repos/{owner}/{repo}/forks":{"get":{"consumes":[],"description":"[Forks](https://developer.github.com/v3/repos/forks/#list-forks) - List forks","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fforks_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"newest","description":"The sort order. Can be either ```newest```, ```oldest```, or ```stargazers```. Default: ```newest```","in":"query","name":"sort","type":"string","x-swgg-descriptionLineList":["The sort order. Can be either ```newest```, ```oldest```, or ```stargazers```. Default: ```newest```"]}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Forks](https://developer.github.com/v3/repos/forks/#list-forks) - List forks"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Forks](https://developer.github.com/v3/repos/forks/#list-forks) - List forks","x-swgg-tags0":"github-repos"},"post":{"consumes":[],"description":"[Forks](https://developer.github.com/v3/repos/forks/#create-a-fork) - Create a fork\n\nCreate a fork for the authenticated user.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fforks_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"description":"Optional parameter to specify the organization name if forking into an organization.","in":"query","name":"organization","type":"string","x-swgg-descriptionLineList":["Optional parameter to specify the organization name if forking into an organization."]}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Forks](https://developer.github.com/v3/repos/forks/#create-a-fork) - Create a fork","","Create a fork for the authenticated user."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Forks](https://developer.github.com/v3/repos/forks/#create-a-fork) - Create a fork","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/git/blobs":{"post":{"consumes":[],"description":"[Git Blobs](https://developer.github.com/v3/git/blobs/#create-a-blob) - Create a Blob","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Fblobs_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3.raw","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Fblobs_20POST.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-git"],"x-swgg-descriptionLineList":["[Git Blobs](https://developer.github.com/v3/git/blobs/#create-a-blob) - Create a Blob"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Git Blobs](https://developer.github.com/v3/git/blobs/#create-a-blob) - Create a Blob","x-swgg-tags0":"github-git"}},"/repos/{owner}/{repo}/git/blobs/{sha}":{"get":{"consumes":[],"description":"[Git Blobs](https://developer.github.com/v3/git/blobs/#get-a-blob) - Get a Blob","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Fblobs_2F_7Bsha_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3.raw","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"sha","description":"no description","in":"path","name":"sha","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-git"],"x-swgg-descriptionLineList":["[Git Blobs](https://developer.github.com/v3/git/blobs/#get-a-blob) - Get a Blob"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Git Blobs](https://developer.github.com/v3/git/blobs/#get-a-blob) - Get a Blob","x-swgg-tags0":"github-git"}},"/repos/{owner}/{repo}/git/commits":{"post":{"consumes":[],"description":"[Git Commits](https://developer.github.com/v3/git/commits/#create-a-commit) - Create a Commit","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Fcommits_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Fcommits_20POST.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-git"],"x-swgg-descriptionLineList":["[Git Commits](https://developer.github.com/v3/git/commits/#create-a-commit) - Create a Commit"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Git Commits](https://developer.github.com/v3/git/commits/#create-a-commit) - Create a Commit","x-swgg-tags0":"github-git"}},"/repos/{owner}/{repo}/git/commits/{sha}":{"get":{"consumes":[],"description":"[Git Commits](https://developer.github.com/v3/git/commits/#get-a-commit) - Get a Commit","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Fcommits_2F_7Bsha_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"sha","description":"no description","in":"path","name":"sha","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-git"],"x-swgg-descriptionLineList":["[Git Commits](https://developer.github.com/v3/git/commits/#get-a-commit) - Get a Commit"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Git Commits](https://developer.github.com/v3/git/commits/#get-a-commit) - Get a Commit","x-swgg-tags0":"github-git"}},"/repos/{owner}/{repo}/git/commits/{sha}#1":{"get":{"consumes":[],"description":"[Git Commits](https://developer.github.com/v3/git/commits/#commit-signature-verification) - Commit signature verification","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Fcommits_2F_7Bsha_7D_231_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"sha","description":"no description","in":"path","name":"sha","required":true,"type":"string"},{"description":"Does GitHub consider the signature in this commit to be verified?","in":"query","name":"verified","type":"boolean","x-swgg-descriptionLineList":["Does GitHub consider the signature in this commit to be verified?"]},{"description":"The reason for ```verified``` value. Possible values and their meanings are enumerated in the table below.","in":"query","name":"reason","type":"string","x-swgg-descriptionLineList":["The reason for ```verified``` value. Possible values and their meanings are enumerated in the table below."]},{"description":"The signature that was extracted from the commit.","in":"query","name":"signature","type":"string","x-swgg-descriptionLineList":["The signature that was extracted from the commit."]},{"description":"The value that was signed.","in":"query","name":"payload","type":"string","x-swgg-descriptionLineList":["The value that was signed."]}],"responses":{"default":{"description":"default response"}},"tags":["github-git"],"x-swgg-descriptionLineList":["[Git Commits](https://developer.github.com/v3/git/commits/#commit-signature-verification) - Commit signature verification"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Git Commits](https://developer.github.com/v3/git/commits/#commit-signature-verification) - Commit signature verification","x-swgg-tags0":"github-git"}},"/repos/{owner}/{repo}/git/refs":{"get":{"consumes":[],"description":"[Git Refs](https://developer.github.com/v3/git/refs/#get-all-references) - Get all References","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Frefs_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-git"],"x-swgg-descriptionLineList":["[Git Refs](https://developer.github.com/v3/git/refs/#get-all-references) - Get all References"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Git Refs](https://developer.github.com/v3/git/refs/#get-all-references) - Get all References","x-swgg-tags0":"github-git"},"post":{"consumes":[],"description":"[Git Refs](https://developer.github.com/v3/git/refs/#create-a-reference) - Create a Reference","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Frefs_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Frefs_20POST.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-git"],"x-swgg-descriptionLineList":["[Git Refs](https://developer.github.com/v3/git/refs/#create-a-reference) - Create a Reference"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Git Refs](https://developer.github.com/v3/git/refs/#create-a-reference) - Create a Reference","x-swgg-tags0":"github-git"}},"/repos/{owner}/{repo}/git/refs/{ref}":{"delete":{"consumes":[],"description":"[Git Refs](https://developer.github.com/v3/git/refs/#delete-a-reference) - Delete a Reference","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Frefs_2F_7Bref_7D_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"ref","description":"no description","in":"path","name":"ref","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-git"],"x-swgg-descriptionLineList":["[Git Refs](https://developer.github.com/v3/git/refs/#delete-a-reference) - Delete a Reference"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Git Refs](https://developer.github.com/v3/git/refs/#delete-a-reference) - Delete a Reference","x-swgg-tags0":"github-git"},"get":{"consumes":[],"description":"[Git Refs](https://developer.github.com/v3/git/refs/#get-a-reference) - Get a Reference","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Frefs_2F_7Bref_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"ref","description":"no description","in":"path","name":"ref","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-git"],"x-swgg-descriptionLineList":["[Git Refs](https://developer.github.com/v3/git/refs/#get-a-reference) - Get a Reference"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Git Refs](https://developer.github.com/v3/git/refs/#get-a-reference) - Get a Reference","x-swgg-tags0":"github-git"},"patch":{"consumes":[],"description":"[Git Refs](https://developer.github.com/v3/git/refs/#update-a-reference) - Update a Reference","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Frefs_2F_7Bref_7D_20PATCH","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"ref","description":"no description","in":"path","name":"ref","required":true,"type":"string"},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Frefs_2F_7Bref_7D_20PATCH.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-git"],"x-swgg-descriptionLineList":["[Git Refs](https://developer.github.com/v3/git/refs/#update-a-reference) - Update a Reference"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Git Refs](https://developer.github.com/v3/git/refs/#update-a-reference) - Update a Reference","x-swgg-tags0":"github-git"}},"/repos/{owner}/{repo}/git/tags":{"post":{"consumes":[],"description":"[Git Tags](https://developer.github.com/v3/git/tags/#create-a-tag-object) - Create a Tag Object\n\nNote that creating a tag object does not create the reference that makes a tag in Git.  If you want to create an annotated tag in Git, you have to do this call to create the tag object, and then [create](https://developer.github.com/v3/git/refs/#create-a-reference) the ```refs/tags/[tag]``` reference. If you want to create a lightweight tag, you only have to [create](https://developer.github.com/v3/git/refs/#create-a-reference) the tag reference - this call would be unnecessary.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Ftags_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Ftags_20POST.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-git"],"x-swgg-descriptionLineList":["[Git Tags](https://developer.github.com/v3/git/tags/#create-a-tag-object) - Create a Tag Object","","Note that creating a tag object does not create the reference that makes a tag in Git.  If you want to create an annotated tag in Git, you have to do this call to create the tag object, and then [create](https://developer.github.com/v3/git/refs/#create-a-reference) the ```refs/tags/[tag]``` reference. If you want to create a lightweight tag, you only have to [create](https://developer.github.com/v3/git/refs/#create-a-reference) the tag reference - this call would be unnecessary."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Git Tags](https://developer.github.com/v3/git/tags/#create-a-tag-object) - Create a Tag Object","x-swgg-tags0":"github-git"}},"/repos/{owner}/{repo}/git/tags/{sha}":{"get":{"consumes":[],"description":"[Git Tags](https://developer.github.com/v3/git/tags/#get-a-tag) - Get a Tag","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Ftags_2F_7Bsha_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"sha","description":"no description","in":"path","name":"sha","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-git"],"x-swgg-descriptionLineList":["[Git Tags](https://developer.github.com/v3/git/tags/#get-a-tag) - Get a Tag"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Git Tags](https://developer.github.com/v3/git/tags/#get-a-tag) - Get a Tag","x-swgg-tags0":"github-git"}},"/repos/{owner}/{repo}/git/tags/{sha}#1":{"get":{"consumes":[],"description":"[Git Tags](https://developer.github.com/v3/git/tags/#tag-signature-verification) - Tag signature verification","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Ftags_2F_7Bsha_7D_231_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"sha","description":"no description","in":"path","name":"sha","required":true,"type":"string"},{"description":"Does GitHub consider the signature in this tag to be verified?","in":"query","name":"verified","type":"boolean","x-swgg-descriptionLineList":["Does GitHub consider the signature in this tag to be verified?"]},{"description":"The reason for ```verified``` value. Possible values and their meanings are enumerated in the table below.","in":"query","name":"reason","type":"string","x-swgg-descriptionLineList":["The reason for ```verified``` value. Possible values and their meanings are enumerated in the table below."]},{"description":"The signature that was extracted from the tag.","in":"query","name":"signature","type":"string","x-swgg-descriptionLineList":["The signature that was extracted from the tag."]},{"description":"The value that was signed.","in":"query","name":"payload","type":"string","x-swgg-descriptionLineList":["The value that was signed."]}],"responses":{"default":{"description":"default response"}},"tags":["github-git"],"x-swgg-descriptionLineList":["[Git Tags](https://developer.github.com/v3/git/tags/#tag-signature-verification) - Tag signature verification"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Git Tags](https://developer.github.com/v3/git/tags/#tag-signature-verification) - Tag signature verification","x-swgg-tags0":"github-git"}},"/repos/{owner}/{repo}/git/trees":{"post":{"consumes":[],"description":"[Git Trees](https://developer.github.com/v3/git/trees/#create-a-tree) - Create a Tree\n\nThe tree creation API will take nested entries as well. If both a tree and a nested path modifying that tree are specified, it will overwrite the contents of that tree with the new path contents and write a new tree out.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Ftrees_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Ftrees_20POST.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-git"],"x-swgg-descriptionLineList":["[Git Trees](https://developer.github.com/v3/git/trees/#create-a-tree) - Create a Tree","","The tree creation API will take nested entries as well. If both a tree and a nested path modifying that tree are specified, it will overwrite the contents of that tree with the new path contents and write a new tree out."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Git Trees](https://developer.github.com/v3/git/trees/#create-a-tree) - Create a Tree","x-swgg-tags0":"github-git"}},"/repos/{owner}/{repo}/git/trees/{sha}":{"get":{"consumes":[],"description":"[Git Trees](https://developer.github.com/v3/git/trees/#get-a-tree) - Get a Tree","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Ftrees_2F_7Bsha_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"sha","description":"no description","in":"path","name":"sha","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-git"],"x-swgg-descriptionLineList":["[Git Trees](https://developer.github.com/v3/git/trees/#get-a-tree) - Get a Tree"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Git Trees](https://developer.github.com/v3/git/trees/#get-a-tree) - Get a Tree","x-swgg-tags0":"github-git"}},"/repos/{owner}/{repo}/git/trees/{sha}#1":{"get":{"consumes":[],"description":"[Git Trees](https://developer.github.com/v3/git/trees/#get-a-tree-recursively) - Get a Tree Recursively","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Ftrees_2F_7Bsha_7D_231_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"sha","description":"no description","in":"path","name":"sha","required":true,"type":"string"},{"default":"1","description":"no description","in":"query","name":"recursive","type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-git"],"x-swgg-descriptionLineList":["[Git Trees](https://developer.github.com/v3/git/trees/#get-a-tree-recursively) - Get a Tree Recursively"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Git Trees](https://developer.github.com/v3/git/trees/#get-a-tree-recursively) - Get a Tree Recursively","x-swgg-tags0":"github-git"}},"/repos/{owner}/{repo}/hooks":{"get":{"consumes":[],"description":"[Repository Webhooks](https://developer.github.com/v3/repos/hooks/#list-hooks) - List hooks","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fhooks_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Repository Webhooks](https://developer.github.com/v3/repos/hooks/#list-hooks) - List hooks"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Repository Webhooks](https://developer.github.com/v3/repos/hooks/#list-hooks) - List hooks","x-swgg-tags0":"github-repos"},"post":{"consumes":[],"description":"[Repository Webhooks](https://developer.github.com/v3/repos/hooks/#create-a-hook) - Create a hook","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fhooks_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fhooks_20POST.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Repository Webhooks](https://developer.github.com/v3/repos/hooks/#create-a-hook) - Create a hook"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Repository Webhooks](https://developer.github.com/v3/repos/hooks/#create-a-hook) - Create a hook","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/hooks/{id}":{"delete":{"consumes":[],"description":"[Repository Webhooks](https://developer.github.com/v3/repos/hooks/#delete-a-hook) - Delete a hook","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fhooks_2F_7Bid_7D_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Repository Webhooks](https://developer.github.com/v3/repos/hooks/#delete-a-hook) - Delete a hook"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Repository Webhooks](https://developer.github.com/v3/repos/hooks/#delete-a-hook) - Delete a hook","x-swgg-tags0":"github-repos"},"get":{"consumes":[],"description":"[Repository Webhooks](https://developer.github.com/v3/repos/hooks/#get-single-hook) - Get single hook","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fhooks_2F_7Bid_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Repository Webhooks](https://developer.github.com/v3/repos/hooks/#get-single-hook) - Get single hook"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Repository Webhooks](https://developer.github.com/v3/repos/hooks/#get-single-hook) - Get single hook","x-swgg-tags0":"github-repos"},"patch":{"consumes":[],"description":"[Repository Webhooks](https://developer.github.com/v3/repos/hooks/#edit-a-hook) - Edit a hook","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fhooks_2F_7Bid_7D_20PATCH","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fhooks_2F_7Bid_7D_20PATCH.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Repository Webhooks](https://developer.github.com/v3/repos/hooks/#edit-a-hook) - Edit a hook"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Repository Webhooks](https://developer.github.com/v3/repos/hooks/#edit-a-hook) - Edit a hook","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/hooks/{id}/pings":{"post":{"consumes":[],"description":"[Repository Webhooks](https://developer.github.com/v3/repos/hooks/#ping-a-hook) - Ping a hook\n\nThis will trigger a [ping event](https://developer.github.com/webhooks/#ping-event) to be sent to the hook.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fhooks_2F_7Bid_7D_2Fpings_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Repository Webhooks](https://developer.github.com/v3/repos/hooks/#ping-a-hook) - Ping a hook","","This will trigger a [ping event](https://developer.github.com/webhooks/#ping-event) to be sent to the hook."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Repository Webhooks](https://developer.github.com/v3/repos/hooks/#ping-a-hook) - Ping a hook","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/hooks/{id}/tests":{"post":{"consumes":[],"description":"[Repository Webhooks](https://developer.github.com/v3/repos/hooks/#test-a-push-hook) - Test a\n\nThis will trigger the hook with the latest push to the current repository if the hook is subscribed to ```push``` events. If the hook is not subscribed to ```push``` events, the server will respond with 204 but no test POST will be generated.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fhooks_2F_7Bid_7D_2Ftests_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Repository Webhooks](https://developer.github.com/v3/repos/hooks/#test-a-push-hook) - Test a","","This will trigger the hook with the latest push to the current repository if the hook is subscribed to ```push``` events. If the hook is not subscribed to ```push``` events, the server will respond with 204 but no test POST will be generated."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Repository Webhooks](https://developer.github.com/v3/repos/hooks/#test-a-push-hook) - Test a","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/import":{"delete":{"consumes":[],"description":"[Source Imports](https://developer.github.com/v3/migration/source_imports/#cancel-an-import) - Cancel an import\n\nStop an import for a repository.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fimport_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.barred-rock-preview"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.barred-rock-preview","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-migration"],"x-swgg-descriptionLineList":["[Source Imports](https://developer.github.com/v3/migration/source_imports/#cancel-an-import) - Cancel an import","","Stop an import for a repository."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Source Imports](https://developer.github.com/v3/migration/source_imports/#cancel-an-import) - Cancel an import","x-swgg-tags0":"github-migration"},"get":{"consumes":[],"description":"[Source Imports](https://developer.github.com/v3/migration/source_imports/#get-import-progress) - Get import progress\n\nView the progress of an import.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fimport_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.barred-rock-preview"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.barred-rock-preview","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-migration"],"x-swgg-descriptionLineList":["[Source Imports](https://developer.github.com/v3/migration/source_imports/#get-import-progress) - Get import progress","","View the progress of an import."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Source Imports](https://developer.github.com/v3/migration/source_imports/#get-import-progress) - Get import progress","x-swgg-tags0":"github-migration"},"patch":{"consumes":[],"description":"[Source Imports](https://developer.github.com/v3/migration/source_imports/#update-existing-import) - Update existing import\n\nAn import can be updated with credentials or a project choice by passing in the appropriate parameters in this API request. If no parameters are provided, the import will be restarted.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fimport_20PATCH","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.barred-rock-preview"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.barred-rock-preview","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fimport_20PATCH.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-migration"],"x-swgg-descriptionLineList":["[Source Imports](https://developer.github.com/v3/migration/source_imports/#update-existing-import) - Update existing import","","An import can be updated with credentials or a project choice by passing in the appropriate parameters in this API request. If no parameters are provided, the import will be restarted."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Source Imports](https://developer.github.com/v3/migration/source_imports/#update-existing-import) - Update existing import","x-swgg-tags0":"github-migration"},"put":{"consumes":[],"description":"[Source Imports](https://developer.github.com/v3/migration/source_imports/#start-an-import) - Start an import\n\nStart a source import to a GitHub repository using GitHub Importer.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fimport_20PUT","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.barred-rock-preview"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.barred-rock-preview","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fimport_20PUT.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-migration"],"x-swgg-descriptionLineList":["[Source Imports](https://developer.github.com/v3/migration/source_imports/#start-an-import) - Start an import","","Start a source import to a GitHub repository using GitHub Importer."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Source Imports](https://developer.github.com/v3/migration/source_imports/#start-an-import) - Start an import","x-swgg-tags0":"github-migration"}},"/repos/{owner}/{repo}/import/authors":{"get":{"consumes":[],"description":"[Source Imports](https://developer.github.com/v3/migration/source_imports/#get-commit-authors) - Get commit authors\n\nEach type of source control system represents authors in a different way. For example, a Git commit author has a display name and an email address, but a Subversion commit author just has a username. The GitHub Importer will make the author information valid, but the author might not be correct. For example, it will change the bare Subversion username ```hubot``` into something like ```hubot &lt;hubot@12341234-abab-fefe-8787-fedcba987654&gt;```.\n\nThis API method and the \"Map a commit author\" method allow you to provide correct Git author information.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fimport_2Fauthors_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.barred-rock-preview"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.barred-rock-preview","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"description":"Only authors found after this id are returned. Provide the highest author ID you've seen so far. New authors may be added to the list at any point while the importer is performing the ```raw``` step.","in":"query","name":"since","type":"string","x-swgg-descriptionLineList":["Only authors found after this id are returned. Provide the highest author ID you've seen so far. New authors may be added to the list at any point while the importer is performing the ```raw``` step."]}],"responses":{"default":{"description":"default response"}},"tags":["github-migration"],"x-swgg-descriptionLineList":["[Source Imports](https://developer.github.com/v3/migration/source_imports/#get-commit-authors) - Get commit authors","","Each type of source control system represents authors in a different way. For example, a Git commit author has a display name and an email address, but a Subversion commit author just has a username. The GitHub Importer will make the author information valid, but the author might not be correct. For example, it will change the bare Subversion username ```hubot``` into something like ```hubot &lt;hubot@12341234-abab-fefe-8787-fedcba987654&gt;```.","","This API method and the \"Map a commit author\" method allow you to provide correct Git author information."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Source Imports](https://developer.github.com/v3/migration/source_imports/#get-commit-authors) - Get commit authors","x-swgg-tags0":"github-migration"}},"/repos/{owner}/{repo}/import/authors/{author_id}":{"patch":{"consumes":[],"description":"[Source Imports](https://developer.github.com/v3/migration/source_imports/#map-a-commit-author) - Map a commit author\n\nUpdate an author's identity for the import. Your application can continue updating authors any time before you push new commits to the repository.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fimport_2Fauthors_2F_7Bauthor_id_7D_20PATCH","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.barred-rock-preview"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.barred-rock-preview","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"author_id","description":"no description","in":"path","name":"author_id","required":true,"type":"string"},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fimport_2Fauthors_2F_7Bauthor_id_7D_20PATCH.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-migration"],"x-swgg-descriptionLineList":["[Source Imports](https://developer.github.com/v3/migration/source_imports/#map-a-commit-author) - Map a commit author","","Update an author's identity for the import. Your application can continue updating authors any time before you push new commits to the repository."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Source Imports](https://developer.github.com/v3/migration/source_imports/#map-a-commit-author) - Map a commit author","x-swgg-tags0":"github-migration"}},"/repos/{owner}/{repo}/import/large_files":{"get":{"consumes":[],"description":"[Source Imports](https://developer.github.com/v3/migration/source_imports/#get-large-files) - Get large files\n\nList files larger than 100MB found during the import","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fimport_2Flarge_files_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.barred-rock-preview"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.barred-rock-preview","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-migration"],"x-swgg-descriptionLineList":["[Source Imports](https://developer.github.com/v3/migration/source_imports/#get-large-files) - Get large files","","List files larger than 100MB found during the import"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Source Imports](https://developer.github.com/v3/migration/source_imports/#get-large-files) - Get large files","x-swgg-tags0":"github-migration"}},"/repos/{owner}/{repo}/import/lfs":{"patch":{"consumes":[],"description":"[Source Imports](https://developer.github.com/v3/migration/source_imports/#set-git-lfs-preference) - Set Git LFS preference\n\nYou can import repositories from Subversion, Mercurial, and TFS that include files larger than 100MB. This ability is powered by [Git LFS](https://git-lfs.github.com). You can learn more about our LFS feature and working with large files [on our help site](https://help.github.com/articles/versioning-large-files/).","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fimport_2Flfs_20PATCH","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.barred-rock-preview"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.barred-rock-preview","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fimport_2Flfs_20PATCH.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-migration"],"x-swgg-descriptionLineList":["[Source Imports](https://developer.github.com/v3/migration/source_imports/#set-git-lfs-preference) - Set Git LFS preference","","You can import repositories from Subversion, Mercurial, and TFS that include files larger than 100MB. This ability is powered by [Git LFS](https://git-lfs.github.com). You can learn more about our LFS feature and working with large files [on our help site](https://help.github.com/articles/versioning-large-files/)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Source Imports](https://developer.github.com/v3/migration/source_imports/#set-git-lfs-preference) - Set Git LFS preference","x-swgg-tags0":"github-migration"}},"/repos/{owner}/{repo}/invitations":{"get":{"consumes":[],"description":"[Repository Invitations](https://developer.github.com/v3/repos/invitations/#list-invitations-for-a-repository) - List invitations for a repository","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Finvitations_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Repository Invitations](https://developer.github.com/v3/repos/invitations/#list-invitations-for-a-repository) - List invitations for a repository"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Repository Invitations](https://developer.github.com/v3/repos/invitations/#list-invitations-for-a-repository) - List invitations for a repository","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/invitations/{invitation_id}":{"delete":{"consumes":[],"description":"[Repository Invitations](https://developer.github.com/v3/repos/invitations/#delete-a-repository-invitation) - Delete a repository invitation","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Finvitations_2F_7Binvitation_id_7D_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"invitation_id","description":"no description","in":"path","name":"invitation_id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Repository Invitations](https://developer.github.com/v3/repos/invitations/#delete-a-repository-invitation) - Delete a repository invitation"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Repository Invitations](https://developer.github.com/v3/repos/invitations/#delete-a-repository-invitation) - Delete a repository invitation","x-swgg-tags0":"github-repos"},"patch":{"consumes":[],"description":"[Repository Invitations](https://developer.github.com/v3/repos/invitations/#update-a-repository-invitation) - Update a repository invitation","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Finvitations_2F_7Binvitation_id_7D_20PATCH","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"invitation_id","description":"no description","in":"path","name":"invitation_id","required":true,"type":"string"},{"description":"The permissions that the associated user will have on the repository. Valid values are ```read```, ```write```, and ```admin```.","in":"query","name":"permissions","type":"string","x-swgg-descriptionLineList":["The permissions that the associated user will have on the repository. Valid values are ```read```, ```write```, and ```admin```."]}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Repository Invitations](https://developer.github.com/v3/repos/invitations/#update-a-repository-invitation) - Update a repository invitation"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Repository Invitations](https://developer.github.com/v3/repos/invitations/#update-a-repository-invitation) - Update a repository invitation","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/issues":{"get":{"consumes":[],"description":"[Issues](https://developer.github.com/v3/issues/#list-issues-for-a-repository) - List issues for a repository\n\n**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.symmetra-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\n**Note**: In the past, pull requests and issues were more closely aligned than they are now. As far as the API is concerned, every pull request is an issue, but not every issue is a pull request.\n\nThis endpoint may also return pull requests in the response. If an issue is a pull request, the object will include a ```pull_request``` key.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fissues_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.sailor-v-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.symmetra-preview+json","application/vnd.github.squirrel-girl-preview","application/vnd.github.machine-man-preview","application/vnd.github.sailor-v-preview+json","application/vnd.github.v3.raw+json","application/vnd.github.v3.text+json","application/vnd.github.v3.html+json","application/vnd.github.v3.full+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"open","description":"Indicates the state of the issues to return. Can be either ```open```, ```closed```, or ```all```. Default: ```open```","in":"query","name":"state","type":"string","x-swgg-descriptionLineList":["Indicates the state of the issues to return. Can be either ```open```, ```closed```, or ```all```. Default: ```open```"]},{"description":"Can be the name of a user. Pass in ```none``` for issues with no assigned user, and ```*``` for issues assigned to any user.","in":"query","name":"assignee","type":"string","x-swgg-descriptionLineList":["Can be the name of a user. Pass in ```none``` for issues with no assigned user, and ```*``` for issues assigned to any user."]},{"description":"The user that created the issue.","in":"query","name":"creator","type":"string","x-swgg-descriptionLineList":["The user that created the issue."]},{"description":"A user that's mentioned in the issue.","in":"query","name":"mentioned","type":"string","x-swgg-descriptionLineList":["A user that's mentioned in the issue."]},{"description":"A list of comma separated label names.  Example: ```bug,ui,@high```","in":"query","name":"labels","type":"string","x-swgg-descriptionLineList":["A list of comma separated label names.  Example: ```bug,ui,@high```"]},{"default":"created","description":"What to sort results by. Can be either ```created```, ```updated```, ```comments```. Default: ```created```","in":"query","name":"sort","type":"string","x-swgg-descriptionLineList":["What to sort results by. Can be either ```created```, ```updated```, ```comments```. Default: ```created```"]},{"default":"desc","description":"The direction of the sort. Can be either ```asc``` or ```desc```. Default: ```desc```","in":"query","name":"direction","type":"string","x-swgg-descriptionLineList":["The direction of the sort. Can be either ```asc``` or ```desc```. Default: ```desc```"]},{"description":"Only issues updated at or after this time are returned. This is a timestamp in ISO 8601 format: ```YYYY-MM-DDTHH:MM:SSZ```.","in":"query","name":"since","type":"string","x-swgg-descriptionLineList":["Only issues updated at or after this time are returned. This is a timestamp in ISO 8601 format: ```YYYY-MM-DDTHH:MM:SSZ```."]}],"responses":{"default":{"description":"default response"}},"tags":["github-issues"],"x-swgg-descriptionLineList":["[Issues](https://developer.github.com/v3/issues/#list-issues-for-a-repository) - List issues for a repository","","**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.symmetra-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","**Note**: In the past, pull requests and issues were more closely aligned than they are now. As far as the API is concerned, every pull request is an issue, but not every issue is a pull request.","","This endpoint may also return pull requests in the response. If an issue is a pull request, the object will include a ```pull_request``` key."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Issues](https://developer.github.com/v3/issues/#list-issues-for-a-repository) - List issues for a repository","x-swgg-tags0":"github-issues"},"post":{"consumes":[],"description":"[Issues](https://developer.github.com/v3/issues/#create-an-issue) - Create an issue\n\n**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.symmetra-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nAny user with pull access to a repository can create an issue.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fissues_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.sailor-v-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.symmetra-preview+json","application/vnd.github.squirrel-girl-preview","application/vnd.github.machine-man-preview","application/vnd.github.sailor-v-preview+json","application/vnd.github.v3.raw+json","application/vnd.github.v3.text+json","application/vnd.github.v3.html+json","application/vnd.github.v3.full+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"description":"The contents of the issue.","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fissues_20POST.body"},"x-swgg-descriptionLineList":["The contents of the issue."]}],"responses":{"default":{"description":"default response"}},"tags":["github-issues"],"x-swgg-descriptionLineList":["[Issues](https://developer.github.com/v3/issues/#create-an-issue) - Create an issue","","**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.symmetra-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","Any user with pull access to a repository can create an issue."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Issues](https://developer.github.com/v3/issues/#create-an-issue) - Create an issue","x-swgg-tags0":"github-issues"}},"/repos/{owner}/{repo}/issues/comments":{"get":{"consumes":[],"description":"[Issue Comments](https://developer.github.com/v3/issues/comments/#list-comments-in-a-repository) - List comments in a repository","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fissues_2Fcomments_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.machine-man-preview"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.squirrel-girl-preview","application/vnd.github.machine-man-preview","application/vnd.github.v3.raw+json","application/vnd.github.v3.text+json","application/vnd.github.v3.html+json","application/vnd.github.v3.full+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"created","description":"Either ```created``` or ```updated```. Default: ```created```","in":"query","name":"sort","type":"string","x-swgg-descriptionLineList":["Either ```created``` or ```updated```. Default: ```created```"]},{"description":"Either ```asc``` or ```desc```. Ignored without the ```sort``` parameter.","in":"query","name":"direction","type":"string","x-swgg-descriptionLineList":["Either ```asc``` or ```desc```. Ignored without the ```sort``` parameter."]},{"description":"Only comments updated at or after this time are returned. This is a timestamp in ISO 8601 format: ```YYYY-MM-DDTHH:MM:SSZ```.","in":"query","name":"since","type":"string","x-swgg-descriptionLineList":["Only comments updated at or after this time are returned. This is a timestamp in ISO 8601 format: ```YYYY-MM-DDTHH:MM:SSZ```."]}],"responses":{"default":{"description":"default response"}},"tags":["github-issues"],"x-swgg-descriptionLineList":["[Issue Comments](https://developer.github.com/v3/issues/comments/#list-comments-in-a-repository) - List comments in a repository"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Issue Comments](https://developer.github.com/v3/issues/comments/#list-comments-in-a-repository) - List comments in a repository","x-swgg-tags0":"github-issues"}},"/repos/{owner}/{repo}/issues/comments/{id}":{"delete":{"consumes":[],"description":"[Issue Comments](https://developer.github.com/v3/issues/comments/#delete-a-comment) - Delete a comment","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fissues_2Fcomments_2F_7Bid_7D_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.machine-man-preview"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.squirrel-girl-preview","application/vnd.github.machine-man-preview","application/vnd.github.v3.raw+json","application/vnd.github.v3.text+json","application/vnd.github.v3.html+json","application/vnd.github.v3.full+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-issues"],"x-swgg-descriptionLineList":["[Issue Comments](https://developer.github.com/v3/issues/comments/#delete-a-comment) - Delete a comment"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Issue Comments](https://developer.github.com/v3/issues/comments/#delete-a-comment) - Delete a comment","x-swgg-tags0":"github-issues"},"get":{"consumes":[],"description":"[Issue Comments](https://developer.github.com/v3/issues/comments/#get-a-single-comment) - Get a single comment","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fissues_2Fcomments_2F_7Bid_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.machine-man-preview"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.squirrel-girl-preview","application/vnd.github.machine-man-preview","application/vnd.github.v3.raw+json","application/vnd.github.v3.text+json","application/vnd.github.v3.html+json","application/vnd.github.v3.full+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-issues"],"x-swgg-descriptionLineList":["[Issue Comments](https://developer.github.com/v3/issues/comments/#get-a-single-comment) - Get a single comment"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Issue Comments](https://developer.github.com/v3/issues/comments/#get-a-single-comment) - Get a single comment","x-swgg-tags0":"github-issues"},"patch":{"consumes":[],"description":"[Issue Comments](https://developer.github.com/v3/issues/comments/#edit-a-comment) - Edit a comment","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fissues_2Fcomments_2F_7Bid_7D_20PATCH","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.machine-man-preview"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.squirrel-girl-preview","application/vnd.github.machine-man-preview","application/vnd.github.v3.raw+json","application/vnd.github.v3.text+json","application/vnd.github.v3.html+json","application/vnd.github.v3.full+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"},{"description":"**Required**. The contents of the comment.","in":"body","name":"body","required":true,"schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fissues_2Fcomments_2F_7Bid_7D_20PATCH.body"},"x-swgg-descriptionLineList":["**Required**. The contents of the comment."]}],"responses":{"default":{"description":"default response"}},"tags":["github-issues"],"x-swgg-descriptionLineList":["[Issue Comments](https://developer.github.com/v3/issues/comments/#edit-a-comment) - Edit a comment"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Issue Comments](https://developer.github.com/v3/issues/comments/#edit-a-comment) - Edit a comment","x-swgg-tags0":"github-issues"}},"/repos/{owner}/{repo}/issues/comments/{id}/reactions":{"get":{"consumes":[],"description":"[Reactions](https://developer.github.com/v3/reactions/#list-reactions-for-an-issue-comment) - List reactions for an issue comment\n\n**Note:** APIs for managing reactions are currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.squirrel-girl-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nList the reactions to an [issue comment](https://developer.github.com/v3/issues/comments/).","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fissues_2Fcomments_2F_7Bid_7D_2Freactions_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.squirrel-girl-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.squirrel-girl-preview+json","application/vnd.github.jean-grey-preview+json","application/vnd.github.echo-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"},{"description":"Returns a single [reaction type](https://developer.github.com/v3/reactions/#reaction-types). Omit this parameter to list all reactions to an issue comment.","in":"query","name":"content","type":"string","x-swgg-descriptionLineList":["Returns a single [reaction type](https://developer.github.com/v3/reactions/#reaction-types). Omit this parameter to list all reactions to an issue comment."]}],"responses":{"default":{"description":"default response"}},"tags":["github-reactions"],"x-swgg-descriptionLineList":["[Reactions](https://developer.github.com/v3/reactions/#list-reactions-for-an-issue-comment) - List reactions for an issue comment","","**Note:** APIs for managing reactions are currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.squirrel-girl-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","List the reactions to an [issue comment](https://developer.github.com/v3/issues/comments/)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Reactions](https://developer.github.com/v3/reactions/#list-reactions-for-an-issue-comment) - List reactions for an issue comment","x-swgg-tags0":"github-reactions"},"post":{"consumes":[],"description":"[Reactions](https://developer.github.com/v3/reactions/#create-reaction-for-an-issue-comment) - Create reaction for an issue comment\n\n**Note:** APIs for managing reactions are currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.squirrel-girl-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nCreate a reaction to an [issue comment](https://developer.github.com/v3/issues/comments/). A response with a ```Status: 200 OK``` means that you already added the reaction type to this issue comment.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fissues_2Fcomments_2F_7Bid_7D_2Freactions_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.squirrel-girl-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.squirrel-girl-preview+json","application/vnd.github.jean-grey-preview+json","application/vnd.github.echo-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fissues_2Fcomments_2F_7Bid_7D_2Freactions_20POST.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-reactions"],"x-swgg-descriptionLineList":["[Reactions](https://developer.github.com/v3/reactions/#create-reaction-for-an-issue-comment) - Create reaction for an issue comment","","**Note:** APIs for managing reactions are currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.squirrel-girl-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","Create a reaction to an [issue comment](https://developer.github.com/v3/issues/comments/). A response with a ```Status: 200 OK``` means that you already added the reaction type to this issue comment."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Reactions](https://developer.github.com/v3/reactions/#create-reaction-for-an-issue-comment) - Create reaction for an issue comment","x-swgg-tags0":"github-reactions"}},"/repos/{owner}/{repo}/issues/events":{"get":{"consumes":[],"description":"[Events](https://developer.github.com/v3/activity/events/#list-issue-events-for-a-repository) - List issue events for a repository\n\nRepository issue events have a different format than other events, as documented in the [Issue Events API](https://developer.github.com/v3/issues/events/).","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fissues_2Fevents_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-activity"],"x-swgg-descriptionLineList":["[Events](https://developer.github.com/v3/activity/events/#list-issue-events-for-a-repository) - List issue events for a repository","","Repository issue events have a different format than other events, as documented in the [Issue Events API](https://developer.github.com/v3/issues/events/)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Events](https://developer.github.com/v3/activity/events/#list-issue-events-for-a-repository) - List issue events for a repository","x-swgg-tags0":"github-activity"}},"/repos/{owner}/{repo}/issues/events#1":{"get":{"consumes":[],"description":"[Issue Events](https://developer.github.com/v3/issues/events/#list-events-for-a-repository) - List events for a repository\n\n**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.symmetra-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fissues_2Fevents_231_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.machine-man-preview"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.symmetra-preview+json","application/vnd.github.machine-man-preview","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-issues"],"x-swgg-descriptionLineList":["[Issue Events](https://developer.github.com/v3/issues/events/#list-events-for-a-repository) - List events for a repository","","**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.symmetra-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Issue Events](https://developer.github.com/v3/issues/events/#list-events-for-a-repository) - List events for a repository","x-swgg-tags0":"github-issues"}},"/repos/{owner}/{repo}/issues/events/{id}":{"get":{"consumes":[],"description":"[Issue Events](https://developer.github.com/v3/issues/events/#get-a-single-event) - Get a single event\n\n**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.symmetra-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fissues_2Fevents_2F_7Bid_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.machine-man-preview"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.symmetra-preview+json","application/vnd.github.machine-man-preview","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-issues"],"x-swgg-descriptionLineList":["[Issue Events](https://developer.github.com/v3/issues/events/#get-a-single-event) - Get a single event","","**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.symmetra-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Issue Events](https://developer.github.com/v3/issues/events/#get-a-single-event) - Get a single event","x-swgg-tags0":"github-issues"}},"/repos/{owner}/{repo}/issues/{number}":{"get":{"consumes":[],"description":"[Issues](https://developer.github.com/v3/issues/#get-a-single-issue) - Get a single issue\n\n**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.symmetra-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\n**Note**: In the past, pull requests and issues were more closely aligned than they are now. As far as the API is concerned, every pull request is an issue, but not every issue is a pull request.\n\nThis endpoint may also return pull requests in the response. If an issue is a pull request, the object will include a ```pull_request``` key.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fissues_2F_7Bnumber_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.sailor-v-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.symmetra-preview+json","application/vnd.github.squirrel-girl-preview","application/vnd.github.machine-man-preview","application/vnd.github.sailor-v-preview+json","application/vnd.github.v3.raw+json","application/vnd.github.v3.text+json","application/vnd.github.v3.html+json","application/vnd.github.v3.full+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"number","description":"no description","in":"path","name":"number","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-issues"],"x-swgg-descriptionLineList":["[Issues](https://developer.github.com/v3/issues/#get-a-single-issue) - Get a single issue","","**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.symmetra-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","**Note**: In the past, pull requests and issues were more closely aligned than they are now. As far as the API is concerned, every pull request is an issue, but not every issue is a pull request.","","This endpoint may also return pull requests in the response. If an issue is a pull request, the object will include a ```pull_request``` key."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Issues](https://developer.github.com/v3/issues/#get-a-single-issue) - Get a single issue","x-swgg-tags0":"github-issues"},"patch":{"consumes":[],"description":"[Issues](https://developer.github.com/v3/issues/#edit-an-issue) - Edit an issue\n\n**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.symmetra-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nIssue owners and users with push access can edit an issue.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fissues_2F_7Bnumber_7D_20PATCH","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.sailor-v-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.symmetra-preview+json","application/vnd.github.squirrel-girl-preview","application/vnd.github.machine-man-preview","application/vnd.github.sailor-v-preview+json","application/vnd.github.v3.raw+json","application/vnd.github.v3.text+json","application/vnd.github.v3.html+json","application/vnd.github.v3.full+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"number","description":"no description","in":"path","name":"number","required":true,"type":"string"},{"description":"The contents of the issue.","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fissues_2F_7Bnumber_7D_20PATCH.body"},"x-swgg-descriptionLineList":["The contents of the issue."]}],"responses":{"default":{"description":"default response"}},"tags":["github-issues"],"x-swgg-descriptionLineList":["[Issues](https://developer.github.com/v3/issues/#edit-an-issue) - Edit an issue","","**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.symmetra-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","Issue owners and users with push access can edit an issue."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Issues](https://developer.github.com/v3/issues/#edit-an-issue) - Edit an issue","x-swgg-tags0":"github-issues"}},"/repos/{owner}/{repo}/issues/{number}/assignees":{"delete":{"consumes":[],"description":"[Issue Assignees](https://developer.github.com/v3/issues/assignees/#remove-assignees-from-an-issue) - Remove assignees from an issue\n\n**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.symmetra-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nRemoves one or more assignees from an issue.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fissues_2F_7Bnumber_7D_2Fassignees_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.symmetra-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.symmetra-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"number","description":"no description","in":"path","name":"number","required":true,"type":"string"},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fissues_2F_7Bnumber_7D_2Fassignees_20DELETE.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-issues"],"x-swgg-descriptionLineList":["[Issue Assignees](https://developer.github.com/v3/issues/assignees/#remove-assignees-from-an-issue) - Remove assignees from an issue","","**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.symmetra-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","Removes one or more assignees from an issue."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Issue Assignees](https://developer.github.com/v3/issues/assignees/#remove-assignees-from-an-issue) - Remove assignees from an issue","x-swgg-tags0":"github-issues"},"post":{"consumes":[],"description":"[Issue Assignees](https://developer.github.com/v3/issues/assignees/#add-assignees-to-an-issue) - Add assignees to an issue\n\n**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.symmetra-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nAdds up to 10 assignees to an issue. Users already assigned to an issue are not replaced.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fissues_2F_7Bnumber_7D_2Fassignees_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.symmetra-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.symmetra-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"number","description":"no description","in":"path","name":"number","required":true,"type":"string"},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fissues_2F_7Bnumber_7D_2Fassignees_20POST.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-issues"],"x-swgg-descriptionLineList":["[Issue Assignees](https://developer.github.com/v3/issues/assignees/#add-assignees-to-an-issue) - Add assignees to an issue","","**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.symmetra-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","Adds up to 10 assignees to an issue. Users already assigned to an issue are not replaced."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Issue Assignees](https://developer.github.com/v3/issues/assignees/#add-assignees-to-an-issue) - Add assignees to an issue","x-swgg-tags0":"github-issues"}},"/repos/{owner}/{repo}/issues/{number}/comments":{"get":{"consumes":[],"description":"[Issue Comments](https://developer.github.com/v3/issues/comments/#list-comments-on-an-issue) - List comments on an issue","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fissues_2F_7Bnumber_7D_2Fcomments_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.machine-man-preview"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.squirrel-girl-preview","application/vnd.github.machine-man-preview","application/vnd.github.v3.raw+json","application/vnd.github.v3.text+json","application/vnd.github.v3.html+json","application/vnd.github.v3.full+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"number","description":"no description","in":"path","name":"number","required":true,"type":"string"},{"description":"Only comments updated at or after this time are returned. This is a timestamp in ISO 8601 format: ```YYYY-MM-DDTHH:MM:SSZ```.","in":"query","name":"since","type":"string","x-swgg-descriptionLineList":["Only comments updated at or after this time are returned. This is a timestamp in ISO 8601 format: ```YYYY-MM-DDTHH:MM:SSZ```."]}],"responses":{"default":{"description":"default response"}},"tags":["github-issues"],"x-swgg-descriptionLineList":["[Issue Comments](https://developer.github.com/v3/issues/comments/#list-comments-on-an-issue) - List comments on an issue"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Issue Comments](https://developer.github.com/v3/issues/comments/#list-comments-on-an-issue) - List comments on an issue","x-swgg-tags0":"github-issues"},"post":{"consumes":[],"description":"[Issue Comments](https://developer.github.com/v3/issues/comments/#create-a-comment) - Create a comment","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fissues_2F_7Bnumber_7D_2Fcomments_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.machine-man-preview"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.squirrel-girl-preview","application/vnd.github.machine-man-preview","application/vnd.github.v3.raw+json","application/vnd.github.v3.text+json","application/vnd.github.v3.html+json","application/vnd.github.v3.full+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"number","description":"no description","in":"path","name":"number","required":true,"type":"string"},{"description":"**Required**. The contents of the comment.","in":"body","name":"body","required":true,"schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fissues_2F_7Bnumber_7D_2Fcomments_20POST.body"},"x-swgg-descriptionLineList":["**Required**. The contents of the comment."]}],"responses":{"default":{"description":"default response"}},"tags":["github-issues"],"x-swgg-descriptionLineList":["[Issue Comments](https://developer.github.com/v3/issues/comments/#create-a-comment) - Create a comment"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Issue Comments](https://developer.github.com/v3/issues/comments/#create-a-comment) - Create a comment","x-swgg-tags0":"github-issues"}},"/repos/{owner}/{repo}/issues/{number}/events":{"get":{"consumes":[],"description":"[Issue Events](https://developer.github.com/v3/issues/events/#list-events-for-an-issue) - List events for an issue","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fissues_2F_7Bnumber_7D_2Fevents_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.machine-man-preview"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.symmetra-preview+json","application/vnd.github.machine-man-preview","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"number","description":"no description","in":"path","name":"number","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-issues"],"x-swgg-descriptionLineList":["[Issue Events](https://developer.github.com/v3/issues/events/#list-events-for-an-issue) - List events for an issue"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Issue Events](https://developer.github.com/v3/issues/events/#list-events-for-an-issue) - List events for an issue","x-swgg-tags0":"github-issues"}},"/repos/{owner}/{repo}/issues/{number}/labels":{"delete":{"consumes":[],"description":"[Issue Labels](https://developer.github.com/v3/issues/labels/#remove-all-labels-from-an-issue) - Remove all labels from an issue","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fissues_2F_7Bnumber_7D_2Flabels_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.symmetra-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.symmetra-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"number","description":"no description","in":"path","name":"number","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-issues"],"x-swgg-descriptionLineList":["[Issue Labels](https://developer.github.com/v3/issues/labels/#remove-all-labels-from-an-issue) - Remove all labels from an issue"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Issue Labels](https://developer.github.com/v3/issues/labels/#remove-all-labels-from-an-issue) - Remove all labels from an issue","x-swgg-tags0":"github-issues"},"get":{"consumes":[],"description":"[Issue Labels](https://developer.github.com/v3/issues/labels/#list-labels-on-an-issue) - List labels on an issue\n\n**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.symmetra-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fissues_2F_7Bnumber_7D_2Flabels_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.symmetra-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.symmetra-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"number","description":"no description","in":"path","name":"number","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-issues"],"x-swgg-descriptionLineList":["[Issue Labels](https://developer.github.com/v3/issues/labels/#list-labels-on-an-issue) - List labels on an issue","","**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.symmetra-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Issue Labels](https://developer.github.com/v3/issues/labels/#list-labels-on-an-issue) - List labels on an issue","x-swgg-tags0":"github-issues"},"post":{"consumes":[],"description":"[Issue Labels](https://developer.github.com/v3/issues/labels/#add-labels-to-an-issue) - Add labels to an issue\n\n**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.symmetra-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fissues_2F_7Bnumber_7D_2Flabels_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.symmetra-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.symmetra-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"number","description":"no description","in":"path","name":"number","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-issues"],"x-swgg-descriptionLineList":["[Issue Labels](https://developer.github.com/v3/issues/labels/#add-labels-to-an-issue) - Add labels to an issue","","**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.symmetra-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Issue Labels](https://developer.github.com/v3/issues/labels/#add-labels-to-an-issue) - Add labels to an issue","x-swgg-tags0":"github-issues"},"put":{"consumes":[],"description":"[Issue Labels](https://developer.github.com/v3/issues/labels/#replace-all-labels-for-an-issue) - Replace all labels for an issue\n\n**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.symmetra-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fissues_2F_7Bnumber_7D_2Flabels_20PUT","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.symmetra-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.symmetra-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"number","description":"no description","in":"path","name":"number","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-issues"],"x-swgg-descriptionLineList":["[Issue Labels](https://developer.github.com/v3/issues/labels/#replace-all-labels-for-an-issue) - Replace all labels for an issue","","**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.symmetra-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Issue Labels](https://developer.github.com/v3/issues/labels/#replace-all-labels-for-an-issue) - Replace all labels for an issue","x-swgg-tags0":"github-issues"}},"/repos/{owner}/{repo}/issues/{number}/labels/{name}":{"delete":{"consumes":[],"description":"[Issue Labels](https://developer.github.com/v3/issues/labels/#remove-a-label-from-an-issue) - Remove a label from an issue\n\n**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.symmetra-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fissues_2F_7Bnumber_7D_2Flabels_2F_7Bname_7D_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.symmetra-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.symmetra-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"number","description":"no description","in":"path","name":"number","required":true,"type":"string"},{"default":"name","description":"no description","in":"path","name":"name","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-issues"],"x-swgg-descriptionLineList":["[Issue Labels](https://developer.github.com/v3/issues/labels/#remove-a-label-from-an-issue) - Remove a label from an issue","","**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.symmetra-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Issue Labels](https://developer.github.com/v3/issues/labels/#remove-a-label-from-an-issue) - Remove a label from an issue","x-swgg-tags0":"github-issues"}},"/repos/{owner}/{repo}/issues/{number}/lock":{"delete":{"consumes":[],"description":"[Issues](https://developer.github.com/v3/issues/#unlock-an-issue) - Unlock an issue\n\nUsers with push access can unlock an issue's conversation.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fissues_2F_7Bnumber_7D_2Flock_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.sailor-v-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.symmetra-preview+json","application/vnd.github.squirrel-girl-preview","application/vnd.github.machine-man-preview","application/vnd.github.sailor-v-preview+json","application/vnd.github.v3.raw+json","application/vnd.github.v3.text+json","application/vnd.github.v3.html+json","application/vnd.github.v3.full+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"number","description":"no description","in":"path","name":"number","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-issues"],"x-swgg-descriptionLineList":["[Issues](https://developer.github.com/v3/issues/#unlock-an-issue) - Unlock an issue","","Users with push access can unlock an issue's conversation."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Issues](https://developer.github.com/v3/issues/#unlock-an-issue) - Unlock an issue","x-swgg-tags0":"github-issues"},"put":{"consumes":[],"description":"[Issues](https://developer.github.com/v3/issues/#lock-an-issue) - Lock an issue\n\n**Note:** You can now add a reason when you lock an issue. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-01-10-lock-reason-api-preview) for full details. To access this feature, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.sailor-v-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nUsers with push access can lock an issue or pull request's conversation.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fissues_2F_7Bnumber_7D_2Flock_20PUT","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.sailor-v-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.symmetra-preview+json","application/vnd.github.squirrel-girl-preview","application/vnd.github.machine-man-preview","application/vnd.github.sailor-v-preview+json","application/vnd.github.v3.raw+json","application/vnd.github.v3.text+json","application/vnd.github.v3.html+json","application/vnd.github.v3.full+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"number","description":"no description","in":"path","name":"number","required":true,"type":"string"},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fissues_2F_7Bnumber_7D_2Flock_20PUT.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-issues"],"x-swgg-descriptionLineList":["[Issues](https://developer.github.com/v3/issues/#lock-an-issue) - Lock an issue","","**Note:** You can now add a reason when you lock an issue. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-01-10-lock-reason-api-preview) for full details. To access this feature, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.sailor-v-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","Users with push access can lock an issue or pull request's conversation."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Issues](https://developer.github.com/v3/issues/#lock-an-issue) - Lock an issue","x-swgg-tags0":"github-issues"}},"/repos/{owner}/{repo}/issues/{number}/reactions":{"get":{"consumes":[],"description":"[Reactions](https://developer.github.com/v3/reactions/#list-reactions-for-an-issue) - List reactions for an issue\n\n**Note:** APIs for managing reactions are currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.squirrel-girl-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nList the reactions to an [issue](https://developer.github.com/v3/issues/).","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fissues_2F_7Bnumber_7D_2Freactions_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.squirrel-girl-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.squirrel-girl-preview+json","application/vnd.github.jean-grey-preview+json","application/vnd.github.echo-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"number","description":"no description","in":"path","name":"number","required":true,"type":"string"},{"description":"Returns a single [reaction type](https://developer.github.com/v3/reactions/#reaction-types). Omit this parameter to list all reactions to an issue.","in":"query","name":"content","type":"string","x-swgg-descriptionLineList":["Returns a single [reaction type](https://developer.github.com/v3/reactions/#reaction-types). Omit this parameter to list all reactions to an issue."]}],"responses":{"default":{"description":"default response"}},"tags":["github-reactions"],"x-swgg-descriptionLineList":["[Reactions](https://developer.github.com/v3/reactions/#list-reactions-for-an-issue) - List reactions for an issue","","**Note:** APIs for managing reactions are currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.squirrel-girl-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","List the reactions to an [issue](https://developer.github.com/v3/issues/)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Reactions](https://developer.github.com/v3/reactions/#list-reactions-for-an-issue) - List reactions for an issue","x-swgg-tags0":"github-reactions"},"post":{"consumes":[],"description":"[Reactions](https://developer.github.com/v3/reactions/#create-reaction-for-an-issue) - Create reaction for an issue\n\n**Note:** APIs for managing reactions are currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.squirrel-girl-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nCreate a reaction to an [issue](https://developer.github.com/v3/issues/). A response with a ```Status: 200 OK``` means that you already added the reaction type to this issue.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fissues_2F_7Bnumber_7D_2Freactions_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.squirrel-girl-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.squirrel-girl-preview+json","application/vnd.github.jean-grey-preview+json","application/vnd.github.echo-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"number","description":"no description","in":"path","name":"number","required":true,"type":"string"},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fissues_2F_7Bnumber_7D_2Freactions_20POST.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-reactions"],"x-swgg-descriptionLineList":["[Reactions](https://developer.github.com/v3/reactions/#create-reaction-for-an-issue) - Create reaction for an issue","","**Note:** APIs for managing reactions are currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.squirrel-girl-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","Create a reaction to an [issue](https://developer.github.com/v3/issues/). A response with a ```Status: 200 OK``` means that you already added the reaction type to this issue."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Reactions](https://developer.github.com/v3/reactions/#create-reaction-for-an-issue) - Create reaction for an issue","x-swgg-tags0":"github-reactions"}},"/repos/{owner}/{repo}/issues/{number}/timeline":{"get":{"consumes":[],"description":"[Issue Timeline](https://developer.github.com/v3/issues/timeline/#list-events-for-an-issue) - List events for an issue","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fissues_2F_7Bnumber_7D_2Ftimeline_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.mockingbird-preview"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.mockingbird-preview","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"number","description":"no description","in":"path","name":"number","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-issues"],"x-swgg-descriptionLineList":["[Issue Timeline](https://developer.github.com/v3/issues/timeline/#list-events-for-an-issue) - List events for an issue"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Issue Timeline](https://developer.github.com/v3/issues/timeline/#list-events-for-an-issue) - List events for an issue","x-swgg-tags0":"github-issues"}},"/repos/{owner}/{repo}/keys":{"get":{"consumes":[],"description":"[Deploy Keys](https://developer.github.com/v3/repos/keys/#list-deploy-keys) - List deploy keys","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fkeys_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Deploy Keys](https://developer.github.com/v3/repos/keys/#list-deploy-keys) - List deploy keys"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Deploy Keys](https://developer.github.com/v3/repos/keys/#list-deploy-keys) - List deploy keys","x-swgg-tags0":"github-repos"},"post":{"consumes":[],"description":"[Deploy Keys](https://developer.github.com/v3/repos/keys/#add-a-new-deploy-key) - Add a new deploy key","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fkeys_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fkeys_20POST.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Deploy Keys](https://developer.github.com/v3/repos/keys/#add-a-new-deploy-key) - Add a new deploy key"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Deploy Keys](https://developer.github.com/v3/repos/keys/#add-a-new-deploy-key) - Add a new deploy key","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/keys/{id}":{"delete":{"consumes":[],"description":"[Deploy Keys](https://developer.github.com/v3/repos/keys/#remove-a-deploy-key) - Remove a deploy key","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fkeys_2F_7Bid_7D_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Deploy Keys](https://developer.github.com/v3/repos/keys/#remove-a-deploy-key) - Remove a deploy key"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Deploy Keys](https://developer.github.com/v3/repos/keys/#remove-a-deploy-key) - Remove a deploy key","x-swgg-tags0":"github-repos"},"get":{"consumes":[],"description":"[Deploy Keys](https://developer.github.com/v3/repos/keys/#get-a-deploy-key) - Get a deploy key","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fkeys_2F_7Bid_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Deploy Keys](https://developer.github.com/v3/repos/keys/#get-a-deploy-key) - Get a deploy key"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Deploy Keys](https://developer.github.com/v3/repos/keys/#get-a-deploy-key) - Get a deploy key","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/labels":{"get":{"consumes":[],"description":"[Issue Labels](https://developer.github.com/v3/issues/labels/#list-all-labels-for-this-repository) - List all labels for this repository\n\n**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.symmetra-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Flabels_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.symmetra-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.symmetra-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-issues"],"x-swgg-descriptionLineList":["[Issue Labels](https://developer.github.com/v3/issues/labels/#list-all-labels-for-this-repository) - List all labels for this repository","","**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.symmetra-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Issue Labels](https://developer.github.com/v3/issues/labels/#list-all-labels-for-this-repository) - List all labels for this repository","x-swgg-tags0":"github-issues"},"post":{"consumes":[],"description":"[Issue Labels](https://developer.github.com/v3/issues/labels/#create-a-label) - Create a label\n\n**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.symmetra-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Flabels_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.symmetra-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.symmetra-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Flabels_20POST.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-issues"],"x-swgg-descriptionLineList":["[Issue Labels](https://developer.github.com/v3/issues/labels/#create-a-label) - Create a label","","**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.symmetra-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Issue Labels](https://developer.github.com/v3/issues/labels/#create-a-label) - Create a label","x-swgg-tags0":"github-issues"}},"/repos/{owner}/{repo}/labels/{name}":{"delete":{"consumes":[],"description":"[Issue Labels](https://developer.github.com/v3/issues/labels/#delete-a-label) - Delete a label","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Flabels_2F_7Bname_7D_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.symmetra-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.symmetra-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"name","description":"no description","in":"path","name":"name","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-issues"],"x-swgg-descriptionLineList":["[Issue Labels](https://developer.github.com/v3/issues/labels/#delete-a-label) - Delete a label"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Issue Labels](https://developer.github.com/v3/issues/labels/#delete-a-label) - Delete a label","x-swgg-tags0":"github-issues"},"get":{"consumes":[],"description":"[Issue Labels](https://developer.github.com/v3/issues/labels/#get-a-single-label) - Get a single label\n\n**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.symmetra-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Flabels_2F_7Bname_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.symmetra-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.symmetra-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"name","description":"no description","in":"path","name":"name","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-issues"],"x-swgg-descriptionLineList":["[Issue Labels](https://developer.github.com/v3/issues/labels/#get-a-single-label) - Get a single label","","**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.symmetra-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Issue Labels](https://developer.github.com/v3/issues/labels/#get-a-single-label) - Get a single label","x-swgg-tags0":"github-issues"},"patch":{"consumes":[],"description":"[Issue Labels](https://developer.github.com/v3/issues/labels/#update-a-label) - Update a label\n\n**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.symmetra-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Flabels_2F_7Bname_7D_20PATCH","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.symmetra-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.symmetra-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"name","description":"The name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing ```:strawberry:``` will render the emoji . For a full list of available emoji and codes, see [emoji-cheat-sheet.com](http://emoji-cheat-sheet.com/).","in":"path","name":"name","required":true,"type":"string","x-swgg-descriptionLineList":["The name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing ```:strawberry:``` will render the emoji . For a full list of available emoji and codes, see [emoji-cheat-sheet.com](http://emoji-cheat-sheet.com/)."]},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Flabels_2F_7Bname_7D_20PATCH.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-issues"],"x-swgg-descriptionLineList":["[Issue Labels](https://developer.github.com/v3/issues/labels/#update-a-label) - Update a label","","**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.symmetra-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Issue Labels](https://developer.github.com/v3/issues/labels/#update-a-label) - Update a label","x-swgg-tags0":"github-issues"}},"/repos/{owner}/{repo}/languages":{"get":{"consumes":[],"description":"[Repositories](https://developer.github.com/v3/repos/#list-languages) - List languages\n\nLists languages for the specified repository. The value shown for each language is the number of bytes of code written in that language.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Flanguages_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.nightshade-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.mercy-preview+json","application/vnd.github.nightshade-preview+json","application/vnd.github.jean-grey-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Repositories](https://developer.github.com/v3/repos/#list-languages) - List languages","","Lists languages for the specified repository. The value shown for each language is the number of bytes of code written in that language."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Repositories](https://developer.github.com/v3/repos/#list-languages) - List languages","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/license":{"get":{"consumes":[],"description":"[Licenses](https://developer.github.com/v3/licenses/#get-the-contents-of-a-repositorys-license) - Get the contents of a repository's license\n\nThis method returns the contents of the repository's license file, if one is detected.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Flicense_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-misc"],"x-swgg-descriptionLineList":["[Licenses](https://developer.github.com/v3/licenses/#get-the-contents-of-a-repositorys-license) - Get the contents of a repository's license","","This method returns the contents of the repository's license file, if one is detected."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Licenses](https://developer.github.com/v3/licenses/#get-the-contents-of-a-repositorys-license) - Get the contents of a repository's license","x-swgg-tags0":"github-misc"}},"/repos/{owner}/{repo}/merges":{"post":{"consumes":[],"description":"[Merging](https://developer.github.com/v3/repos/merging/#perform-a-merge) - Perform a merge","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fmerges_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"description":"**Required**. The name of the base branch that the head will be merged into.","in":"query","name":"base","required":true,"type":"string","x-swgg-descriptionLineList":["**Required**. The name of the base branch that the head will be merged into."]},{"description":"**Required**. The head to merge. This can be a branch name or a commit SHA1.","in":"query","name":"head","required":true,"type":"string","x-swgg-descriptionLineList":["**Required**. The head to merge. This can be a branch name or a commit SHA1."]},{"description":"Commit message to use for the merge commit. If omitted, a default message will be used.","in":"query","name":"commit_message","type":"string","x-swgg-descriptionLineList":["Commit message to use for the merge commit. If omitted, a default message will be used."]}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Merging](https://developer.github.com/v3/repos/merging/#perform-a-merge) - Perform a merge"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Merging](https://developer.github.com/v3/repos/merging/#perform-a-merge) - Perform a merge","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/milestones":{"get":{"consumes":[],"description":"[Issue Milestones](https://developer.github.com/v3/issues/milestones/#list-milestones-for-a-repository) - List milestones for a repository","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fmilestones_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"open","description":"The state of the milestone. Either ```open```, ```closed```, or ```all```. Default: ```open```","in":"query","name":"state","type":"string","x-swgg-descriptionLineList":["The state of the milestone. Either ```open```, ```closed```, or ```all```. Default: ```open```"]},{"default":"due_on","description":"What to sort results by. Either ```due_on``` or ```completeness```. Default: ```due_on```","in":"query","name":"sort","type":"string","x-swgg-descriptionLineList":["What to sort results by. Either ```due_on``` or ```completeness```. Default: ```due_on```"]},{"default":"asc","description":"The direction of the sort. Either ```asc``` or ```desc```. Default: ```asc```","in":"query","name":"direction","type":"string","x-swgg-descriptionLineList":["The direction of the sort. Either ```asc``` or ```desc```. Default: ```asc```"]}],"responses":{"default":{"description":"default response"}},"tags":["github-issues"],"x-swgg-descriptionLineList":["[Issue Milestones](https://developer.github.com/v3/issues/milestones/#list-milestones-for-a-repository) - List milestones for a repository"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Issue Milestones](https://developer.github.com/v3/issues/milestones/#list-milestones-for-a-repository) - List milestones for a repository","x-swgg-tags0":"github-issues"},"post":{"consumes":[],"description":"[Issue Milestones](https://developer.github.com/v3/issues/milestones/#create-a-milestone) - Create a milestone","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fmilestones_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fmilestones_20POST.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-issues"],"x-swgg-descriptionLineList":["[Issue Milestones](https://developer.github.com/v3/issues/milestones/#create-a-milestone) - Create a milestone"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Issue Milestones](https://developer.github.com/v3/issues/milestones/#create-a-milestone) - Create a milestone","x-swgg-tags0":"github-issues"}},"/repos/{owner}/{repo}/milestones/{number}":{"delete":{"consumes":[],"description":"[Issue Milestones](https://developer.github.com/v3/issues/milestones/#delete-a-milestone) - Delete a milestone","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fmilestones_2F_7Bnumber_7D_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"number","description":"no description","in":"path","name":"number","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-issues"],"x-swgg-descriptionLineList":["[Issue Milestones](https://developer.github.com/v3/issues/milestones/#delete-a-milestone) - Delete a milestone"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Issue Milestones](https://developer.github.com/v3/issues/milestones/#delete-a-milestone) - Delete a milestone","x-swgg-tags0":"github-issues"},"get":{"consumes":[],"description":"[Issue Milestones](https://developer.github.com/v3/issues/milestones/#get-a-single-milestone) - Get a single milestone","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fmilestones_2F_7Bnumber_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"number","description":"no description","in":"path","name":"number","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-issues"],"x-swgg-descriptionLineList":["[Issue Milestones](https://developer.github.com/v3/issues/milestones/#get-a-single-milestone) - Get a single milestone"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Issue Milestones](https://developer.github.com/v3/issues/milestones/#get-a-single-milestone) - Get a single milestone","x-swgg-tags0":"github-issues"},"patch":{"consumes":[],"description":"[Issue Milestones](https://developer.github.com/v3/issues/milestones/#update-a-milestone) - Update a milestone","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fmilestones_2F_7Bnumber_7D_20PATCH","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"number","description":"no description","in":"path","name":"number","required":true,"type":"string"},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fmilestones_2F_7Bnumber_7D_20PATCH.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-issues"],"x-swgg-descriptionLineList":["[Issue Milestones](https://developer.github.com/v3/issues/milestones/#update-a-milestone) - Update a milestone"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Issue Milestones](https://developer.github.com/v3/issues/milestones/#update-a-milestone) - Update a milestone","x-swgg-tags0":"github-issues"}},"/repos/{owner}/{repo}/milestones/{number}/labels":{"get":{"consumes":[],"description":"[Issue Labels](https://developer.github.com/v3/issues/labels/#get-labels-for-every-issue-in-a-milestone) - Get labels for every issue in a milestone\n\n**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.symmetra-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fmilestones_2F_7Bnumber_7D_2Flabels_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.symmetra-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.symmetra-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"number","description":"no description","in":"path","name":"number","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-issues"],"x-swgg-descriptionLineList":["[Issue Labels](https://developer.github.com/v3/issues/labels/#get-labels-for-every-issue-in-a-milestone) - Get labels for every issue in a milestone","","**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.symmetra-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Issue Labels](https://developer.github.com/v3/issues/labels/#get-labels-for-every-issue-in-a-milestone) - Get labels for every issue in a milestone","x-swgg-tags0":"github-issues"}},"/repos/{owner}/{repo}/notifications":{"get":{"consumes":[],"description":"[Notifications](https://developer.github.com/v3/activity/notifications/#list-your-notifications-in-a-repository) - List your notifications in a repository\n\nList all notifications for the current user.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fnotifications_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":false,"description":"If ```true```, show notifications marked as read. Default: ```false```","in":"query","name":"all","type":"boolean","x-swgg-descriptionLineList":["If ```true```, show notifications marked as read. Default: ```false```"]},{"default":false,"description":"If ```true```, only shows notifications in which the user is directly participating or mentioned. Default: ```false```","in":"query","name":"participating","type":"boolean","x-swgg-descriptionLineList":["If ```true```, only shows notifications in which the user is directly participating or mentioned. Default: ```false```"]},{"default":"Time.now","description":"Only show notifications updated after the given time. This is a timestamp in ISO 8601 format: ```YYYY-MM-DDTHH:MM:SSZ```. Default: ```Time.now```","in":"query","name":"since","type":"string","x-swgg-descriptionLineList":["Only show notifications updated after the given time. This is a timestamp in ISO 8601 format: ```YYYY-MM-DDTHH:MM:SSZ```. Default: ```Time.now```"]},{"description":"Only show notifications updated before the given time. This is a timestamp in ISO 8601 format: ```YYYY-MM-DDTHH:MM:SSZ```.","in":"query","name":"before","type":"string","x-swgg-descriptionLineList":["Only show notifications updated before the given time. This is a timestamp in ISO 8601 format: ```YYYY-MM-DDTHH:MM:SSZ```."]}],"responses":{"default":{"description":"default response"}},"tags":["github-activity"],"x-swgg-descriptionLineList":["[Notifications](https://developer.github.com/v3/activity/notifications/#list-your-notifications-in-a-repository) - List your notifications in a repository","","List all notifications for the current user."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Notifications](https://developer.github.com/v3/activity/notifications/#list-your-notifications-in-a-repository) - List your notifications in a repository","x-swgg-tags0":"github-activity"},"put":{"consumes":[],"description":"[Notifications](https://developer.github.com/v3/activity/notifications/#mark-notifications-as-read-in-a-repository) - Mark notifications as read in a repository\n\nMarking all notifications in a repository as \"read\" removes them from the [default view on GitHub](https://github.com/notifications).","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fnotifications_20PUT","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"Time.now","description":"Describes the last point that notifications were checked.  Anything updated since this time will not be updated. This is a timestamp in ISO 8601 format: ```YYYY-MM-DDTHH:MM:SSZ```. Default: ```Time.now```","in":"query","name":"last_read_at","type":"string","x-swgg-descriptionLineList":["Describes the last point that notifications were checked.  Anything updated since this time will not be updated. This is a timestamp in ISO 8601 format: ```YYYY-MM-DDTHH:MM:SSZ```. Default: ```Time.now```"]}],"responses":{"default":{"description":"default response"}},"tags":["github-activity"],"x-swgg-descriptionLineList":["[Notifications](https://developer.github.com/v3/activity/notifications/#mark-notifications-as-read-in-a-repository) - Mark notifications as read in a repository","","Marking all notifications in a repository as \"read\" removes them from the [default view on GitHub](https://github.com/notifications)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Notifications](https://developer.github.com/v3/activity/notifications/#mark-notifications-as-read-in-a-repository) - Mark notifications as read in a repository","x-swgg-tags0":"github-activity"}},"/repos/{owner}/{repo}/pages":{"get":{"consumes":[],"description":"[Pages](https://developer.github.com/v3/repos/pages/#get-information-about-a-pages-site) - Get information about a Pages site","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpages_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.mister-fantastic-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.mister-fantastic-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Pages](https://developer.github.com/v3/repos/pages/#get-information-about-a-pages-site) - Get information about a Pages site"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Pages](https://developer.github.com/v3/repos/pages/#get-information-about-a-pages-site) - Get information about a Pages site","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/pages/builds":{"get":{"consumes":[],"description":"[Pages](https://developer.github.com/v3/repos/pages/#list-pages-builds) - List Pages builds","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpages_2Fbuilds_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.mister-fantastic-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.mister-fantastic-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Pages](https://developer.github.com/v3/repos/pages/#list-pages-builds) - List Pages builds"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Pages](https://developer.github.com/v3/repos/pages/#list-pages-builds) - List Pages builds","x-swgg-tags0":"github-repos"},"post":{"consumes":[],"description":"[Pages](https://developer.github.com/v3/repos/pages/#request-a-page-build) - Request a page build","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpages_2Fbuilds_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.mister-fantastic-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.mister-fantastic-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Pages](https://developer.github.com/v3/repos/pages/#request-a-page-build) - Request a page build"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Pages](https://developer.github.com/v3/repos/pages/#request-a-page-build) - Request a page build","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/pages/builds/latest":{"get":{"consumes":[],"description":"[Pages](https://developer.github.com/v3/repos/pages/#list-latest-pages-build) - List latest Pages build","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpages_2Fbuilds_2Flatest_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.mister-fantastic-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.mister-fantastic-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Pages](https://developer.github.com/v3/repos/pages/#list-latest-pages-build) - List latest Pages build"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Pages](https://developer.github.com/v3/repos/pages/#list-latest-pages-build) - List latest Pages build","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/pages/builds/{id}":{"get":{"consumes":[],"description":"[Pages](https://developer.github.com/v3/repos/pages/#list-a-specific-pages-build) - List a specific Pages build","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpages_2Fbuilds_2F_7Bid_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.mister-fantastic-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.mister-fantastic-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Pages](https://developer.github.com/v3/repos/pages/#list-a-specific-pages-build) - List a specific Pages build"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Pages](https://developer.github.com/v3/repos/pages/#list-a-specific-pages-build) - List a specific Pages build","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/projects":{"get":{"consumes":[],"description":"[Projects](https://developer.github.com/v3/projects/#list-repository-projects) - List repository projects","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fprojects_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.inertia-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.inertia-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"open","description":"Indicates the state of the projects to return. Can be either ```open```, ```closed```, or ```all```. Default: ```open```","in":"query","name":"state","type":"string","x-swgg-descriptionLineList":["Indicates the state of the projects to return. Can be either ```open```, ```closed```, or ```all```. Default: ```open```"]}],"responses":{"default":{"description":"default response"}},"tags":["github-projects"],"x-swgg-descriptionLineList":["[Projects](https://developer.github.com/v3/projects/#list-repository-projects) - List repository projects"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Projects](https://developer.github.com/v3/projects/#list-repository-projects) - List repository projects","x-swgg-tags0":"github-projects"},"post":{"consumes":[],"description":"[Projects](https://developer.github.com/v3/projects/#create-a-repository-project) - Create a repository project","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fprojects_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.inertia-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.inertia-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"description":"The body of the project.","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fprojects_20POST.body"},"x-swgg-descriptionLineList":["The body of the project."]}],"responses":{"default":{"description":"default response"}},"tags":["github-projects"],"x-swgg-descriptionLineList":["[Projects](https://developer.github.com/v3/projects/#create-a-repository-project) - Create a repository project"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Projects](https://developer.github.com/v3/projects/#create-a-repository-project) - Create a repository project","x-swgg-tags0":"github-projects"}},"/repos/{owner}/{repo}/pulls":{"get":{"consumes":[],"description":"[Pull Requests](https://developer.github.com/v3/pulls/#list-pull-requests) - List pull requests\n\n**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.symmetra-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpulls_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.symmetra-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.symmetra-preview+json","application/vnd.github.v3.raw+json","application/vnd.github.v3.text+json","application/vnd.github.v3.html+json","application/vnd.github.v3.full+json","application/vnd.github.v3.diff","application/vnd.github.v3.patch","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"open","description":"Either ```open```, ```closed```, or ```all``` to filter by state. Default: ```open```","in":"query","name":"state","type":"string","x-swgg-descriptionLineList":["Either ```open```, ```closed```, or ```all``` to filter by state. Default: ```open```"]},{"description":"Filter pulls by head user and branch name in the format of ```user:ref-name```. Example: ```github:new-script-format```.","in":"query","name":"head","type":"string","x-swgg-descriptionLineList":["Filter pulls by head user and branch name in the format of ```user:ref-name```. Example: ```github:new-script-format```."]},{"description":"Filter pulls by base branch name. Example: ```gh-pages```.","in":"query","name":"base","type":"string","x-swgg-descriptionLineList":["Filter pulls by base branch name. Example: ```gh-pages```."]},{"default":"created","description":"What to sort results by. Can be either ```created```, ```updated```, ```popularity``` (comment count) or ```long-running``` (age, filtering by pulls updated in the last month). Default: ```created```","in":"query","name":"sort","type":"string","x-swgg-descriptionLineList":["What to sort results by. Can be either ```created```, ```updated```, ```popularity``` (comment count) or ```long-running``` (age, filtering by pulls updated in the last month). Default: ```created```"]},{"default":"desc","description":"The direction of the sort. Can be either ```asc``` or ```desc```. Default: ```desc``` when sort is ```created``` or sort is not specified, otherwise ```asc```.","in":"query","name":"direction","type":"string","x-swgg-descriptionLineList":["The direction of the sort. Can be either ```asc``` or ```desc```. Default: ```desc``` when sort is ```created``` or sort is not specified, otherwise ```asc```."]}],"responses":{"default":{"description":"default response"}},"tags":["github-pulls"],"x-swgg-descriptionLineList":["[Pull Requests](https://developer.github.com/v3/pulls/#list-pull-requests) - List pull requests","","**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.symmetra-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Pull Requests](https://developer.github.com/v3/pulls/#list-pull-requests) - List pull requests","x-swgg-tags0":"github-pulls"},"post":{"consumes":[],"description":"[Pull Requests](https://developer.github.com/v3/pulls/#create-a-pull-request) - Create a pull request\n\n**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.symmetra-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpulls_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.symmetra-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.symmetra-preview+json","application/vnd.github.v3.raw+json","application/vnd.github.v3.text+json","application/vnd.github.v3.html+json","application/vnd.github.v3.full+json","application/vnd.github.v3.diff","application/vnd.github.v3.patch","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"description":"The contents of the pull request.","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpulls_20POST.body"},"x-swgg-descriptionLineList":["The contents of the pull request."]}],"responses":{"default":{"description":"default response"}},"tags":["github-pulls"],"x-swgg-descriptionLineList":["[Pull Requests](https://developer.github.com/v3/pulls/#create-a-pull-request) - Create a pull request","","**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.symmetra-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Pull Requests](https://developer.github.com/v3/pulls/#create-a-pull-request) - Create a pull request","x-swgg-tags0":"github-pulls"}},"/repos/{owner}/{repo}/pulls/comments":{"get":{"consumes":[],"description":"[Review Comments](https://developer.github.com/v3/pulls/comments/#list-comments-in-a-repository) - List comments in a repository","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpulls_2Fcomments_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.squirrel-girl-preview"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.squirrel-girl-preview","application/vnd.github.v3.diff","application/vnd.github.v3.raw+json","application/vnd.github.v3.text+json","application/vnd.github.v3.html+json","application/vnd.github.v3.full+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"created","description":"Can be either ```created``` or ```updated``` comments. Default: ```created```","in":"query","name":"sort","type":"string","x-swgg-descriptionLineList":["Can be either ```created``` or ```updated``` comments. Default: ```created```"]},{"description":"Can be either ```asc``` or ```desc```. Ignored without ```sort``` parameter.","in":"query","name":"direction","type":"string","x-swgg-descriptionLineList":["Can be either ```asc``` or ```desc```. Ignored without ```sort``` parameter."]},{"description":"This is a timestamp in ISO 8601 format: ```YYYY-MM-DDTHH:MM:SSZ```. Only returns comments ```updated``` at or after this time.","in":"query","name":"since","type":"string","x-swgg-descriptionLineList":["This is a timestamp in ISO 8601 format: ```YYYY-MM-DDTHH:MM:SSZ```. Only returns comments ```updated``` at or after this time."]}],"responses":{"default":{"description":"default response"}},"tags":["github-pulls"],"x-swgg-descriptionLineList":["[Review Comments](https://developer.github.com/v3/pulls/comments/#list-comments-in-a-repository) - List comments in a repository"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Review Comments](https://developer.github.com/v3/pulls/comments/#list-comments-in-a-repository) - List comments in a repository","x-swgg-tags0":"github-pulls"}},"/repos/{owner}/{repo}/pulls/comments/{id}":{"delete":{"consumes":[],"description":"[Review Comments](https://developer.github.com/v3/pulls/comments/#delete-a-comment) - Delete a comment","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpulls_2Fcomments_2F_7Bid_7D_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.squirrel-girl-preview"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.squirrel-girl-preview","application/vnd.github.v3.diff","application/vnd.github.v3.raw+json","application/vnd.github.v3.text+json","application/vnd.github.v3.html+json","application/vnd.github.v3.full+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-pulls"],"x-swgg-descriptionLineList":["[Review Comments](https://developer.github.com/v3/pulls/comments/#delete-a-comment) - Delete a comment"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Review Comments](https://developer.github.com/v3/pulls/comments/#delete-a-comment) - Delete a comment","x-swgg-tags0":"github-pulls"},"get":{"consumes":[],"description":"[Review Comments](https://developer.github.com/v3/pulls/comments/#get-a-single-comment) - Get a single comment","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpulls_2Fcomments_2F_7Bid_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.squirrel-girl-preview"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.squirrel-girl-preview","application/vnd.github.v3.diff","application/vnd.github.v3.raw+json","application/vnd.github.v3.text+json","application/vnd.github.v3.html+json","application/vnd.github.v3.full+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-pulls"],"x-swgg-descriptionLineList":["[Review Comments](https://developer.github.com/v3/pulls/comments/#get-a-single-comment) - Get a single comment"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Review Comments](https://developer.github.com/v3/pulls/comments/#get-a-single-comment) - Get a single comment","x-swgg-tags0":"github-pulls"},"patch":{"consumes":[],"description":"[Review Comments](https://developer.github.com/v3/pulls/comments/#edit-a-comment) - Edit a comment","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpulls_2Fcomments_2F_7Bid_7D_20PATCH","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.squirrel-girl-preview"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.squirrel-girl-preview","application/vnd.github.v3.diff","application/vnd.github.v3.raw+json","application/vnd.github.v3.text+json","application/vnd.github.v3.html+json","application/vnd.github.v3.full+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"},{"description":"**Required**. The text of the comment.","in":"body","name":"body","required":true,"schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpulls_2Fcomments_2F_7Bid_7D_20PATCH.body"},"x-swgg-descriptionLineList":["**Required**. The text of the comment."]}],"responses":{"default":{"description":"default response"}},"tags":["github-pulls"],"x-swgg-descriptionLineList":["[Review Comments](https://developer.github.com/v3/pulls/comments/#edit-a-comment) - Edit a comment"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Review Comments](https://developer.github.com/v3/pulls/comments/#edit-a-comment) - Edit a comment","x-swgg-tags0":"github-pulls"}},"/repos/{owner}/{repo}/pulls/comments/{id}/reactions":{"get":{"consumes":[],"description":"[Reactions](https://developer.github.com/v3/reactions/#list-reactions-for-a-pull-request-review-comment) - List reactions for a pull request review comment\n\n**Note:** APIs for managing reactions are currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.squirrel-girl-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nList the reactions to a [pull request review comment](https://developer.github.com/v3/pulls/comments/).","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpulls_2Fcomments_2F_7Bid_7D_2Freactions_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.squirrel-girl-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.squirrel-girl-preview+json","application/vnd.github.jean-grey-preview+json","application/vnd.github.echo-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"},{"description":"Returns a single [reaction type](https://developer.github.com/v3/reactions/#reaction-types). Omit this parameter to list all reactions to a pull request review comment.","in":"query","name":"content","type":"string","x-swgg-descriptionLineList":["Returns a single [reaction type](https://developer.github.com/v3/reactions/#reaction-types). Omit this parameter to list all reactions to a pull request review comment."]}],"responses":{"default":{"description":"default response"}},"tags":["github-reactions"],"x-swgg-descriptionLineList":["[Reactions](https://developer.github.com/v3/reactions/#list-reactions-for-a-pull-request-review-comment) - List reactions for a pull request review comment","","**Note:** APIs for managing reactions are currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.squirrel-girl-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","List the reactions to a [pull request review comment](https://developer.github.com/v3/pulls/comments/)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Reactions](https://developer.github.com/v3/reactions/#list-reactions-for-a-pull-request-review-comment) - List reactions for a pull request review comment","x-swgg-tags0":"github-reactions"},"post":{"consumes":[],"description":"[Reactions](https://developer.github.com/v3/reactions/#create-reaction-for-a-pull-request-review-comment) - Create reaction for a pull request review comment\n\n**Note:** APIs for managing reactions are currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.squirrel-girl-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nCreate a reaction to a [pull request review comment](https://developer.github.com/v3/pulls/comments/). A response with a ```Status: 200 OK``` means that you already added the reaction type to this pull request review comment.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpulls_2Fcomments_2F_7Bid_7D_2Freactions_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.squirrel-girl-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.squirrel-girl-preview+json","application/vnd.github.jean-grey-preview+json","application/vnd.github.echo-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpulls_2Fcomments_2F_7Bid_7D_2Freactions_20POST.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-reactions"],"x-swgg-descriptionLineList":["[Reactions](https://developer.github.com/v3/reactions/#create-reaction-for-a-pull-request-review-comment) - Create reaction for a pull request review comment","","**Note:** APIs for managing reactions are currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.squirrel-girl-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","Create a reaction to a [pull request review comment](https://developer.github.com/v3/pulls/comments/). A response with a ```Status: 200 OK``` means that you already added the reaction type to this pull request review comment."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Reactions](https://developer.github.com/v3/reactions/#create-reaction-for-a-pull-request-review-comment) - Create reaction for a pull request review comment","x-swgg-tags0":"github-reactions"}},"/repos/{owner}/{repo}/pulls/{number}":{"get":{"consumes":[],"description":"[Pull Requests](https://developer.github.com/v3/pulls/#get-a-single-pull-request) - Get a single pull request\n\n**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.symmetra-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpulls_2F_7Bnumber_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.symmetra-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.symmetra-preview+json","application/vnd.github.v3.raw+json","application/vnd.github.v3.text+json","application/vnd.github.v3.html+json","application/vnd.github.v3.full+json","application/vnd.github.v3.diff","application/vnd.github.v3.patch","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"number","description":"no description","in":"path","name":"number","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-pulls"],"x-swgg-descriptionLineList":["[Pull Requests](https://developer.github.com/v3/pulls/#get-a-single-pull-request) - Get a single pull request","","**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.symmetra-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Pull Requests](https://developer.github.com/v3/pulls/#get-a-single-pull-request) - Get a single pull request","x-swgg-tags0":"github-pulls"},"patch":{"consumes":[],"description":"[Pull Requests](https://developer.github.com/v3/pulls/#update-a-pull-request) - Update a pull request\n\n**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.symmetra-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpulls_2F_7Bnumber_7D_20PATCH","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.symmetra-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.symmetra-preview+json","application/vnd.github.v3.raw+json","application/vnd.github.v3.text+json","application/vnd.github.v3.html+json","application/vnd.github.v3.full+json","application/vnd.github.v3.diff","application/vnd.github.v3.patch","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"number","description":"no description","in":"path","name":"number","required":true,"type":"string"},{"description":"The contents of the pull request.","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpulls_2F_7Bnumber_7D_20PATCH.body"},"x-swgg-descriptionLineList":["The contents of the pull request."]}],"responses":{"default":{"description":"default response"}},"tags":["github-pulls"],"x-swgg-descriptionLineList":["[Pull Requests](https://developer.github.com/v3/pulls/#update-a-pull-request) - Update a pull request","","**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.symmetra-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Pull Requests](https://developer.github.com/v3/pulls/#update-a-pull-request) - Update a pull request","x-swgg-tags0":"github-pulls"}},"/repos/{owner}/{repo}/pulls/{number}/comments":{"get":{"consumes":[],"description":"[Review Comments](https://developer.github.com/v3/pulls/comments/#list-comments-on-a-pull-request) - List comments on a pull request","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpulls_2F_7Bnumber_7D_2Fcomments_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.squirrel-girl-preview"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.squirrel-girl-preview","application/vnd.github.v3.diff","application/vnd.github.v3.raw+json","application/vnd.github.v3.text+json","application/vnd.github.v3.html+json","application/vnd.github.v3.full+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"number","description":"no description","in":"path","name":"number","required":true,"type":"string"},{"default":"created","description":"Can be either ```created``` or ```updated``` comments. Default: ```created```","in":"query","name":"sort","type":"string","x-swgg-descriptionLineList":["Can be either ```created``` or ```updated``` comments. Default: ```created```"]},{"description":"Can be either ```asc``` or ```desc```. Ignored without ```sort``` parameter.","in":"query","name":"direction","type":"string","x-swgg-descriptionLineList":["Can be either ```asc``` or ```desc```. Ignored without ```sort``` parameter."]},{"description":"This is a timestamp in ISO 8601 format: ```YYYY-MM-DDTHH:MM:SSZ```. Only returns comments ```updated``` at or after this time.","in":"query","name":"since","type":"string","x-swgg-descriptionLineList":["This is a timestamp in ISO 8601 format: ```YYYY-MM-DDTHH:MM:SSZ```. Only returns comments ```updated``` at or after this time."]}],"responses":{"default":{"description":"default response"}},"tags":["github-pulls"],"x-swgg-descriptionLineList":["[Review Comments](https://developer.github.com/v3/pulls/comments/#list-comments-on-a-pull-request) - List comments on a pull request"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Review Comments](https://developer.github.com/v3/pulls/comments/#list-comments-on-a-pull-request) - List comments on a pull request","x-swgg-tags0":"github-pulls"},"post":{"consumes":[],"description":"[Review Comments](https://developer.github.com/v3/pulls/comments/#create-a-comment) - Create a comment","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpulls_2F_7Bnumber_7D_2Fcomments_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.squirrel-girl-preview"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.squirrel-girl-preview","application/vnd.github.v3.diff","application/vnd.github.v3.raw+json","application/vnd.github.v3.text+json","application/vnd.github.v3.html+json","application/vnd.github.v3.full+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"number","description":"no description","in":"path","name":"number","required":true,"type":"string"},{"description":"**Required**. The text of the comment.","in":"body","name":"body","required":true,"schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpulls_2F_7Bnumber_7D_2Fcomments_20POST.body"},"x-swgg-descriptionLineList":["**Required**. The text of the comment."]}],"responses":{"default":{"description":"default response"}},"tags":["github-pulls"],"x-swgg-descriptionLineList":["[Review Comments](https://developer.github.com/v3/pulls/comments/#create-a-comment) - Create a comment"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Review Comments](https://developer.github.com/v3/pulls/comments/#create-a-comment) - Create a comment","x-swgg-tags0":"github-pulls"}},"/repos/{owner}/{repo}/pulls/{number}/commits":{"get":{"consumes":[],"description":"[Pull Requests](https://developer.github.com/v3/pulls/#list-commits-on-a-pull-request) - List commits on a pull request\n\n**Note:** The response includes a maximum of 250 commits. To receive a complete commit list for pull requests with more than 250 commits, use the [Commit List API](https://developer.github.com/v3/repos/commits/#list-commits-on-a-repository).","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpulls_2F_7Bnumber_7D_2Fcommits_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.symmetra-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.symmetra-preview+json","application/vnd.github.v3.raw+json","application/vnd.github.v3.text+json","application/vnd.github.v3.html+json","application/vnd.github.v3.full+json","application/vnd.github.v3.diff","application/vnd.github.v3.patch","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"number","description":"no description","in":"path","name":"number","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-pulls"],"x-swgg-descriptionLineList":["[Pull Requests](https://developer.github.com/v3/pulls/#list-commits-on-a-pull-request) - List commits on a pull request","","**Note:** The response includes a maximum of 250 commits. To receive a complete commit list for pull requests with more than 250 commits, use the [Commit List API](https://developer.github.com/v3/repos/commits/#list-commits-on-a-repository)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Pull Requests](https://developer.github.com/v3/pulls/#list-commits-on-a-pull-request) - List commits on a pull request","x-swgg-tags0":"github-pulls"}},"/repos/{owner}/{repo}/pulls/{number}/files":{"get":{"consumes":[],"description":"[Pull Requests](https://developer.github.com/v3/pulls/#list-pull-requests-files) - List pull requests files","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpulls_2F_7Bnumber_7D_2Ffiles_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.symmetra-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.symmetra-preview+json","application/vnd.github.v3.raw+json","application/vnd.github.v3.text+json","application/vnd.github.v3.html+json","application/vnd.github.v3.full+json","application/vnd.github.v3.diff","application/vnd.github.v3.patch","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"number","description":"no description","in":"path","name":"number","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-pulls"],"x-swgg-descriptionLineList":["[Pull Requests](https://developer.github.com/v3/pulls/#list-pull-requests-files) - List pull requests files"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Pull Requests](https://developer.github.com/v3/pulls/#list-pull-requests-files) - List pull requests files","x-swgg-tags0":"github-pulls"}},"/repos/{owner}/{repo}/pulls/{number}/merge":{"get":{"consumes":[],"description":"[Pull Requests](https://developer.github.com/v3/pulls/#get-if-a-pull-request-has-been-merged) - Get if a pull request has been merged","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpulls_2F_7Bnumber_7D_2Fmerge_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.symmetra-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.symmetra-preview+json","application/vnd.github.v3.raw+json","application/vnd.github.v3.text+json","application/vnd.github.v3.html+json","application/vnd.github.v3.full+json","application/vnd.github.v3.diff","application/vnd.github.v3.patch","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"number","description":"no description","in":"path","name":"number","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-pulls"],"x-swgg-descriptionLineList":["[Pull Requests](https://developer.github.com/v3/pulls/#get-if-a-pull-request-has-been-merged) - Get if a pull request has been merged"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Pull Requests](https://developer.github.com/v3/pulls/#get-if-a-pull-request-has-been-merged) - Get if a pull request has been merged","x-swgg-tags0":"github-pulls"},"put":{"consumes":[],"description":"[Pull Requests](https://developer.github.com/v3/pulls/#merge-a-pull-request-merge-button) - Merge a pull request (Merge Button)","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpulls_2F_7Bnumber_7D_2Fmerge_20PUT","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.symmetra-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.symmetra-preview+json","application/vnd.github.v3.raw+json","application/vnd.github.v3.text+json","application/vnd.github.v3.html+json","application/vnd.github.v3.full+json","application/vnd.github.v3.diff","application/vnd.github.v3.patch","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"number","description":"no description","in":"path","name":"number","required":true,"type":"string"},{"description":"Title for the automatic commit message.","in":"query","name":"commit_title","type":"string","x-swgg-descriptionLineList":["Title for the automatic commit message."]},{"description":"Extra detail to append to automatic commit message.","in":"query","name":"commit_message","type":"string","x-swgg-descriptionLineList":["Extra detail to append to automatic commit message."]},{"description":"SHA that pull request head must match to allow merge.","in":"query","name":"sha","type":"string","x-swgg-descriptionLineList":["SHA that pull request head must match to allow merge."]},{"description":"Merge method to use. Possible values are ```merge```, ```squash``` or ```rebase```. Default is ```merge```.","in":"query","name":"merge_method","type":"string","x-swgg-descriptionLineList":["Merge method to use. Possible values are ```merge```, ```squash``` or ```rebase```. Default is ```merge```."]}],"responses":{"default":{"description":"default response"}},"tags":["github-pulls"],"x-swgg-descriptionLineList":["[Pull Requests](https://developer.github.com/v3/pulls/#merge-a-pull-request-merge-button) - Merge a pull request (Merge Button)"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Pull Requests](https://developer.github.com/v3/pulls/#merge-a-pull-request-merge-button) - Merge a pull request (Merge Button)","x-swgg-tags0":"github-pulls"}},"/repos/{owner}/{repo}/pulls/{number}/requested_reviewers":{"delete":{"consumes":[],"description":"[Review Requests](https://developer.github.com/v3/pulls/review_requests/#delete-a-review-request) - Delete a review request","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpulls_2F_7Bnumber_7D_2Frequested_reviewers_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.symmetra-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.symmetra-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"number","description":"no description","in":"path","name":"number","required":true,"type":"string"},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpulls_2F_7Bnumber_7D_2Frequested_reviewers_20DELETE.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-pulls"],"x-swgg-descriptionLineList":["[Review Requests](https://developer.github.com/v3/pulls/review_requests/#delete-a-review-request) - Delete a review request"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Review Requests](https://developer.github.com/v3/pulls/review_requests/#delete-a-review-request) - Delete a review request","x-swgg-tags0":"github-pulls"},"get":{"consumes":[],"description":"[Review Requests](https://developer.github.com/v3/pulls/review_requests/#list-review-requests) - List review requests","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpulls_2F_7Bnumber_7D_2Frequested_reviewers_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.symmetra-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.symmetra-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"number","description":"no description","in":"path","name":"number","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-pulls"],"x-swgg-descriptionLineList":["[Review Requests](https://developer.github.com/v3/pulls/review_requests/#list-review-requests) - List review requests"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Review Requests](https://developer.github.com/v3/pulls/review_requests/#list-review-requests) - List review requests","x-swgg-tags0":"github-pulls"},"post":{"consumes":[],"description":"[Review Requests](https://developer.github.com/v3/pulls/review_requests/#create-a-review-request) - Create a review request\n\n**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.symmetra-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpulls_2F_7Bnumber_7D_2Frequested_reviewers_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.symmetra-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.symmetra-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"number","description":"no description","in":"path","name":"number","required":true,"type":"string"},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpulls_2F_7Bnumber_7D_2Frequested_reviewers_20POST.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-pulls"],"x-swgg-descriptionLineList":["[Review Requests](https://developer.github.com/v3/pulls/review_requests/#create-a-review-request) - Create a review request","","**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.symmetra-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Review Requests](https://developer.github.com/v3/pulls/review_requests/#create-a-review-request) - Create a review request","x-swgg-tags0":"github-pulls"}},"/repos/{owner}/{repo}/pulls/{number}/reviews":{"get":{"consumes":[],"description":"[Reviews](https://developer.github.com/v3/pulls/reviews/#list-reviews-on-a-pull-request) - List reviews on a pull request","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpulls_2F_7Bnumber_7D_2Freviews_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3.diff","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"number","description":"no description","in":"path","name":"number","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-pulls"],"x-swgg-descriptionLineList":["[Reviews](https://developer.github.com/v3/pulls/reviews/#list-reviews-on-a-pull-request) - List reviews on a pull request"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Reviews](https://developer.github.com/v3/pulls/reviews/#list-reviews-on-a-pull-request) - List reviews on a pull request","x-swgg-tags0":"github-pulls"},"post":{"consumes":[],"description":"[Reviews](https://developer.github.com/v3/pulls/reviews/#create-a-pull-request-review) - Create a pull request review","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpulls_2F_7Bnumber_7D_2Freviews_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3.diff","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"number","description":"no description","in":"path","name":"number","required":true,"type":"string"},{"description":"**Required** when using ```REQUEST_CHANGES``` or ```COMMENT``` for the ```event``` parameter. The body text of the pull request review.","in":"body","name":"body","required":true,"schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpulls_2F_7Bnumber_7D_2Freviews_20POST.body"},"x-swgg-descriptionLineList":["**Required** when using ```REQUEST_CHANGES``` or ```COMMENT``` for the ```event``` parameter. The body text of the pull request review."]}],"responses":{"default":{"description":"default response"}},"tags":["github-pulls"],"x-swgg-descriptionLineList":["[Reviews](https://developer.github.com/v3/pulls/reviews/#create-a-pull-request-review) - Create a pull request review"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Reviews](https://developer.github.com/v3/pulls/reviews/#create-a-pull-request-review) - Create a pull request review","x-swgg-tags0":"github-pulls"}},"/repos/{owner}/{repo}/pulls/{number}/reviews/{id}":{"delete":{"consumes":[],"description":"[Reviews](https://developer.github.com/v3/pulls/reviews/#delete-a-pending-review) - Delete a pending review","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpulls_2F_7Bnumber_7D_2Freviews_2F_7Bid_7D_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3.diff","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"number","description":"no description","in":"path","name":"number","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-pulls"],"x-swgg-descriptionLineList":["[Reviews](https://developer.github.com/v3/pulls/reviews/#delete-a-pending-review) - Delete a pending review"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Reviews](https://developer.github.com/v3/pulls/reviews/#delete-a-pending-review) - Delete a pending review","x-swgg-tags0":"github-pulls"},"get":{"consumes":[],"description":"[Reviews](https://developer.github.com/v3/pulls/reviews/#get-a-single-review) - Get a single review","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpulls_2F_7Bnumber_7D_2Freviews_2F_7Bid_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3.diff","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"number","description":"no description","in":"path","name":"number","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-pulls"],"x-swgg-descriptionLineList":["[Reviews](https://developer.github.com/v3/pulls/reviews/#get-a-single-review) - Get a single review"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Reviews](https://developer.github.com/v3/pulls/reviews/#get-a-single-review) - Get a single review","x-swgg-tags0":"github-pulls"}},"/repos/{owner}/{repo}/pulls/{number}/reviews/{id}/comments":{"get":{"consumes":[],"description":"[Reviews](https://developer.github.com/v3/pulls/reviews/#get-comments-for-a-single-review) - Get comments for a single review","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpulls_2F_7Bnumber_7D_2Freviews_2F_7Bid_7D_2Fcomments_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3.diff","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"number","description":"no description","in":"path","name":"number","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-pulls"],"x-swgg-descriptionLineList":["[Reviews](https://developer.github.com/v3/pulls/reviews/#get-comments-for-a-single-review) - Get comments for a single review"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Reviews](https://developer.github.com/v3/pulls/reviews/#get-comments-for-a-single-review) - Get comments for a single review","x-swgg-tags0":"github-pulls"}},"/repos/{owner}/{repo}/pulls/{number}/reviews/{id}/dismissals":{"put":{"consumes":[],"description":"[Reviews](https://developer.github.com/v3/pulls/reviews/#dismiss-a-pull-request-review) - Dismiss a pull request review","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpulls_2F_7Bnumber_7D_2Freviews_2F_7Bid_7D_2Fdismissals_20PUT","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3.diff","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"number","description":"no description","in":"path","name":"number","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"},{"description":"**Required.** The message for the pull request review dismissal","in":"query","name":"message","type":"string","x-swgg-descriptionLineList":["**Required.** The message for the pull request review dismissal"]}],"responses":{"default":{"description":"default response"}},"tags":["github-pulls"],"x-swgg-descriptionLineList":["[Reviews](https://developer.github.com/v3/pulls/reviews/#dismiss-a-pull-request-review) - Dismiss a pull request review"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Reviews](https://developer.github.com/v3/pulls/reviews/#dismiss-a-pull-request-review) - Dismiss a pull request review","x-swgg-tags0":"github-pulls"}},"/repos/{owner}/{repo}/pulls/{number}/reviews/{id}/events":{"post":{"consumes":[],"description":"[Reviews](https://developer.github.com/v3/pulls/reviews/#submit-a-pull-request-review) - Submit a pull request review","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fpulls_2F_7Bnumber_7D_2Freviews_2F_7Bid_7D_2Fevents_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3.diff","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"number","description":"no description","in":"path","name":"number","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"},{"description":"The body text of the pull request review","in":"query","name":"body","type":"string","x-swgg-descriptionLineList":["The body text of the pull request review"]},{"description":"**Required.** The review action you want to perform. The review actions include: ```APPROVE```, ```REQUEST_CHANGES```, or ```COMMENT```. When you leave this blank, the API returns HTTP 422 (Unrecognizable entity)  and sets the review action state to ```PENDING```, which means you will need to re-submit the pull request review using a review action.","in":"query","name":"event","type":"string","x-swgg-descriptionLineList":["**Required.** The review action you want to perform. The review actions include: ```APPROVE```, ```REQUEST_CHANGES```, or ```COMMENT```. When you leave this blank, the API returns HTTP 422 (Unrecognizable entity)  and sets the review action state to ```PENDING```, which means you will need to re-submit the pull request review using a review action."]}],"responses":{"default":{"description":"default response"}},"tags":["github-pulls"],"x-swgg-descriptionLineList":["[Reviews](https://developer.github.com/v3/pulls/reviews/#submit-a-pull-request-review) - Submit a pull request review"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Reviews](https://developer.github.com/v3/pulls/reviews/#submit-a-pull-request-review) - Submit a pull request review","x-swgg-tags0":"github-pulls"}},"/repos/{owner}/{repo}/readme":{"get":{"consumes":[],"description":"[Contents](https://developer.github.com/v3/repos/contents/#get-the-readme) - Get the README\n\nThis method returns the preferred README for a repository.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Freadme_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3.raw","application/vnd.github.v3.html","application/vnd.github.v3.object","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"master","description":"The name of the commit/branch/tag. Default: the repository’s default branch (usually ```master```)","in":"query","name":"ref","type":"string","x-swgg-descriptionLineList":["The name of the commit/branch/tag. Default: the repository’s default branch (usually ```master```)"]}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Contents](https://developer.github.com/v3/repos/contents/#get-the-readme) - Get the README","","This method returns the preferred README for a repository."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Contents](https://developer.github.com/v3/repos/contents/#get-the-readme) - Get the README","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/releases":{"get":{"consumes":[],"description":"[Releases](https://developer.github.com/v3/repos/releases/#list-releases-for-a-repository) - List releases for a repository\n\nThis returns a list of releases, which does not include regular Git tags that have not been associated with a release. To get a list of Git tags, use the [Repository Tags API](https://developer.github.com/v3/repos/#list-tags).\n\nInformation about published releases are available to everyone. Only users with push access will receive listings for draft releases.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Freleases_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Releases](https://developer.github.com/v3/repos/releases/#list-releases-for-a-repository) - List releases for a repository","","This returns a list of releases, which does not include regular Git tags that have not been associated with a release. To get a list of Git tags, use the [Repository Tags API](https://developer.github.com/v3/repos/#list-tags).","","Information about published releases are available to everyone. Only users with push access will receive listings for draft releases."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Releases](https://developer.github.com/v3/repos/releases/#list-releases-for-a-repository) - List releases for a repository","x-swgg-tags0":"github-repos"},"post":{"consumes":[],"description":"[Releases](https://developer.github.com/v3/repos/releases/#create-a-release) - Create a release\n\nUsers with push access to the repository can create a release.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Freleases_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"description":"Text describing the contents of the tag.","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Freleases_20POST.body"},"x-swgg-descriptionLineList":["Text describing the contents of the tag."]}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Releases](https://developer.github.com/v3/repos/releases/#create-a-release) - Create a release","","Users with push access to the repository can create a release."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Releases](https://developer.github.com/v3/repos/releases/#create-a-release) - Create a release","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/releases/assets/{id}":{"delete":{"consumes":[],"description":"[Releases](https://developer.github.com/v3/repos/releases/#delete-a-release-asset) - Delete a release asset","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Freleases_2Fassets_2F_7Bid_7D_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Releases](https://developer.github.com/v3/repos/releases/#delete-a-release-asset) - Delete a release asset"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Releases](https://developer.github.com/v3/repos/releases/#delete-a-release-asset) - Delete a release asset","x-swgg-tags0":"github-repos"},"get":{"consumes":[],"description":"[Releases](https://developer.github.com/v3/repos/releases/#get-a-single-release-asset) - Get a single release asset","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Freleases_2Fassets_2F_7Bid_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Releases](https://developer.github.com/v3/repos/releases/#get-a-single-release-asset) - Get a single release asset"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Releases](https://developer.github.com/v3/repos/releases/#get-a-single-release-asset) - Get a single release asset","x-swgg-tags0":"github-repos"},"patch":{"consumes":[],"description":"[Releases](https://developer.github.com/v3/repos/releases/#edit-a-release-asset) - Edit a release asset\n\nUsers with push access to the repository can edit a release asset.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Freleases_2Fassets_2F_7Bid_7D_20PATCH","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Freleases_2Fassets_2F_7Bid_7D_20PATCH.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Releases](https://developer.github.com/v3/repos/releases/#edit-a-release-asset) - Edit a release asset","","Users with push access to the repository can edit a release asset."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Releases](https://developer.github.com/v3/repos/releases/#edit-a-release-asset) - Edit a release asset","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/releases/latest":{"get":{"consumes":[],"description":"[Releases](https://developer.github.com/v3/repos/releases/#get-the-latest-release) - Get the latest release\n\nView the latest published full release for the repository. Draft releases and prereleases are not returned by this endpoint.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Freleases_2Flatest_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Releases](https://developer.github.com/v3/repos/releases/#get-the-latest-release) - Get the latest release","","View the latest published full release for the repository. Draft releases and prereleases are not returned by this endpoint."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Releases](https://developer.github.com/v3/repos/releases/#get-the-latest-release) - Get the latest release","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/releases/tags/{tag}":{"get":{"consumes":[],"description":"[Releases](https://developer.github.com/v3/repos/releases/#get-a-release-by-tag-name) - Get a release by tag name\n\nGet a published release with the specified tag.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Freleases_2Ftags_2F_7Btag_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"tag","description":"no description","in":"path","name":"tag","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Releases](https://developer.github.com/v3/repos/releases/#get-a-release-by-tag-name) - Get a release by tag name","","Get a published release with the specified tag."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Releases](https://developer.github.com/v3/repos/releases/#get-a-release-by-tag-name) - Get a release by tag name","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/releases/{id}":{"delete":{"consumes":[],"description":"[Releases](https://developer.github.com/v3/repos/releases/#delete-a-release) - Delete a release\n\nUsers with push access to the repository can delete a release.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Freleases_2F_7Bid_7D_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Releases](https://developer.github.com/v3/repos/releases/#delete-a-release) - Delete a release","","Users with push access to the repository can delete a release."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Releases](https://developer.github.com/v3/repos/releases/#delete-a-release) - Delete a release","x-swgg-tags0":"github-repos"},"get":{"consumes":[],"description":"[Releases](https://developer.github.com/v3/repos/releases/#get-a-single-release) - Get a single release","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Freleases_2F_7Bid_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Releases](https://developer.github.com/v3/repos/releases/#get-a-single-release) - Get a single release"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Releases](https://developer.github.com/v3/repos/releases/#get-a-single-release) - Get a single release","x-swgg-tags0":"github-repos"},"patch":{"consumes":[],"description":"[Releases](https://developer.github.com/v3/repos/releases/#edit-a-release) - Edit a release\n\nUsers with push access to the repository can edit a release.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Freleases_2F_7Bid_7D_20PATCH","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"},{"description":"Text describing the contents of the tag.","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Freleases_2F_7Bid_7D_20PATCH.body"},"x-swgg-descriptionLineList":["Text describing the contents of the tag."]}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Releases](https://developer.github.com/v3/repos/releases/#edit-a-release) - Edit a release","","Users with push access to the repository can edit a release."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Releases](https://developer.github.com/v3/repos/releases/#edit-a-release) - Edit a release","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/releases/{id}/assets":{"get":{"consumes":[],"description":"[Releases](https://developer.github.com/v3/repos/releases/#list-assets-for-a-release) - List assets for a release","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Freleases_2F_7Bid_7D_2Fassets_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Releases](https://developer.github.com/v3/repos/releases/#list-assets-for-a-release) - List assets for a release"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Releases](https://developer.github.com/v3/repos/releases/#list-assets-for-a-release) - List assets for a release","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/stargazers":{"get":{"consumes":[],"description":"[Starring](https://developer.github.com/v3/activity/starring/#list-stargazers) - List Stargazers","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fstargazers_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3.star+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-activity"],"x-swgg-descriptionLineList":["[Starring](https://developer.github.com/v3/activity/starring/#list-stargazers) - List Stargazers"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Starring](https://developer.github.com/v3/activity/starring/#list-stargazers) - List Stargazers","x-swgg-tags0":"github-activity"}},"/repos/{owner}/{repo}/stats/code_frequency":{"get":{"consumes":[],"description":"[Statistics](https://developer.github.com/v3/repos/statistics/#get-the-number-of-additions-and-deletions-per-week) - Get the number of additions and deletions per week","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fstats_2Fcode_frequency_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Statistics](https://developer.github.com/v3/repos/statistics/#get-the-number-of-additions-and-deletions-per-week) - Get the number of additions and deletions per week"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Statistics](https://developer.github.com/v3/repos/statistics/#get-the-number-of-additions-and-deletions-per-week) - Get the number of additions and deletions per week","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/stats/commit_activity":{"get":{"consumes":[],"description":"[Statistics](https://developer.github.com/v3/repos/statistics/#get-the-last-year-of-commit-activity-data) - Get the last year of commit activity data\n\nReturns the last year of commit activity grouped by week.  The ```days``` array is a group of commits per day, starting on ```Sunday```.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fstats_2Fcommit_activity_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Statistics](https://developer.github.com/v3/repos/statistics/#get-the-last-year-of-commit-activity-data) - Get the last year of commit activity data","","Returns the last year of commit activity grouped by week.  The ```days``` array is a group of commits per day, starting on ```Sunday```."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Statistics](https://developer.github.com/v3/repos/statistics/#get-the-last-year-of-commit-activity-data) - Get the last year of commit activity data","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/stats/contributors":{"get":{"consumes":[],"description":"[Statistics](https://developer.github.com/v3/repos/statistics/#get-contributors-list-with-additions-deletions-and-commit-counts) - Get contributors list with additions, deletions, and commit counts","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fstats_2Fcontributors_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Statistics](https://developer.github.com/v3/repos/statistics/#get-contributors-list-with-additions-deletions-and-commit-counts) - Get contributors list with additions, deletions, and commit counts"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Statistics](https://developer.github.com/v3/repos/statistics/#get-contributors-list-with-additions-deletions-and-commit-counts) - Get contributors list with additions, deletions, and commit counts","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/stats/participation":{"get":{"consumes":[],"description":"[Statistics](https://developer.github.com/v3/repos/statistics/#get-the-weekly-commit-count-for-the-repository-owner-and-everyone-else) - Get the weekly commit count for the repository owner and everyone else","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fstats_2Fparticipation_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Statistics](https://developer.github.com/v3/repos/statistics/#get-the-weekly-commit-count-for-the-repository-owner-and-everyone-else) - Get the weekly commit count for the repository owner and everyone else"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Statistics](https://developer.github.com/v3/repos/statistics/#get-the-weekly-commit-count-for-the-repository-owner-and-everyone-else) - Get the weekly commit count for the repository owner and everyone else","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/stats/punch_card":{"get":{"consumes":[],"description":"[Statistics](https://developer.github.com/v3/repos/statistics/#get-the-number-of-commits-per-hour-in-each-day) - Get the number of commits per hour in each day","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fstats_2Fpunch_card_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Statistics](https://developer.github.com/v3/repos/statistics/#get-the-number-of-commits-per-hour-in-each-day) - Get the number of commits per hour in each day"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Statistics](https://developer.github.com/v3/repos/statistics/#get-the-number-of-commits-per-hour-in-each-day) - Get the number of commits per hour in each day","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/statuses/{sha}":{"post":{"consumes":[],"description":"[Statuses](https://developer.github.com/v3/repos/statuses/#create-a-status) - Create a status\n\nUsers with push access can create commit statuses for a given ref:","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fstatuses_2F_7Bsha_7D_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"sha","description":"no description","in":"path","name":"sha","required":true,"type":"string"},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fstatuses_2F_7Bsha_7D_20POST.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Statuses](https://developer.github.com/v3/repos/statuses/#create-a-status) - Create a status","","Users with push access can create commit statuses for a given ref:"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Statuses](https://developer.github.com/v3/repos/statuses/#create-a-status) - Create a status","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/subscribers":{"get":{"consumes":[],"description":"[Watching](https://developer.github.com/v3/activity/watching/#list-watchers) - List watchers","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fsubscribers_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-activity"],"x-swgg-descriptionLineList":["[Watching](https://developer.github.com/v3/activity/watching/#list-watchers) - List watchers"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Watching](https://developer.github.com/v3/activity/watching/#list-watchers) - List watchers","x-swgg-tags0":"github-activity"}},"/repos/{owner}/{repo}/subscription":{"delete":{"consumes":[],"description":"[Watching](https://developer.github.com/v3/activity/watching/#delete-a-repository-subscription) - Delete a Repository Subscription\n\nThis endpoint should only be used to stop watching a repository. To control whether or not you wish to receive notifications from a repository, [set the repository's subscription manually](https://developer.github.com/v3/activity/watching/#set-a-repository-subscription).","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fsubscription_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-activity"],"x-swgg-descriptionLineList":["[Watching](https://developer.github.com/v3/activity/watching/#delete-a-repository-subscription) - Delete a Repository Subscription","","This endpoint should only be used to stop watching a repository. To control whether or not you wish to receive notifications from a repository, [set the repository's subscription manually](https://developer.github.com/v3/activity/watching/#set-a-repository-subscription)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Watching](https://developer.github.com/v3/activity/watching/#delete-a-repository-subscription) - Delete a Repository Subscription","x-swgg-tags0":"github-activity"},"get":{"consumes":[],"description":"[Watching](https://developer.github.com/v3/activity/watching/#get-a-repository-subscription) - Get a Repository Subscription","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fsubscription_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-activity"],"x-swgg-descriptionLineList":["[Watching](https://developer.github.com/v3/activity/watching/#get-a-repository-subscription) - Get a Repository Subscription"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Watching](https://developer.github.com/v3/activity/watching/#get-a-repository-subscription) - Get a Repository Subscription","x-swgg-tags0":"github-activity"},"put":{"consumes":[],"description":"[Watching](https://developer.github.com/v3/activity/watching/#set-a-repository-subscription) - Set a Repository Subscription","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fsubscription_20PUT","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"description":"Determines if notifications should be received from this repository.","in":"query","name":"subscribed","type":"boolean","x-swgg-descriptionLineList":["Determines if notifications should be received from this repository."]},{"description":"Determines if all notifications should be blocked from this repository.","in":"query","name":"ignored","type":"boolean","x-swgg-descriptionLineList":["Determines if all notifications should be blocked from this repository."]}],"responses":{"default":{"description":"default response"}},"tags":["github-activity"],"x-swgg-descriptionLineList":["[Watching](https://developer.github.com/v3/activity/watching/#set-a-repository-subscription) - Set a Repository Subscription"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Watching](https://developer.github.com/v3/activity/watching/#set-a-repository-subscription) - Set a Repository Subscription","x-swgg-tags0":"github-activity"}},"/repos/{owner}/{repo}/tags":{"get":{"consumes":[],"description":"[Repositories](https://developer.github.com/v3/repos/#list-tags) - List tags","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Ftags_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.nightshade-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.mercy-preview+json","application/vnd.github.nightshade-preview+json","application/vnd.github.jean-grey-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Repositories](https://developer.github.com/v3/repos/#list-tags) - List tags"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Repositories](https://developer.github.com/v3/repos/#list-tags) - List tags","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/teams":{"get":{"consumes":[],"description":"[Repositories](https://developer.github.com/v3/repos/#list-teams) - List teams\n\n**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.hellcat-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fteams_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.nightshade-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.mercy-preview+json","application/vnd.github.nightshade-preview+json","application/vnd.github.jean-grey-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Repositories](https://developer.github.com/v3/repos/#list-teams) - List teams","","**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.hellcat-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Repositories](https://developer.github.com/v3/repos/#list-teams) - List teams","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/topics":{"get":{"consumes":[],"description":"[Repositories](https://developer.github.com/v3/repos/#list-all-topics-for-a-repository) - List all topics for a repository\n\n**Note:** The ```topics``` property for repositories on GitHub is currently available for developers to preview. To view the ```topics``` property in calls that return repository results, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.mercy-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Ftopics_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.nightshade-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.mercy-preview+json","application/vnd.github.nightshade-preview+json","application/vnd.github.jean-grey-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Repositories](https://developer.github.com/v3/repos/#list-all-topics-for-a-repository) - List all topics for a repository","","**Note:** The ```topics``` property for repositories on GitHub is currently available for developers to preview. To view the ```topics``` property in calls that return repository results, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.mercy-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Repositories](https://developer.github.com/v3/repos/#list-all-topics-for-a-repository) - List all topics for a repository","x-swgg-tags0":"github-repos"},"put":{"consumes":[],"description":"[Repositories](https://developer.github.com/v3/repos/#replace-all-topics-for-a-repository) - Replace all topics for a repository\n\n**Note:** The ```topics``` property for repositories on GitHub is currently available for developers to preview. To view the ```topics``` property in calls that return repository results, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.mercy-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Ftopics_20PUT","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.nightshade-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.mercy-preview+json","application/vnd.github.nightshade-preview+json","application/vnd.github.jean-grey-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Ftopics_20PUT.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Repositories](https://developer.github.com/v3/repos/#replace-all-topics-for-a-repository) - Replace all topics for a repository","","**Note:** The ```topics``` property for repositories on GitHub is currently available for developers to preview. To view the ```topics``` property in calls that return repository results, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.mercy-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Repositories](https://developer.github.com/v3/repos/#replace-all-topics-for-a-repository) - Replace all topics for a repository","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/traffic/clones":{"get":{"consumes":[],"description":"[Traffic](https://developer.github.com/v3/repos/traffic/#clones) - Clones\n\nGet the total number of clones and breakdown per day or week for the last 14 days. Timestamps are aligned to UTC midnight of the beginning of the day or week. Week begins on Monday.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Ftraffic_2Fclones_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Traffic](https://developer.github.com/v3/repos/traffic/#clones) - Clones","","Get the total number of clones and breakdown per day or week for the last 14 days. Timestamps are aligned to UTC midnight of the beginning of the day or week. Week begins on Monday."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Traffic](https://developer.github.com/v3/repos/traffic/#clones) - Clones","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/traffic/popular/paths":{"get":{"consumes":[],"description":"[Traffic](https://developer.github.com/v3/repos/traffic/#list-paths) - List paths\n\nGet the top 10 popular contents over the last 14 days.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Ftraffic_2Fpopular_2Fpaths_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Traffic](https://developer.github.com/v3/repos/traffic/#list-paths) - List paths","","Get the top 10 popular contents over the last 14 days."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Traffic](https://developer.github.com/v3/repos/traffic/#list-paths) - List paths","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/traffic/popular/referrers":{"get":{"consumes":[],"description":"[Traffic](https://developer.github.com/v3/repos/traffic/#list-referrers) - List referrers\n\nGet the top 10 referrers over the last 14 days.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Ftraffic_2Fpopular_2Freferrers_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Traffic](https://developer.github.com/v3/repos/traffic/#list-referrers) - List referrers","","Get the top 10 referrers over the last 14 days."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Traffic](https://developer.github.com/v3/repos/traffic/#list-referrers) - List referrers","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/traffic/views":{"get":{"consumes":[],"description":"[Traffic](https://developer.github.com/v3/repos/traffic/#views) - Views\n\nGet the total number of views and breakdown per day or week for the last 14 days. Timestamps are aligned to UTC midnight of the beginning of the day or week. Week begins on Monday.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Ftraffic_2Fviews_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Traffic](https://developer.github.com/v3/repos/traffic/#views) - Views","","Get the total number of views and breakdown per day or week for the last 14 days. Timestamps are aligned to UTC midnight of the beginning of the day or week. Week begins on Monday."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Traffic](https://developer.github.com/v3/repos/traffic/#views) - Views","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/transfer":{"post":{"consumes":[],"description":"[Repositories](https://developer.github.com/v3/repos/#transfer-a-repository) - Transfer a repository\n\nA transfer request will need to be accepted by the new owner when transferring a personal repository to another user. The response will contain the original ```owner```, and the transfer will continue asynchronously. For more details on the requirements to transfer personal and organization-owned repositories, see [about repository transfers](https://help.github.com/articles/about-repository-transfers/).\n\n**Note:** The [Repository Transfer API](https://developer.github.com/changes/2017-11-09-repository-transfer-api-preview) is currently available for developers to preview. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.nightshade-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Ftransfer_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.nightshade-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.mercy-preview+json","application/vnd.github.nightshade-preview+json","application/vnd.github.jean-grey-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Ftransfer_20POST.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Repositories](https://developer.github.com/v3/repos/#transfer-a-repository) - Transfer a repository","","A transfer request will need to be accepted by the new owner when transferring a personal repository to another user. The response will contain the original ```owner```, and the transfer will continue asynchronously. For more details on the requirements to transfer personal and organization-owned repositories, see [about repository transfers](https://help.github.com/articles/about-repository-transfers/).","","**Note:** The [Repository Transfer API](https://developer.github.com/changes/2017-11-09-repository-transfer-api-preview) is currently available for developers to preview. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.nightshade-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Repositories](https://developer.github.com/v3/repos/#transfer-a-repository) - Transfer a repository","x-swgg-tags0":"github-repos"}},"/repos/{owner}/{repo}/{archive_format}/{ref}":{"get":{"consumes":[],"description":"[Contents](https://developer.github.com/v3/repos/contents/#get-archive-link) - Get archive link\n\nThis method will return a ```302``` to a URL to download a tarball or zipball archive for a repository. Please make sure your HTTP framework is configured to follow redirects or you will need to use the ```Location``` header to make a second ```GET``` request.\n\nNote: For private repositories, these links are temporary and expire after five minutes.","operationId":"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2F_7Barchive_format_7D_2F_7Bref_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3.raw","application/vnd.github.v3.html","application/vnd.github.v3.object","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"default":"archive_format","description":"Can be either ```tarball``` or ```zipball```. Default: ```tarball```","in":"path","name":"archive_format","required":true,"type":"string","x-swgg-descriptionLineList":["Can be either ```tarball``` or ```zipball```. Default: ```tarball```"]},{"default":"ref","description":"A valid Git reference. Default: the repository’s default branch (usually ```master```)","in":"path","name":"ref","required":true,"type":"string","x-swgg-descriptionLineList":["A valid Git reference. Default: the repository’s default branch (usually ```master```)"]}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Contents](https://developer.github.com/v3/repos/contents/#get-archive-link) - Get archive link","","This method will return a ```302``` to a URL to download a tarball or zipball archive for a repository. Please make sure your HTTP framework is configured to follow redirects or you will need to use the ```Location``` header to make a second ```GET``` request.","","Note: For private repositories, these links are temporary and expire after five minutes."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Contents](https://developer.github.com/v3/repos/contents/#get-archive-link) - Get archive link","x-swgg-tags0":"github-repos"}},"/repositories":{"get":{"consumes":[],"description":"[Repositories](https://developer.github.com/v3/repos/#list-all-public-repositories) - List all public repositories\n\nThis provides a dump of every public repository, in the order that they were created.\n\nNote: Pagination is powered exclusively by the ```since``` parameter. Use the [Link header](https://developer.github.com/v3/#link-header) to get the URL for the next page of repositories.","operationId":"_2Frepositories_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.nightshade-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.mercy-preview+json","application/vnd.github.nightshade-preview+json","application/vnd.github.jean-grey-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"description":"The integer ID of the last Repository that you've seen.","in":"query","name":"since","type":"string","x-swgg-descriptionLineList":["The integer ID of the last Repository that you've seen."]}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Repositories](https://developer.github.com/v3/repos/#list-all-public-repositories) - List all public repositories","","This provides a dump of every public repository, in the order that they were created.","","Note: Pagination is powered exclusively by the ```since``` parameter. Use the [Link header](https://developer.github.com/v3/#link-header) to get the URL for the next page of repositories."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Repositories](https://developer.github.com/v3/repos/#list-all-public-repositories) - List all public repositories","x-swgg-tags0":"github-repos"}},"/scim/v2/organizations/{organization}/Users":{"get":{"consumes":[],"description":"[SCIM](https://developer.github.com/v3/scim/#get-a-list-of-provisioned-identities) - Get a list of provisioned identities","operationId":"_2Fscim_2Fv2_2Forganizations_2F_7Borganization_7D_2FUsers_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.cloud-9-preview+json+scim"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.cloud-9-preview+json+scim","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"organization","description":"no description","in":"path","name":"organization","required":true,"type":"string"},{"description":"Used for pagination: the index of the first result to return","in":"query","name":"startIndex","type":"integer","x-swgg-descriptionLineList":["Used for pagination: the index of the first result to return"]},{"description":"Used for pagination: the number of results to return","in":"query","name":"count","type":"integer","x-swgg-descriptionLineList":["Used for pagination: the number of results to return"]},{"description":"Only ```eq``` type filters are supported","in":"query","name":"filter","type":"string","x-swgg-descriptionLineList":["Only ```eq``` type filters are supported"]}],"responses":{"default":{"description":"default response"}},"tags":["github-scim"],"x-swgg-descriptionLineList":["[SCIM](https://developer.github.com/v3/scim/#get-a-list-of-provisioned-identities) - Get a list of provisioned identities"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[SCIM](https://developer.github.com/v3/scim/#get-a-list-of-provisioned-identities) - Get a list of provisioned identities","x-swgg-tags0":"github-scim"},"post":{"consumes":[],"description":"[SCIM](https://developer.github.com/v3/scim/#provision-and-invite-users) - Provision and invite users\n\nProvision organization membership for and send activation emails to a list of email addresses.","operationId":"_2Fscim_2Fv2_2Forganizations_2F_7Borganization_7D_2FUsers_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.cloud-9-preview+json+scim"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.cloud-9-preview+json+scim","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"organization","description":"no description","in":"path","name":"organization","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-scim"],"x-swgg-descriptionLineList":["[SCIM](https://developer.github.com/v3/scim/#provision-and-invite-users) - Provision and invite users","","Provision organization membership for and send activation emails to a list of email addresses."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[SCIM](https://developer.github.com/v3/scim/#provision-and-invite-users) - Provision and invite users","x-swgg-tags0":"github-scim"}},"/scim/v2/organizations/{organization}/Users/{id}":{"delete":{"consumes":[],"description":"[SCIM](https://developer.github.com/v3/scim/#remove-a-user-from-the-organization) - Remove a user from the organization","operationId":"_2Fscim_2Fv2_2Forganizations_2F_7Borganization_7D_2FUsers_2F_7Bid_7D_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.cloud-9-preview+json+scim"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.cloud-9-preview+json+scim","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"organization","description":"no description","in":"path","name":"organization","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-scim"],"x-swgg-descriptionLineList":["[SCIM](https://developer.github.com/v3/scim/#remove-a-user-from-the-organization) - Remove a user from the organization"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[SCIM](https://developer.github.com/v3/scim/#remove-a-user-from-the-organization) - Remove a user from the organization","x-swgg-tags0":"github-scim"},"get":{"consumes":[],"description":"[SCIM](https://developer.github.com/v3/scim/#supported-scim-user-attributes) - Supported SCIM User attributes\n\nName Type Description     ```userName``` ```string``` The username for the user   ```name.givenName``` ```string``` User first name   ```name.lastName``` ```string``` User last name   ```emails``` ```array``` List of user emails   ```externalId``` ```string``` External identifier (generated by the SAML SSO provider)   ```id``` ```string``` Identifier generated by the GitHub SCIM endpoint   ```active``` ```boolean``` Used to indicate whether the identity is active (true) or should be deprovisioned (false)\n\nNote: Endpoints for the SCIM API are case sensitive: the first letter in the ```Users``` endpoint must be capitalized. For example:","operationId":"_2Fscim_2Fv2_2Forganizations_2F_7Borganization_7D_2FUsers_2F_7Bid_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.cloud-9-preview+json+scim"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.cloud-9-preview+json+scim","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"organization","description":"no description","in":"path","name":"organization","required":true,"type":"string"},{"default":"id","description":"Identifier generated by the GitHub SCIM endpoint","in":"path","name":"id","required":true,"type":"string","x-swgg-descriptionLineList":["Identifier generated by the GitHub SCIM endpoint"]},{"description":"The username for the user","in":"query","name":"userName","type":"string","x-swgg-descriptionLineList":["The username for the user"]},{"description":"User first name","in":"query","name":"name.givenName","type":"string","x-swgg-descriptionLineList":["User first name"]},{"description":"User last name","in":"query","name":"name.lastName","type":"string","x-swgg-descriptionLineList":["User last name"]},{"description":"List of user emails","in":"query","items":{"type":"string"},"name":"emails","type":"array","x-swgg-descriptionLineList":["List of user emails"]},{"description":"External identifier (generated by the SAML SSO provider)","in":"query","name":"externalId","type":"string","x-swgg-descriptionLineList":["External identifier (generated by the SAML SSO provider)"]},{"description":"Used to indicate whether the identity is active (true) or should be deprovisioned (false)","in":"query","name":"active","type":"boolean","x-swgg-descriptionLineList":["Used to indicate whether the identity is active (true) or should be deprovisioned (false)"]}],"responses":{"default":{"description":"default response"}},"tags":["github-scim"],"x-swgg-descriptionLineList":["[SCIM](https://developer.github.com/v3/scim/#supported-scim-user-attributes) - Supported SCIM User attributes","","Name Type Description     ```userName``` ```string``` The username for the user   ```name.givenName``` ```string``` User first name   ```name.lastName``` ```string``` User last name   ```emails``` ```array``` List of user emails   ```externalId``` ```string``` External identifier (generated by the SAML SSO provider)   ```id``` ```string``` Identifier generated by the GitHub SCIM endpoint   ```active``` ```boolean``` Used to indicate whether the identity is active (true) or should be deprovisioned (false)","","Note: Endpoints for the SCIM API are case sensitive: the first letter in the ```Users``` endpoint must be capitalized. For example:"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[SCIM](https://developer.github.com/v3/scim/#supported-scim-user-attributes) - Supported SCIM User attributes","x-swgg-tags0":"github-scim"},"patch":{"consumes":[],"description":"[SCIM](https://developer.github.com/v3/scim/#update-a-user-attribute) - Update a user attribute","operationId":"_2Fscim_2Fv2_2Forganizations_2F_7Borganization_7D_2FUsers_2F_7Bid_7D_20PATCH","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.cloud-9-preview+json+scim"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.cloud-9-preview+json+scim","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"organization","description":"no description","in":"path","name":"organization","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-scim"],"x-swgg-descriptionLineList":["[SCIM](https://developer.github.com/v3/scim/#update-a-user-attribute) - Update a user attribute"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[SCIM](https://developer.github.com/v3/scim/#update-a-user-attribute) - Update a user attribute","x-swgg-tags0":"github-scim"},"put":{"consumes":[],"description":"[SCIM](https://developer.github.com/v3/scim/#update-a-provisioned-organization-membership) - Update a provisioned organization membership","operationId":"_2Fscim_2Fv2_2Forganizations_2F_7Borganization_7D_2FUsers_2F_7Bid_7D_20PUT","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.cloud-9-preview+json+scim"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.cloud-9-preview+json+scim","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"organization","description":"no description","in":"path","name":"organization","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-scim"],"x-swgg-descriptionLineList":["[SCIM](https://developer.github.com/v3/scim/#update-a-provisioned-organization-membership) - Update a provisioned organization membership"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[SCIM](https://developer.github.com/v3/scim/#update-a-provisioned-organization-membership) - Update a provisioned organization membership","x-swgg-tags0":"github-scim"}},"/scim/v2/organizations/{organization}/Users/{id}#1":{"get":{"consumes":[],"description":"[SCIM](https://developer.github.com/v3/scim/#get-provisioning-details-for-a-single-user) - Get provisioning details for a single user","operationId":"_2Fscim_2Fv2_2Forganizations_2F_7Borganization_7D_2FUsers_2F_7Bid_7D_231_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.cloud-9-preview+json+scim"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.cloud-9-preview+json+scim","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"organization","description":"no description","in":"path","name":"organization","required":true,"type":"string"},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-scim"],"x-swgg-descriptionLineList":["[SCIM](https://developer.github.com/v3/scim/#get-provisioning-details-for-a-single-user) - Get provisioning details for a single user"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[SCIM](https://developer.github.com/v3/scim/#get-provisioning-details-for-a-single-user) - Get provisioning details for a single user","x-swgg-tags0":"github-scim"}},"/search/code":{"get":{"consumes":[],"description":"[Search](https://developer.github.com/v3/search/#search-code) - Search code\n\nFind file contents via various criteria. This method returns up to 100 results [per page](https://developer.github.com/v3/#pagination).","operationId":"_2Fsearch_2Fcode_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.symmetra-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.mercy-preview+json","application/vnd.github.v3.text-match+json","application/vnd.github.cloak-preview","application/vnd.github.symmetra-preview+json","application/vnd.github.mercy-preview","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"description":"The search terms.","in":"query","name":"q","type":"string","x-swgg-descriptionLineList":["The search terms."]},{"description":"The sort field. Can only be ```indexed```, which indicates how recently a file has been indexed by the GitHub search infrastructure. Default: results are sorted by best match.","in":"query","name":"sort","type":"string","x-swgg-descriptionLineList":["The sort field. Can only be ```indexed```, which indicates how recently a file has been indexed by the GitHub search infrastructure. Default: results are sorted by best match."]},{"default":"desc","description":"The sort order if ```sort``` parameter is provided. One of ```asc``` or ```desc```. Default: ```desc```","in":"query","name":"order","type":"string","x-swgg-descriptionLineList":["The sort order if ```sort``` parameter is provided. One of ```asc``` or ```desc```. Default: ```desc```"]}],"responses":{"default":{"description":"default response"}},"tags":["github-search"],"x-swgg-descriptionLineList":["[Search](https://developer.github.com/v3/search/#search-code) - Search code","","Find file contents via various criteria. This method returns up to 100 results [per page](https://developer.github.com/v3/#pagination)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Search](https://developer.github.com/v3/search/#search-code) - Search code","x-swgg-tags0":"github-search"}},"/search/commits":{"get":{"consumes":[],"description":"[Search](https://developer.github.com/v3/search/#search-commits) - Search commits\n\nThe Commit Search API is currently available for developers to preview.   During the preview period, the APIs may change without advance notice.   Please see the [blog post](https://developer.github.com/changes/2017-01-05-commit-search-api/) for full details.\n\nTo access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.cloak-preview\n```\n\nFind commits via various criteria. This method returns up to 100 results [per page](https://developer.github.com/v3/#pagination).","operationId":"_2Fsearch_2Fcommits_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.symmetra-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.mercy-preview+json","application/vnd.github.v3.text-match+json","application/vnd.github.cloak-preview","application/vnd.github.symmetra-preview+json","application/vnd.github.mercy-preview","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"description":"The search terms.","in":"query","name":"q","type":"string","x-swgg-descriptionLineList":["The search terms."]},{"description":"The sort field. Can be ```author-date``` or ```committer-date```. Default: results are sorted by best match.","in":"query","name":"sort","type":"string","x-swgg-descriptionLineList":["The sort field. Can be ```author-date``` or ```committer-date```. Default: results are sorted by best match."]},{"default":"desc","description":"The sort order if ```sort``` parameter is provided. One of ```asc``` or ```desc```. Default: ```desc```","in":"query","name":"order","type":"string","x-swgg-descriptionLineList":["The sort order if ```sort``` parameter is provided. One of ```asc``` or ```desc```. Default: ```desc```"]}],"responses":{"default":{"description":"default response"}},"tags":["github-search"],"x-swgg-descriptionLineList":["[Search](https://developer.github.com/v3/search/#search-commits) - Search commits","","The Commit Search API is currently available for developers to preview.   During the preview period, the APIs may change without advance notice.   Please see the [blog post](https://developer.github.com/changes/2017-01-05-commit-search-api/) for full details.","","To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.cloak-preview","```","","Find commits via various criteria. This method returns up to 100 results [per page](https://developer.github.com/v3/#pagination)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Search](https://developer.github.com/v3/search/#search-commits) - Search commits","x-swgg-tags0":"github-search"}},"/search/issues":{"get":{"consumes":[],"description":"[Search](https://developer.github.com/v3/search/#search-issues) - Search issues\n\n**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.symmetra-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nFind issues by state and keyword. This method returns up to 100 results [per page](https://developer.github.com/v3/#pagination).","operationId":"_2Fsearch_2Fissues_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.symmetra-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.mercy-preview+json","application/vnd.github.v3.text-match+json","application/vnd.github.cloak-preview","application/vnd.github.symmetra-preview+json","application/vnd.github.mercy-preview","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"description":"The search terms.","in":"query","name":"q","type":"string","x-swgg-descriptionLineList":["The search terms."]},{"description":"The sort field. Can be ```comments```, ```created```, or ```updated```. Default: results are sorted by best match.","in":"query","name":"sort","type":"string","x-swgg-descriptionLineList":["The sort field. Can be ```comments```, ```created```, or ```updated```. Default: results are sorted by best match."]},{"default":"desc","description":"The sort order if ```sort``` parameter is provided. One of ```asc``` or ```desc```. Default: ```desc```","in":"query","name":"order","type":"string","x-swgg-descriptionLineList":["The sort order if ```sort``` parameter is provided. One of ```asc``` or ```desc```. Default: ```desc```"]}],"responses":{"default":{"description":"default response"}},"tags":["github-search"],"x-swgg-descriptionLineList":["[Search](https://developer.github.com/v3/search/#search-issues) - Search issues","","**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.symmetra-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","Find issues by state and keyword. This method returns up to 100 results [per page](https://developer.github.com/v3/#pagination)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Search](https://developer.github.com/v3/search/#search-issues) - Search issues","x-swgg-tags0":"github-search"}},"/search/labels":{"get":{"consumes":[],"description":"[Search](https://developer.github.com/v3/search/#search-labels) - Search labels\n\n**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.symmetra-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nFind labels in a repository with names or descriptions that match search keywords. Returns up to 100 results [per page](https://developer.github.com/v3/#pagination).","operationId":"_2Fsearch_2Flabels_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.symmetra-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.mercy-preview+json","application/vnd.github.v3.text-match+json","application/vnd.github.cloak-preview","application/vnd.github.symmetra-preview+json","application/vnd.github.mercy-preview","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"description":"The id of the repository.","in":"query","name":"repository_id","type":"integer","x-swgg-descriptionLineList":["The id of the repository."]},{"description":"The search keywords.","in":"query","name":"q","type":"string","x-swgg-descriptionLineList":["The search keywords."]},{"description":"The sort field. Can be one of ```created``` or ```updated```. Default: results are sorted by best match.","enum":["created","updated"],"in":"query","name":"sort","type":"string","x-swgg-descriptionLineList":["The sort field. Can be one of ```created``` or ```updated```. Default: results are sorted by best match."]},{"default":"desc","description":"The sort order if the sort parameter is provided. Can be one of ```asc``` or ```desc```. Default: ```desc```","enum":["asc","desc"],"in":"query","name":"order","type":"string","x-swgg-descriptionLineList":["The sort order if the sort parameter is provided. Can be one of ```asc``` or ```desc```. Default: ```desc```"]}],"responses":{"default":{"description":"default response"}},"tags":["github-search"],"x-swgg-descriptionLineList":["[Search](https://developer.github.com/v3/search/#search-labels) - Search labels","","**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](https://developer.github.com/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.symmetra-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","Find labels in a repository with names or descriptions that match search keywords. Returns up to 100 results [per page](https://developer.github.com/v3/#pagination)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Search](https://developer.github.com/v3/search/#search-labels) - Search labels","x-swgg-tags0":"github-search"}},"/search/repositories":{"get":{"consumes":[],"description":"[Search](https://developer.github.com/v3/search/#search-repositories) - Search repositories\n\nFind repositories via various criteria. This method returns up to 100 results [per page](https://developer.github.com/v3/#pagination).","operationId":"_2Fsearch_2Frepositories_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.symmetra-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.mercy-preview+json","application/vnd.github.v3.text-match+json","application/vnd.github.cloak-preview","application/vnd.github.symmetra-preview+json","application/vnd.github.mercy-preview","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"description":"The search keywords, as well as any qualifiers.","in":"query","name":"q","type":"string","x-swgg-descriptionLineList":["The search keywords, as well as any qualifiers."]},{"description":"The sort field. One of ```stars```, ```forks```, or ```updated```. Default: results are sorted by best match.","in":"query","name":"sort","type":"string","x-swgg-descriptionLineList":["The sort field. One of ```stars```, ```forks```, or ```updated```. Default: results are sorted by best match."]},{"default":"desc","description":"The sort order if ```sort``` parameter is provided. One of ```asc``` or ```desc```. Default: ```desc```","in":"query","name":"order","type":"string","x-swgg-descriptionLineList":["The sort order if ```sort``` parameter is provided. One of ```asc``` or ```desc```. Default: ```desc```"]}],"responses":{"default":{"description":"default response"}},"tags":["github-search"],"x-swgg-descriptionLineList":["[Search](https://developer.github.com/v3/search/#search-repositories) - Search repositories","","Find repositories via various criteria. This method returns up to 100 results [per page](https://developer.github.com/v3/#pagination)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Search](https://developer.github.com/v3/search/#search-repositories) - Search repositories","x-swgg-tags0":"github-search"}},"/search/topics":{"get":{"consumes":[],"description":"[Search](https://developer.github.com/v3/search/#search-topics) - Search topics\n\n**Note:** The ```topics``` property for repositories on GitHub is currently available for developers to preview. To view the ```topics``` property in calls that return repository results, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.mercy-preview+json\n```\n\nFind topics via various criteria. This method returns up to 100 results [per page](https://developer.github.com/v3/#pagination).","operationId":"_2Fsearch_2Ftopics_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.symmetra-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.mercy-preview+json","application/vnd.github.v3.text-match+json","application/vnd.github.cloak-preview","application/vnd.github.symmetra-preview+json","application/vnd.github.mercy-preview","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"description":"The search terms.","in":"query","name":"q","type":"string","x-swgg-descriptionLineList":["The search terms."]}],"responses":{"default":{"description":"default response"}},"tags":["github-search"],"x-swgg-descriptionLineList":["[Search](https://developer.github.com/v3/search/#search-topics) - Search topics","","**Note:** The ```topics``` property for repositories on GitHub is currently available for developers to preview. To view the ```topics``` property in calls that return repository results, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.mercy-preview+json","```","","Find topics via various criteria. This method returns up to 100 results [per page](https://developer.github.com/v3/#pagination)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Search](https://developer.github.com/v3/search/#search-topics) - Search topics","x-swgg-tags0":"github-search"}},"/search/users":{"get":{"consumes":[],"description":"[Search](https://developer.github.com/v3/search/#search-users) - Search users\n\nFind users via various criteria. This method returns up to 100 results [per page](https://developer.github.com/v3/#pagination).","operationId":"_2Fsearch_2Fusers_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.symmetra-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.mercy-preview+json","application/vnd.github.v3.text-match+json","application/vnd.github.cloak-preview","application/vnd.github.symmetra-preview+json","application/vnd.github.mercy-preview","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"description":"The search terms.","in":"query","name":"q","type":"string","x-swgg-descriptionLineList":["The search terms."]},{"description":"The sort field. Can be ```followers```, ```repositories```, or ```joined```.  Default: results are sorted by best match.","in":"query","name":"sort","type":"string","x-swgg-descriptionLineList":["The sort field. Can be ```followers```, ```repositories```, or ```joined```.  Default: results are sorted by best match."]},{"default":"desc","description":"The sort order if ```sort``` parameter is provided. One of ```asc``` or ```desc```. Default: ```desc```","in":"query","name":"order","type":"string","x-swgg-descriptionLineList":["The sort order if ```sort``` parameter is provided. One of ```asc``` or ```desc```. Default: ```desc```"]}],"responses":{"default":{"description":"default response"}},"tags":["github-search"],"x-swgg-descriptionLineList":["[Search](https://developer.github.com/v3/search/#search-users) - Search users","","Find users via various criteria. This method returns up to 100 results [per page](https://developer.github.com/v3/#pagination)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Search](https://developer.github.com/v3/search/#search-users) - Search users","x-swgg-tags0":"github-search"}},"/teams/{id}":{"delete":{"consumes":[],"description":"[Organization Teams](https://developer.github.com/v3/teams/#delete-team) - Delete team\n\n**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.hellcat-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nTo delete a team, the authenticated user must be a team maintainer or an owner of the org associated with the team.\n\nIf you are an organization owner and you pass the ```hellcat-preview``` media type, deleting a parent team will delete all of its child teams as well.","operationId":"_2Fteams_2F_7Bid_7D_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hellcat-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3.repository+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-teams"],"x-swgg-descriptionLineList":["[Organization Teams](https://developer.github.com/v3/teams/#delete-team) - Delete team","","**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.hellcat-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","To delete a team, the authenticated user must be a team maintainer or an owner of the org associated with the team.","","If you are an organization owner and you pass the ```hellcat-preview``` media type, deleting a parent team will delete all of its child teams as well."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Organization Teams](https://developer.github.com/v3/teams/#delete-team) - Delete team","x-swgg-tags0":"github-teams"},"get":{"consumes":[],"description":"[Organization Teams](https://developer.github.com/v3/teams/#get-team) - Get team\n\n**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.hellcat-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","operationId":"_2Fteams_2F_7Bid_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hellcat-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3.repository+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-teams"],"x-swgg-descriptionLineList":["[Organization Teams](https://developer.github.com/v3/teams/#get-team) - Get team","","**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.hellcat-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Organization Teams](https://developer.github.com/v3/teams/#get-team) - Get team","x-swgg-tags0":"github-teams"},"patch":{"consumes":[],"description":"[Organization Teams](https://developer.github.com/v3/teams/#edit-team) - Edit team\n\n**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.hellcat-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nTo edit a team, the authenticated user must either be an owner of the org that the team is associated with, or a maintainer of the team.","operationId":"_2Fteams_2F_7Bid_7D_20PATCH","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hellcat-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3.repository+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Fteams_2F_7Bid_7D_20PATCH.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-teams"],"x-swgg-descriptionLineList":["[Organization Teams](https://developer.github.com/v3/teams/#edit-team) - Edit team","","**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.hellcat-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","To edit a team, the authenticated user must either be an owner of the org that the team is associated with, or a maintainer of the team."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Organization Teams](https://developer.github.com/v3/teams/#edit-team) - Edit team","x-swgg-tags0":"github-teams"}},"/teams/{id}/invitations":{"get":{"consumes":[],"description":"[Team Members](https://developer.github.com/v3/teams/members/#list-pending-team-invitations) - List pending team invitations\n\n**Note:** You can now use the API to invite users to a GitHub organization. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-01-25-organization-invitation-api-preview) for full details. To access this feature, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.dazzler-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nThe return hash contains a ```role``` field which refers to the Organization Invitation role and will be one of the following values: ```direct_member```, ```admin```, ```billing_manager```, ```hiring_manager```, or ```reinstate```. If the invitee is not a GitHub member, the ```login``` field in the return hash will be ```null```.","operationId":"_2Fteams_2F_7Bid_7D_2Finvitations_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.dazzler-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.dazzler-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-teams"],"x-swgg-descriptionLineList":["[Team Members](https://developer.github.com/v3/teams/members/#list-pending-team-invitations) - List pending team invitations","","**Note:** You can now use the API to invite users to a GitHub organization. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-01-25-organization-invitation-api-preview) for full details. To access this feature, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.dazzler-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","The return hash contains a ```role``` field which refers to the Organization Invitation role and will be one of the following values: ```direct_member```, ```admin```, ```billing_manager```, ```hiring_manager```, or ```reinstate```. If the invitee is not a GitHub member, the ```login``` field in the return hash will be ```null```."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Team Members](https://developer.github.com/v3/teams/members/#list-pending-team-invitations) - List pending team invitations","x-swgg-tags0":"github-teams"}},"/teams/{id}/members":{"get":{"consumes":[],"description":"[Team Members](https://developer.github.com/v3/teams/members/#list-team-members) - List team members\n\n**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.hellcat-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nIf you pass the ```hellcat-preview``` media type, team members will include the members of child teams.\n\nTo list members in a team, the team must be visible to the authenticated user.","operationId":"_2Fteams_2F_7Bid_7D_2Fmembers_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.dazzler-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.dazzler-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"},{"description":"Filters members returned by their role in the team. Can be one of:\n* ```member``` - normal members of the team.\n* ```maintainer``` - team maintainers.\n* ```all``` - all members of the team.\nDefault: ```all```","enum":["member","maintainer","all"],"in":"query","name":"role","type":"string","x-swgg-descriptionLineList":["Filters members returned by their role in the team. Can be one of:","* ```member``` - normal members of the team.","* ```maintainer``` - team maintainers.","* ```all``` - all members of the team.","Default: ```all```"]}],"responses":{"default":{"description":"default response"}},"tags":["github-teams"],"x-swgg-descriptionLineList":["[Team Members](https://developer.github.com/v3/teams/members/#list-team-members) - List team members","","**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.hellcat-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","If you pass the ```hellcat-preview``` media type, team members will include the members of child teams.","","To list members in a team, the team must be visible to the authenticated user."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Team Members](https://developer.github.com/v3/teams/members/#list-team-members) - List team members","x-swgg-tags0":"github-teams"}},"/teams/{id}/members/{username}":{"delete":{"consumes":[],"description":"[Team Members](https://developer.github.com/v3/teams/members/#remove-team-member) - Remove team member\n\n####  Deprecation notice\n\nThe \"Remove team member\" API (described below) is deprecated.\n\nWe recommend using the [Remove team membership API](https://developer.github.com/v3/teams/members/#remove-team-membership) instead. It allows you to remove both active and pending memberships.\n\nTo remove a user from a team, the authenticated user must have 'admin' permissions to the team or be an owner of the org that the team is associated with. NOTE: This does not delete the user, it just removes them from the team.","operationId":"_2Fteams_2F_7Bid_7D_2Fmembers_2F_7Busername_7D_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.dazzler-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.dazzler-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"},{"default":"username","description":"no description","in":"path","name":"username","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-teams"],"x-swgg-descriptionLineList":["[Team Members](https://developer.github.com/v3/teams/members/#remove-team-member) - Remove team member","","####  Deprecation notice","","The \"Remove team member\" API (described below) is deprecated.","","We recommend using the [Remove team membership API](https://developer.github.com/v3/teams/members/#remove-team-membership) instead. It allows you to remove both active and pending memberships.","","To remove a user from a team, the authenticated user must have 'admin' permissions to the team or be an owner of the org that the team is associated with. NOTE: This does not delete the user, it just removes them from the team."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Team Members](https://developer.github.com/v3/teams/members/#remove-team-member) - Remove team member","x-swgg-tags0":"github-teams"},"get":{"consumes":[],"description":"[Team Members](https://developer.github.com/v3/teams/members/#get-team-member) - Get team member\n\n####  Deprecation notice\n\nThe \"Get team member\" API (described below) is deprecated.\n\nWe recommend using the [Get team membership API](https://developer.github.com/v3/teams/members/#get-team-membership) instead. It allows you to get both active and pending memberships.\n\nTo list members in a team, the team must be visible to the authenticated user.","operationId":"_2Fteams_2F_7Bid_7D_2Fmembers_2F_7Busername_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.dazzler-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.dazzler-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"},{"default":"username","description":"no description","in":"path","name":"username","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-teams"],"x-swgg-descriptionLineList":["[Team Members](https://developer.github.com/v3/teams/members/#get-team-member) - Get team member","","####  Deprecation notice","","The \"Get team member\" API (described below) is deprecated.","","We recommend using the [Get team membership API](https://developer.github.com/v3/teams/members/#get-team-membership) instead. It allows you to get both active and pending memberships.","","To list members in a team, the team must be visible to the authenticated user."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Team Members](https://developer.github.com/v3/teams/members/#get-team-member) - Get team member","x-swgg-tags0":"github-teams"},"put":{"consumes":[],"description":"[Team Members](https://developer.github.com/v3/teams/members/#add-team-member) - Add team member\n\n####  Deprecation notice\n\nThe \"Add team member\" API (described below) is deprecated.\n\nWe recommend using the [Add team membership API](https://developer.github.com/v3/teams/members/#add-or-update-team-membership) instead. It allows you to invite new organization members to your teams.\n\nTo add a user to a team, the authenticated user must have 'admin' permissions to the team or be an owner of the organization that the team is associated with, and the user being added must already be a member of at least one other team on the same organization.","operationId":"_2Fteams_2F_7Bid_7D_2Fmembers_2F_7Busername_7D_20PUT","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.dazzler-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.dazzler-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"},{"default":"username","description":"no description","in":"path","name":"username","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-teams"],"x-swgg-descriptionLineList":["[Team Members](https://developer.github.com/v3/teams/members/#add-team-member) - Add team member","","####  Deprecation notice","","The \"Add team member\" API (described below) is deprecated.","","We recommend using the [Add team membership API](https://developer.github.com/v3/teams/members/#add-or-update-team-membership) instead. It allows you to invite new organization members to your teams.","","To add a user to a team, the authenticated user must have 'admin' permissions to the team or be an owner of the organization that the team is associated with, and the user being added must already be a member of at least one other team on the same organization."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Team Members](https://developer.github.com/v3/teams/members/#add-team-member) - Add team member","x-swgg-tags0":"github-teams"}},"/teams/{id}/memberships/{username}":{"delete":{"consumes":[],"description":"[Team Members](https://developer.github.com/v3/teams/members/#remove-team-membership) - Remove team membership\n\nTo remove a membership between a user and a team, the authenticated user must have 'admin' permissions to the team or be an owner of the organization that the team is associated with. NOTE: This does not delete the user, it just removes their membership from the team.","operationId":"_2Fteams_2F_7Bid_7D_2Fmemberships_2F_7Busername_7D_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.dazzler-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.dazzler-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"},{"default":"username","description":"no description","in":"path","name":"username","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-teams"],"x-swgg-descriptionLineList":["[Team Members](https://developer.github.com/v3/teams/members/#remove-team-membership) - Remove team membership","","To remove a membership between a user and a team, the authenticated user must have 'admin' permissions to the team or be an owner of the organization that the team is associated with. NOTE: This does not delete the user, it just removes their membership from the team."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Team Members](https://developer.github.com/v3/teams/members/#remove-team-membership) - Remove team membership","x-swgg-tags0":"github-teams"},"get":{"consumes":[],"description":"[Team Members](https://developer.github.com/v3/teams/members/#get-team-membership) - Get team membership\n\n**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.hellcat-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nIf you pass the ```hellcat-preview``` media type, team members will include the members of child teams.\n\nTo get a user's membership with a team, the team must be visible to the authenticated user.","operationId":"_2Fteams_2F_7Bid_7D_2Fmemberships_2F_7Busername_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.dazzler-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.dazzler-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"},{"default":"username","description":"no description","in":"path","name":"username","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-teams"],"x-swgg-descriptionLineList":["[Team Members](https://developer.github.com/v3/teams/members/#get-team-membership) - Get team membership","","**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.hellcat-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","If you pass the ```hellcat-preview``` media type, team members will include the members of child teams.","","To get a user's membership with a team, the team must be visible to the authenticated user."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Team Members](https://developer.github.com/v3/teams/members/#get-team-membership) - Get team membership","x-swgg-tags0":"github-teams"},"put":{"consumes":[],"description":"[Team Members](https://developer.github.com/v3/teams/members/#add-or-update-team-membership) - Add or update team membership\n\nIf the user is already a member of the team's organization, this endpoint will add the user to the team. To add a membership between an organization member and a team, the authenticated user must be an organization owner or a maintainer of the team.\n\nIf the user is unaffiliated with the team's organization, this endpoint will send an invitation to the user via email. This newly-created membership will be in the \"pending\" state until the user accepts the invitation, at which point the membership will transition to the \"active\" state and the user will be added as a member of the team. To add a membership between an unaffiliated user and a team, the authenticated user must be an organization owner.\n\nIf the user is already a member of the team, this endpoint will update the role of the team member's role. To update the membership of a team member, the authenticated user must be an organization owner or a maintainer of the team.","operationId":"_2Fteams_2F_7Bid_7D_2Fmemberships_2F_7Busername_7D_20PUT","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.dazzler-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.dazzler-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"},{"default":"username","description":"no description","in":"path","name":"username","required":true,"type":"string"},{"description":"The role that this user should have in the team. Can be one of:\n* ```member``` - a normal member of the team.\n* ```maintainer``` - a team maintainer. Able to add/remove other team members, promote other team members to team maintainer, and edit the team's name and description.\nDefault: ```member```","enum":["member","maintainer"],"in":"query","name":"role","type":"string","x-swgg-descriptionLineList":["The role that this user should have in the team. Can be one of:","* ```member``` - a normal member of the team.","* ```maintainer``` - a team maintainer. Able to add/remove other team members, promote other team members to team maintainer, and edit the team's name and description.","Default: ```member```"]}],"responses":{"default":{"description":"default response"}},"tags":["github-teams"],"x-swgg-descriptionLineList":["[Team Members](https://developer.github.com/v3/teams/members/#add-or-update-team-membership) - Add or update team membership","","If the user is already a member of the team's organization, this endpoint will add the user to the team. To add a membership between an organization member and a team, the authenticated user must be an organization owner or a maintainer of the team.","","If the user is unaffiliated with the team's organization, this endpoint will send an invitation to the user via email. This newly-created membership will be in the \"pending\" state until the user accepts the invitation, at which point the membership will transition to the \"active\" state and the user will be added as a member of the team. To add a membership between an unaffiliated user and a team, the authenticated user must be an organization owner.","","If the user is already a member of the team, this endpoint will update the role of the team member's role. To update the membership of a team member, the authenticated user must be an organization owner or a maintainer of the team."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Team Members](https://developer.github.com/v3/teams/members/#add-or-update-team-membership) - Add or update team membership","x-swgg-tags0":"github-teams"}},"/teams/{id}/repos":{"get":{"consumes":[],"description":"[Organization Teams](https://developer.github.com/v3/teams/#list-team-repos) - List team repos\n\n**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.hellcat-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\n**Note**: If you pass the ```hellcat-preview``` media type, the response will include any repositories inherited through a parent team.","operationId":"_2Fteams_2F_7Bid_7D_2Frepos_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hellcat-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3.repository+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-teams"],"x-swgg-descriptionLineList":["[Organization Teams](https://developer.github.com/v3/teams/#list-team-repos) - List team repos","","**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.hellcat-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","**Note**: If you pass the ```hellcat-preview``` media type, the response will include any repositories inherited through a parent team."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Organization Teams](https://developer.github.com/v3/teams/#list-team-repos) - List team repos","x-swgg-tags0":"github-teams"}},"/teams/{id}/repos/{org}/{repo}":{"put":{"consumes":[],"description":"[Organization Teams](https://developer.github.com/v3/teams/#add-or-update-team-repository) - Add or update team repository\n\n**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.hellcat-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nTo add a repository to a team or update the team's permission on a repository, the authenticated user must have admin access to the repository, and must be able to see the team. Also, the repository must be owned by the organization, or a direct fork of a repository owned by the organization.","operationId":"_2Fteams_2F_7Bid_7D_2Frepos_2F_7Borg_7D_2F_7Brepo_7D_20PUT","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hellcat-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3.repository+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"},{"default":"org","description":"no description","in":"path","name":"org","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"},{"description":"The permission to grant the team on this repository. Can be one of:\n* ```pull``` - team members can pull, but not push to or administer this repository.\n* ```push``` - team members can pull and push, but not administer this repository.\n* ```admin``` - team members can pull, push and administer this repository.\n\nIf no permission is specified, the team's ```permission``` attribute will be used to determine what permission to grant the team on this repository.\n**Note**: If you pass the ```hellcat-preview``` media type, you can promote—but not demote—a ```permission``` attribute inherited through a parent team.","enum":["pull","push","admin","permission","hellcat-preview"],"in":"query","name":"permission","type":"string","x-swgg-descriptionLineList":["The permission to grant the team on this repository. Can be one of:","* ```pull``` - team members can pull, but not push to or administer this repository.","* ```push``` - team members can pull and push, but not administer this repository.","* ```admin``` - team members can pull, push and administer this repository.","","If no permission is specified, the team's ```permission``` attribute will be used to determine what permission to grant the team on this repository.","**Note**: If you pass the ```hellcat-preview``` media type, you can promote—but not demote—a ```permission``` attribute inherited through a parent team."]}],"responses":{"default":{"description":"default response"}},"tags":["github-teams"],"x-swgg-descriptionLineList":["[Organization Teams](https://developer.github.com/v3/teams/#add-or-update-team-repository) - Add or update team repository","","**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.hellcat-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","To add a repository to a team or update the team's permission on a repository, the authenticated user must have admin access to the repository, and must be able to see the team. Also, the repository must be owned by the organization, or a direct fork of a repository owned by the organization."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Organization Teams](https://developer.github.com/v3/teams/#add-or-update-team-repository) - Add or update team repository","x-swgg-tags0":"github-teams"}},"/teams/{id}/repos/{owner}/{repo}#1":{"delete":{"consumes":[],"description":"[Organization Teams](https://developer.github.com/v3/teams/#remove-team-repository) - Remove team repository\n\nIf the authenticated user is an organization owner or a team maintainer, they can remove any repositories from the team. To remove a repository from a team as an organization member, the authenticated user must have admin access to the repository and must be able to see the team. NOTE: This does not delete the repository, it just removes it from the team.","operationId":"_2Fteams_2F_7Bid_7D_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_231_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hellcat-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3.repository+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-teams"],"x-swgg-descriptionLineList":["[Organization Teams](https://developer.github.com/v3/teams/#remove-team-repository) - Remove team repository","","If the authenticated user is an organization owner or a team maintainer, they can remove any repositories from the team. To remove a repository from a team as an organization member, the authenticated user must have admin access to the repository and must be able to see the team. NOTE: This does not delete the repository, it just removes it from the team."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Organization Teams](https://developer.github.com/v3/teams/#remove-team-repository) - Remove team repository","x-swgg-tags0":"github-teams"},"get":{"consumes":[],"description":"[Organization Teams](https://developer.github.com/v3/teams/#check-if-a-team-manages-a-repository) - Check if a team manages a repository\n\n**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.hellcat-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\n**Note**: If you pass the ```hellcat-preview``` media type, repositories inherited through a parent team will be checked as well.","operationId":"_2Fteams_2F_7Bid_7D_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_231_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hellcat-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3.repository+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-teams"],"x-swgg-descriptionLineList":["[Organization Teams](https://developer.github.com/v3/teams/#check-if-a-team-manages-a-repository) - Check if a team manages a repository","","**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.hellcat-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","**Note**: If you pass the ```hellcat-preview``` media type, repositories inherited through a parent team will be checked as well."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Organization Teams](https://developer.github.com/v3/teams/#check-if-a-team-manages-a-repository) - Check if a team manages a repository","x-swgg-tags0":"github-teams"}},"/teams/{id}/teams":{"get":{"consumes":[],"description":"[Organization Teams](https://developer.github.com/v3/teams/#list-child-teams) - List child teams\n\n**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.hellcat-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nAt this time, the ```hellcat-preview``` media type is required to use this endpoint.","operationId":"_2Fteams_2F_7Bid_7D_2Fteams_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hellcat-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3.repository+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-teams"],"x-swgg-descriptionLineList":["[Organization Teams](https://developer.github.com/v3/teams/#list-child-teams) - List child teams","","**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.hellcat-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","At this time, the ```hellcat-preview``` media type is required to use this endpoint."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Organization Teams](https://developer.github.com/v3/teams/#list-child-teams) - List child teams","x-swgg-tags0":"github-teams"}},"/teams/{team_id}/discussions":{"get":{"consumes":[],"description":"[Team Discussions](https://developer.github.com/v3/teams/discussions/#list-discussions) - List discussions\n\n**Note:** The team discussions API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.echo-preview+json\n```\n\n**Note:** The [reactions API](https://developer.github.com/v3/reactions/) is available for developers to preview. The ```url``` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions. See the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details. To receive the ```reactions``` object in the response for this endpoint you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.squirrel-girl-preview\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nList all discussions on a team's page. OAuth access tokens require the ```read:discussion``` [scope](https://developer.github.com/apps/building-oauth-apps/scopes-for-oauth-apps/).","operationId":"_2Fteams_2F_7Bteam_id_7D_2Fdiscussions_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.echo-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.echo-preview+json","application/vnd.github.squirrel-girl-preview","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"team_id","description":"no description","in":"path","name":"team_id","required":true,"type":"string"},{"default":"desc","description":"Sorts the discussion comments by the date they were created. To return the oldest comments first, set to ```asc```. Can be one of ```asc``` or ```desc```.\nDefault: ```desc```","enum":["asc","desc"],"in":"query","name":"direction","type":"string","x-swgg-descriptionLineList":["Sorts the discussion comments by the date they were created. To return the oldest comments first, set to ```asc```. Can be one of ```asc``` or ```desc```.","Default: ```desc```"]}],"responses":{"default":{"description":"default response"}},"tags":["github-teams"],"x-swgg-descriptionLineList":["[Team Discussions](https://developer.github.com/v3/teams/discussions/#list-discussions) - List discussions","","**Note:** The team discussions API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.echo-preview+json","```","","**Note:** The [reactions API](https://developer.github.com/v3/reactions/) is available for developers to preview. The ```url``` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions. See the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details. To receive the ```reactions``` object in the response for this endpoint you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.squirrel-girl-preview","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","List all discussions on a team's page. OAuth access tokens require the ```read:discussion``` [scope](https://developer.github.com/apps/building-oauth-apps/scopes-for-oauth-apps/)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Team Discussions](https://developer.github.com/v3/teams/discussions/#list-discussions) - List discussions","x-swgg-tags0":"github-teams"},"post":{"consumes":[],"description":"[Team Discussions](https://developer.github.com/v3/teams/discussions/#create-a-discussion) - Create a discussion\n\n**Note:** The team discussions API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.echo-preview+json\n```\n\n**Note:** The [reactions API](https://developer.github.com/v3/reactions/) is available for developers to preview. The ```url``` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions. See the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details. To receive the ```reactions``` object in the response for this endpoint you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.squirrel-girl-preview\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nCreates a new discussion post on a team's page. OAuth access tokens require the ```write:discussion``` [scope](https://developer.github.com/apps/building-oauth-apps/scopes-for-oauth-apps/).","operationId":"_2Fteams_2F_7Bteam_id_7D_2Fdiscussions_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.echo-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.echo-preview+json","application/vnd.github.squirrel-girl-preview","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"team_id","description":"no description","in":"path","name":"team_id","required":true,"type":"string"},{"description":"**Required**. The discussion post's body text.","in":"body","name":"body","required":true,"schema":{"$ref":"#/definitions/_2Fteams_2F_7Bteam_id_7D_2Fdiscussions_20POST.body"},"x-swgg-descriptionLineList":["**Required**. The discussion post's body text."]}],"responses":{"default":{"description":"default response"}},"tags":["github-teams"],"x-swgg-descriptionLineList":["[Team Discussions](https://developer.github.com/v3/teams/discussions/#create-a-discussion) - Create a discussion","","**Note:** The team discussions API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.echo-preview+json","```","","**Note:** The [reactions API](https://developer.github.com/v3/reactions/) is available for developers to preview. The ```url``` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions. See the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details. To receive the ```reactions``` object in the response for this endpoint you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.squirrel-girl-preview","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","Creates a new discussion post on a team's page. OAuth access tokens require the ```write:discussion``` [scope](https://developer.github.com/apps/building-oauth-apps/scopes-for-oauth-apps/)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Team Discussions](https://developer.github.com/v3/teams/discussions/#create-a-discussion) - Create a discussion","x-swgg-tags0":"github-teams"}},"/teams/{team_id}/discussions/{discussion_number}":{"delete":{"consumes":[],"description":"[Team Discussions](https://developer.github.com/v3/teams/discussions/#delete-a-discussion) - Delete a discussion\n\n**Note:** The team discussions API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.echo-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nDelete a discussion from a team's page. OAuth access tokens require the ```write:discussion``` [scope](https://developer.github.com/apps/building-oauth-apps/scopes-for-oauth-apps/).","operationId":"_2Fteams_2F_7Bteam_id_7D_2Fdiscussions_2F_7Bdiscussion_number_7D_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.echo-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.echo-preview+json","application/vnd.github.squirrel-girl-preview","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"team_id","description":"no description","in":"path","name":"team_id","required":true,"type":"string"},{"default":"discussion_number","description":"no description","in":"path","name":"discussion_number","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-teams"],"x-swgg-descriptionLineList":["[Team Discussions](https://developer.github.com/v3/teams/discussions/#delete-a-discussion) - Delete a discussion","","**Note:** The team discussions API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.echo-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","Delete a discussion from a team's page. OAuth access tokens require the ```write:discussion``` [scope](https://developer.github.com/apps/building-oauth-apps/scopes-for-oauth-apps/)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Team Discussions](https://developer.github.com/v3/teams/discussions/#delete-a-discussion) - Delete a discussion","x-swgg-tags0":"github-teams"},"get":{"consumes":[],"description":"[Team Discussions](https://developer.github.com/v3/teams/discussions/#get-a-single-discussion) - Get a single discussion\n\n**Note:** The team discussions API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.echo-preview+json\n```\n\n**Note:** The [reactions API](https://developer.github.com/v3/reactions/) is available for developers to preview. The ```url``` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions. See the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details. To receive the ```reactions``` object in the response for this endpoint you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.squirrel-girl-preview\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nGet a specific discussion on a team's page. OAuth access tokens require the ```read:discussion``` [scope](https://developer.github.com/apps/building-oauth-apps/scopes-for-oauth-apps/).","operationId":"_2Fteams_2F_7Bteam_id_7D_2Fdiscussions_2F_7Bdiscussion_number_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.echo-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.echo-preview+json","application/vnd.github.squirrel-girl-preview","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"team_id","description":"no description","in":"path","name":"team_id","required":true,"type":"string"},{"default":"discussion_number","description":"no description","in":"path","name":"discussion_number","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-teams"],"x-swgg-descriptionLineList":["[Team Discussions](https://developer.github.com/v3/teams/discussions/#get-a-single-discussion) - Get a single discussion","","**Note:** The team discussions API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.echo-preview+json","```","","**Note:** The [reactions API](https://developer.github.com/v3/reactions/) is available for developers to preview. The ```url``` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions. See the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details. To receive the ```reactions``` object in the response for this endpoint you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.squirrel-girl-preview","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","Get a specific discussion on a team's page. OAuth access tokens require the ```read:discussion``` [scope](https://developer.github.com/apps/building-oauth-apps/scopes-for-oauth-apps/)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Team Discussions](https://developer.github.com/v3/teams/discussions/#get-a-single-discussion) - Get a single discussion","x-swgg-tags0":"github-teams"},"patch":{"consumes":[],"description":"[Team Discussions](https://developer.github.com/v3/teams/discussions/#edit-a-discussion) - Edit a discussion\n\n**Note:** The team discussions API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.echo-preview+json\n```\n\n**Note:** The [reactions API](https://developer.github.com/v3/reactions/) is available for developers to preview. The ```url``` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions. See the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details. To receive the ```reactions``` object in the response for this endpoint you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.squirrel-girl-preview\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nEdits the title and body text of a discussion post. Only the parameters you provide are updated. OAuth access tokens require the ```write:discussion``` [scope](https://developer.github.com/apps/building-oauth-apps/scopes-for-oauth-apps/).","operationId":"_2Fteams_2F_7Bteam_id_7D_2Fdiscussions_2F_7Bdiscussion_number_7D_20PATCH","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.echo-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.echo-preview+json","application/vnd.github.squirrel-girl-preview","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"team_id","description":"no description","in":"path","name":"team_id","required":true,"type":"string"},{"default":"discussion_number","description":"no description","in":"path","name":"discussion_number","required":true,"type":"string"},{"description":"The discussion post's body text.","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Fteams_2F_7Bteam_id_7D_2Fdiscussions_2F_7Bdiscussion_number_7D_20PATCH.body"},"x-swgg-descriptionLineList":["The discussion post's body text."]}],"responses":{"default":{"description":"default response"}},"tags":["github-teams"],"x-swgg-descriptionLineList":["[Team Discussions](https://developer.github.com/v3/teams/discussions/#edit-a-discussion) - Edit a discussion","","**Note:** The team discussions API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.echo-preview+json","```","","**Note:** The [reactions API](https://developer.github.com/v3/reactions/) is available for developers to preview. The ```url``` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions. See the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details. To receive the ```reactions``` object in the response for this endpoint you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.squirrel-girl-preview","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","Edits the title and body text of a discussion post. Only the parameters you provide are updated. OAuth access tokens require the ```write:discussion``` [scope](https://developer.github.com/apps/building-oauth-apps/scopes-for-oauth-apps/)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Team Discussions](https://developer.github.com/v3/teams/discussions/#edit-a-discussion) - Edit a discussion","x-swgg-tags0":"github-teams"}},"/teams/{team_id}/discussions/{discussion_number}/comments":{"get":{"consumes":[],"description":"[Team Discussion Comments](https://developer.github.com/v3/teams/discussion_comments/#list-comments) - List comments\n\n**Note:** The team discussions API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.echo-preview+json\n```\n\n**Note:** The [reactions API](https://developer.github.com/v3/reactions/) is available for developers to preview. The ```url``` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions. See the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details. To receive the ```reactions``` object in the response for this endpoint you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.squirrel-girl-preview\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nList all comments on a team discussion. OAuth access tokens require the ```read:discussion``` [scope](https://developer.github.com/apps/building-oauth-apps/scopes-for-oauth-apps/).","operationId":"_2Fteams_2F_7Bteam_id_7D_2Fdiscussions_2F_7Bdiscussion_number_7D_2Fcomments_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.echo-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.echo-preview+json","application/vnd.github.squirrel-girl-preview","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"team_id","description":"no description","in":"path","name":"team_id","required":true,"type":"string"},{"default":"discussion_number","description":"no description","in":"path","name":"discussion_number","required":true,"type":"string"},{"default":"desc","description":"Sorts the discussion comments by the date they were created. To return the oldest comments first, set to ```asc```. Can be one of ```asc``` or ```desc```.\nDefault: ```desc```","enum":["asc","desc"],"in":"query","name":"direction","type":"string","x-swgg-descriptionLineList":["Sorts the discussion comments by the date they were created. To return the oldest comments first, set to ```asc```. Can be one of ```asc``` or ```desc```.","Default: ```desc```"]}],"responses":{"default":{"description":"default response"}},"tags":["github-teams"],"x-swgg-descriptionLineList":["[Team Discussion Comments](https://developer.github.com/v3/teams/discussion_comments/#list-comments) - List comments","","**Note:** The team discussions API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.echo-preview+json","```","","**Note:** The [reactions API](https://developer.github.com/v3/reactions/) is available for developers to preview. The ```url``` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions. See the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details. To receive the ```reactions``` object in the response for this endpoint you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.squirrel-girl-preview","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","List all comments on a team discussion. OAuth access tokens require the ```read:discussion``` [scope](https://developer.github.com/apps/building-oauth-apps/scopes-for-oauth-apps/)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Team Discussion Comments](https://developer.github.com/v3/teams/discussion_comments/#list-comments) - List comments","x-swgg-tags0":"github-teams"},"post":{"consumes":[],"description":"[Team Discussion Comments](https://developer.github.com/v3/teams/discussion_comments/#create-a-comment) - Create a comment\n\n**Note:** The team discussions API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.echo-preview+json\n```\n\n**Note:** The [reactions API](https://developer.github.com/v3/reactions/) is available for developers to preview. The ```url``` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions. See the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details. To receive the ```reactions``` object in the response for this endpoint you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.squirrel-girl-preview\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nCreates a new comment on a team discussion. OAuth access tokens require the ```write:discussion``` [scope](https://developer.github.com/apps/building-oauth-apps/scopes-for-oauth-apps/).","operationId":"_2Fteams_2F_7Bteam_id_7D_2Fdiscussions_2F_7Bdiscussion_number_7D_2Fcomments_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.echo-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.echo-preview+json","application/vnd.github.squirrel-girl-preview","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"team_id","description":"no description","in":"path","name":"team_id","required":true,"type":"string"},{"default":"discussion_number","description":"no description","in":"path","name":"discussion_number","required":true,"type":"string"},{"description":"**Required**. The discussion comment's body text.","in":"body","name":"body","required":true,"schema":{"$ref":"#/definitions/_2Fteams_2F_7Bteam_id_7D_2Fdiscussions_2F_7Bdiscussion_number_7D_2Fcomments_20POST.body"},"x-swgg-descriptionLineList":["**Required**. The discussion comment's body text."]}],"responses":{"default":{"description":"default response"}},"tags":["github-teams"],"x-swgg-descriptionLineList":["[Team Discussion Comments](https://developer.github.com/v3/teams/discussion_comments/#create-a-comment) - Create a comment","","**Note:** The team discussions API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.echo-preview+json","```","","**Note:** The [reactions API](https://developer.github.com/v3/reactions/) is available for developers to preview. The ```url``` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions. See the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details. To receive the ```reactions``` object in the response for this endpoint you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.squirrel-girl-preview","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","Creates a new comment on a team discussion. OAuth access tokens require the ```write:discussion``` [scope](https://developer.github.com/apps/building-oauth-apps/scopes-for-oauth-apps/)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Team Discussion Comments](https://developer.github.com/v3/teams/discussion_comments/#create-a-comment) - Create a comment","x-swgg-tags0":"github-teams"}},"/teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}":{"delete":{"consumes":[],"description":"[Team Discussion Comments](https://developer.github.com/v3/teams/discussion_comments/#delete-a-comment) - Delete a comment\n\n**Note:** The team discussions API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.echo-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nDeletes a comment on a team discussion. OAuth access tokens require the ```write:discussion``` [scope](https://developer.github.com/apps/building-oauth-apps/scopes-for-oauth-apps/).","operationId":"_2Fteams_2F_7Bteam_id_7D_2Fdiscussions_2F_7Bdiscussion_number_7D_2Fcomments_2F_7Bcomment_number_7D_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.echo-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.echo-preview+json","application/vnd.github.squirrel-girl-preview","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"team_id","description":"no description","in":"path","name":"team_id","required":true,"type":"string"},{"default":"discussion_number","description":"no description","in":"path","name":"discussion_number","required":true,"type":"string"},{"default":"comment_number","description":"no description","in":"path","name":"comment_number","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-teams"],"x-swgg-descriptionLineList":["[Team Discussion Comments](https://developer.github.com/v3/teams/discussion_comments/#delete-a-comment) - Delete a comment","","**Note:** The team discussions API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.echo-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","Deletes a comment on a team discussion. OAuth access tokens require the ```write:discussion``` [scope](https://developer.github.com/apps/building-oauth-apps/scopes-for-oauth-apps/)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Team Discussion Comments](https://developer.github.com/v3/teams/discussion_comments/#delete-a-comment) - Delete a comment","x-swgg-tags0":"github-teams"},"get":{"consumes":[],"description":"[Team Discussion Comments](https://developer.github.com/v3/teams/discussion_comments/#get-a-single-comment) - Get a single comment\n\n**Note:** The team discussions API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.echo-preview+json\n```\n\n**Note:** The [reactions API](https://developer.github.com/v3/reactions/) is available for developers to preview. The ```url``` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions. See the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details. To receive the ```reactions``` object in the response for this endpoint you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.squirrel-girl-preview\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nGet a specific comment on a team discussion. OAuth access tokens require the ```read:discussion``` [scope](https://developer.github.com/apps/building-oauth-apps/scopes-for-oauth-apps/).","operationId":"_2Fteams_2F_7Bteam_id_7D_2Fdiscussions_2F_7Bdiscussion_number_7D_2Fcomments_2F_7Bcomment_number_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.echo-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.echo-preview+json","application/vnd.github.squirrel-girl-preview","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"team_id","description":"no description","in":"path","name":"team_id","required":true,"type":"string"},{"default":"discussion_number","description":"no description","in":"path","name":"discussion_number","required":true,"type":"string"},{"default":"comment_number","description":"no description","in":"path","name":"comment_number","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-teams"],"x-swgg-descriptionLineList":["[Team Discussion Comments](https://developer.github.com/v3/teams/discussion_comments/#get-a-single-comment) - Get a single comment","","**Note:** The team discussions API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.echo-preview+json","```","","**Note:** The [reactions API](https://developer.github.com/v3/reactions/) is available for developers to preview. The ```url``` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions. See the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details. To receive the ```reactions``` object in the response for this endpoint you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.squirrel-girl-preview","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","Get a specific comment on a team discussion. OAuth access tokens require the ```read:discussion``` [scope](https://developer.github.com/apps/building-oauth-apps/scopes-for-oauth-apps/)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Team Discussion Comments](https://developer.github.com/v3/teams/discussion_comments/#get-a-single-comment) - Get a single comment","x-swgg-tags0":"github-teams"},"patch":{"consumes":[],"description":"[Team Discussion Comments](https://developer.github.com/v3/teams/discussion_comments/#edit-a-comment) - Edit a comment\n\n**Note:** The team discussions API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.echo-preview+json\n```\n\n**Note:** The [reactions API](https://developer.github.com/v3/reactions/) is available for developers to preview. The ```url``` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions. See the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details. To receive the ```reactions``` object in the response for this endpoint you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.squirrel-girl-preview\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nEdits the body text of a discussion comment. OAuth access tokens require the ```write:discussion``` [scope](https://developer.github.com/apps/building-oauth-apps/scopes-for-oauth-apps/).","operationId":"_2Fteams_2F_7Bteam_id_7D_2Fdiscussions_2F_7Bdiscussion_number_7D_2Fcomments_2F_7Bcomment_number_7D_20PATCH","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.echo-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.echo-preview+json","application/vnd.github.squirrel-girl-preview","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"team_id","description":"no description","in":"path","name":"team_id","required":true,"type":"string"},{"default":"discussion_number","description":"no description","in":"path","name":"discussion_number","required":true,"type":"string"},{"default":"comment_number","description":"no description","in":"path","name":"comment_number","required":true,"type":"string"},{"description":"**Required**. The discussion comment's body text.","in":"body","name":"body","required":true,"schema":{"$ref":"#/definitions/_2Fteams_2F_7Bteam_id_7D_2Fdiscussions_2F_7Bdiscussion_number_7D_2Fcomments_2F_7Bcomment_number_7D_20PATCH.body"},"x-swgg-descriptionLineList":["**Required**. The discussion comment's body text."]}],"responses":{"default":{"description":"default response"}},"tags":["github-teams"],"x-swgg-descriptionLineList":["[Team Discussion Comments](https://developer.github.com/v3/teams/discussion_comments/#edit-a-comment) - Edit a comment","","**Note:** The team discussions API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.echo-preview+json","```","","**Note:** The [reactions API](https://developer.github.com/v3/reactions/) is available for developers to preview. The ```url``` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions. See the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details. To receive the ```reactions``` object in the response for this endpoint you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.squirrel-girl-preview","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","Edits the body text of a discussion comment. OAuth access tokens require the ```write:discussion``` [scope](https://developer.github.com/apps/building-oauth-apps/scopes-for-oauth-apps/)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Team Discussion Comments](https://developer.github.com/v3/teams/discussion_comments/#edit-a-comment) - Edit a comment","x-swgg-tags0":"github-teams"}},"/teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions":{"get":{"consumes":[],"description":"[Reactions](https://developer.github.com/v3/reactions/#list-reactions-for-a-team-discussion-comment) - List reactions for a team discussion comment\n\n**Note:** The team discussions API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.echo-preview+json\n```\n\n**Note:** APIs for managing reactions are currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.squirrel-girl-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nList the reactions to a [team discussion comment](https://developer.github.com/v3/teams/discussion_comments/). OAuth access tokens require the ```read:discussion``` [scope](https://developer.github.com/apps/building-oauth-apps/scopes-for-oauth-apps/).","operationId":"_2Fteams_2F_7Bteam_id_7D_2Fdiscussions_2F_7Bdiscussion_number_7D_2Fcomments_2F_7Bcomment_number_7D_2Freactions_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.squirrel-girl-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.squirrel-girl-preview+json","application/vnd.github.jean-grey-preview+json","application/vnd.github.echo-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"team_id","description":"no description","in":"path","name":"team_id","required":true,"type":"string"},{"default":"discussion_number","description":"no description","in":"path","name":"discussion_number","required":true,"type":"string"},{"default":"comment_number","description":"no description","in":"path","name":"comment_number","required":true,"type":"string"},{"description":"Returns a single [reaction type](https://developer.github.com/v3/reactions/#reaction-types). Omit this parameter to list all reactions to a team discussion comment.","in":"query","name":"content","type":"string","x-swgg-descriptionLineList":["Returns a single [reaction type](https://developer.github.com/v3/reactions/#reaction-types). Omit this parameter to list all reactions to a team discussion comment."]}],"responses":{"default":{"description":"default response"}},"tags":["github-reactions"],"x-swgg-descriptionLineList":["[Reactions](https://developer.github.com/v3/reactions/#list-reactions-for-a-team-discussion-comment) - List reactions for a team discussion comment","","**Note:** The team discussions API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.echo-preview+json","```","","**Note:** APIs for managing reactions are currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.squirrel-girl-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","List the reactions to a [team discussion comment](https://developer.github.com/v3/teams/discussion_comments/). OAuth access tokens require the ```read:discussion``` [scope](https://developer.github.com/apps/building-oauth-apps/scopes-for-oauth-apps/)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Reactions](https://developer.github.com/v3/reactions/#list-reactions-for-a-team-discussion-comment) - List reactions for a team discussion comment","x-swgg-tags0":"github-reactions"},"post":{"consumes":[],"description":"[Reactions](https://developer.github.com/v3/reactions/#create-reaction-for-a-team-discussion-comment) - Create reaction for a team discussion comment\n\n**Note:** The team discussions API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.echo-preview+json\n```\n\n**Note:** APIs for managing reactions are currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.squirrel-girl-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nCreate a reaction to a [team discussion comment](https://developer.github.com/v3/teams/discussion_comments/). OAuth access tokens require the ```read:discussion``` [scope](https://developer.github.com/apps/building-oauth-apps/scopes-for-oauth-apps/). A response with a ```Status: 200 OK``` means that you already added the reaction type to this team discussion comment.","operationId":"_2Fteams_2F_7Bteam_id_7D_2Fdiscussions_2F_7Bdiscussion_number_7D_2Fcomments_2F_7Bcomment_number_7D_2Freactions_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.squirrel-girl-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.squirrel-girl-preview+json","application/vnd.github.jean-grey-preview+json","application/vnd.github.echo-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"team_id","description":"no description","in":"path","name":"team_id","required":true,"type":"string"},{"default":"discussion_number","description":"no description","in":"path","name":"discussion_number","required":true,"type":"string"},{"default":"comment_number","description":"no description","in":"path","name":"comment_number","required":true,"type":"string"},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Fteams_2F_7Bteam_id_7D_2Fdiscussions_2F_7Bdiscussion_number_7D_2Fcomments_2F_7Bcomment_number_7D_2Freactions_20POST.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-reactions"],"x-swgg-descriptionLineList":["[Reactions](https://developer.github.com/v3/reactions/#create-reaction-for-a-team-discussion-comment) - Create reaction for a team discussion comment","","**Note:** The team discussions API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.echo-preview+json","```","","**Note:** APIs for managing reactions are currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.squirrel-girl-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","Create a reaction to a [team discussion comment](https://developer.github.com/v3/teams/discussion_comments/). OAuth access tokens require the ```read:discussion``` [scope](https://developer.github.com/apps/building-oauth-apps/scopes-for-oauth-apps/). A response with a ```Status: 200 OK``` means that you already added the reaction type to this team discussion comment."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Reactions](https://developer.github.com/v3/reactions/#create-reaction-for-a-team-discussion-comment) - Create reaction for a team discussion comment","x-swgg-tags0":"github-reactions"}},"/teams/{team_id}/discussions/{discussion_number}/reactions":{"get":{"consumes":[],"description":"[Reactions](https://developer.github.com/v3/reactions/#list-reactions-for-a-team-discussion) - List reactions for a team discussion\n\n**Note:** The team discussions API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.echo-preview+json\n```\n\n**Note:** APIs for managing reactions are currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.squirrel-girl-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nList the reactions to a [team discussion](https://developer.github.com/v3/teams/discussions/). OAuth access tokens require the ```read:discussion``` [scope](https://developer.github.com/apps/building-oauth-apps/scopes-for-oauth-apps/).","operationId":"_2Fteams_2F_7Bteam_id_7D_2Fdiscussions_2F_7Bdiscussion_number_7D_2Freactions_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.squirrel-girl-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.squirrel-girl-preview+json","application/vnd.github.jean-grey-preview+json","application/vnd.github.echo-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"team_id","description":"no description","in":"path","name":"team_id","required":true,"type":"string"},{"default":"discussion_number","description":"no description","in":"path","name":"discussion_number","required":true,"type":"string"},{"description":"Returns a single [reaction type](https://developer.github.com/v3/reactions/#reaction-types). Omit this parameter to list all reactions to a team discussion.","in":"query","name":"content","type":"string","x-swgg-descriptionLineList":["Returns a single [reaction type](https://developer.github.com/v3/reactions/#reaction-types). Omit this parameter to list all reactions to a team discussion."]}],"responses":{"default":{"description":"default response"}},"tags":["github-reactions"],"x-swgg-descriptionLineList":["[Reactions](https://developer.github.com/v3/reactions/#list-reactions-for-a-team-discussion) - List reactions for a team discussion","","**Note:** The team discussions API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.echo-preview+json","```","","**Note:** APIs for managing reactions are currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.squirrel-girl-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","List the reactions to a [team discussion](https://developer.github.com/v3/teams/discussions/). OAuth access tokens require the ```read:discussion``` [scope](https://developer.github.com/apps/building-oauth-apps/scopes-for-oauth-apps/)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Reactions](https://developer.github.com/v3/reactions/#list-reactions-for-a-team-discussion) - List reactions for a team discussion","x-swgg-tags0":"github-reactions"},"post":{"consumes":[],"description":"[Reactions](https://developer.github.com/v3/reactions/#create-reaction-for-a-team-discussion) - Create reaction for a team discussion\n\n**Note:** The team discussions API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.echo-preview+json\n```\n\n**Note:** APIs for managing reactions are currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.squirrel-girl-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nCreate a reaction to a [team discussion](https://developer.github.com/v3/teams/discussions/). OAuth access tokens require the ```read:discussion``` [scope](https://developer.github.com/apps/building-oauth-apps/scopes-for-oauth-apps/). A response with a ```Status: 200 OK``` means that you already added the reaction type to this team discussion.","operationId":"_2Fteams_2F_7Bteam_id_7D_2Fdiscussions_2F_7Bdiscussion_number_7D_2Freactions_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.squirrel-girl-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.squirrel-girl-preview+json","application/vnd.github.jean-grey-preview+json","application/vnd.github.echo-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"team_id","description":"no description","in":"path","name":"team_id","required":true,"type":"string"},{"default":"discussion_number","description":"no description","in":"path","name":"discussion_number","required":true,"type":"string"},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Fteams_2F_7Bteam_id_7D_2Fdiscussions_2F_7Bdiscussion_number_7D_2Freactions_20POST.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-reactions"],"x-swgg-descriptionLineList":["[Reactions](https://developer.github.com/v3/reactions/#create-reaction-for-a-team-discussion) - Create reaction for a team discussion","","**Note:** The team discussions API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.echo-preview+json","```","","**Note:** APIs for managing reactions are currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.squirrel-girl-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","Create a reaction to a [team discussion](https://developer.github.com/v3/teams/discussions/). OAuth access tokens require the ```read:discussion``` [scope](https://developer.github.com/apps/building-oauth-apps/scopes-for-oauth-apps/). A response with a ```Status: 200 OK``` means that you already added the reaction type to this team discussion."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Reactions](https://developer.github.com/v3/reactions/#create-reaction-for-a-team-discussion) - Create reaction for a team discussion","x-swgg-tags0":"github-reactions"}},"/user":{"get":{"consumes":[],"description":"[Users](https://developer.github.com/v3/users/#get-the-authenticated-user) - Get the authenticated user","operationId":"_2Fuser_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hagar-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.hagar-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]}],"responses":{"default":{"description":"default response"}},"tags":["github-users"],"x-swgg-descriptionLineList":["[Users](https://developer.github.com/v3/users/#get-the-authenticated-user) - Get the authenticated user"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Users](https://developer.github.com/v3/users/#get-the-authenticated-user) - Get the authenticated user","x-swgg-tags0":"github-users"},"patch":{"consumes":[],"description":"[Users](https://developer.github.com/v3/users/#update-the-authenticated-user) - Update the authenticated user","operationId":"_2Fuser_20PATCH","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hagar-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.hagar-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Fuser_20PATCH.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-users"],"x-swgg-descriptionLineList":["[Users](https://developer.github.com/v3/users/#update-the-authenticated-user) - Update the authenticated user"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Users](https://developer.github.com/v3/users/#update-the-authenticated-user) - Update the authenticated user","x-swgg-tags0":"github-users"}},"/user/blocks":{"get":{"consumes":[],"description":"[Block Another User](https://developer.github.com/v3/users/blocking/#list-blocked-users) - List blocked users\n\nList the users you've blocked on your personal account.","operationId":"_2Fuser_2Fblocks_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.giant-sentry-fist-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.giant-sentry-fist-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]}],"responses":{"default":{"description":"default response"}},"tags":["github-users"],"x-swgg-descriptionLineList":["[Block Another User](https://developer.github.com/v3/users/blocking/#list-blocked-users) - List blocked users","","List the users you've blocked on your personal account."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Block Another User](https://developer.github.com/v3/users/blocking/#list-blocked-users) - List blocked users","x-swgg-tags0":"github-users"}},"/user/blocks/{username}":{"delete":{"consumes":[],"description":"[Block Another User](https://developer.github.com/v3/users/blocking/#unblock-a-user) - Unblock a user","operationId":"_2Fuser_2Fblocks_2F_7Busername_7D_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.giant-sentry-fist-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.giant-sentry-fist-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"username","description":"no description","in":"path","name":"username","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-users"],"x-swgg-descriptionLineList":["[Block Another User](https://developer.github.com/v3/users/blocking/#unblock-a-user) - Unblock a user"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Block Another User](https://developer.github.com/v3/users/blocking/#unblock-a-user) - Unblock a user","x-swgg-tags0":"github-users"},"get":{"consumes":[],"description":"[Block Another User](https://developer.github.com/v3/users/blocking/#check-whether-youve-blocked-a-user) - Check whether you've blocked a user","operationId":"_2Fuser_2Fblocks_2F_7Busername_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.giant-sentry-fist-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.giant-sentry-fist-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"username","description":"no description","in":"path","name":"username","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-users"],"x-swgg-descriptionLineList":["[Block Another User](https://developer.github.com/v3/users/blocking/#check-whether-youve-blocked-a-user) - Check whether you've blocked a user"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Block Another User](https://developer.github.com/v3/users/blocking/#check-whether-youve-blocked-a-user) - Check whether you've blocked a user","x-swgg-tags0":"github-users"},"put":{"consumes":[],"description":"[Block Another User](https://developer.github.com/v3/users/blocking/#block-a-user) - Block a user","operationId":"_2Fuser_2Fblocks_2F_7Busername_7D_20PUT","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.giant-sentry-fist-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.giant-sentry-fist-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"username","description":"no description","in":"path","name":"username","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-users"],"x-swgg-descriptionLineList":["[Block Another User](https://developer.github.com/v3/users/blocking/#block-a-user) - Block a user"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Block Another User](https://developer.github.com/v3/users/blocking/#block-a-user) - Block a user","x-swgg-tags0":"github-users"}},"/user/email/visibility":{"patch":{"consumes":[],"description":"[User Emails](https://developer.github.com/v3/users/emails/#toggle-primary-email-visibility) - Toggle primary email visibility","operationId":"_2Fuser_2Femail_2Fvisibility_20PATCH","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]}],"responses":{"default":{"description":"default response"}},"tags":["github-users"],"x-swgg-descriptionLineList":["[User Emails](https://developer.github.com/v3/users/emails/#toggle-primary-email-visibility) - Toggle primary email visibility"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[User Emails](https://developer.github.com/v3/users/emails/#toggle-primary-email-visibility) - Toggle primary email visibility","x-swgg-tags0":"github-users"}},"/user/emails":{"delete":{"consumes":[],"description":"[User Emails](https://developer.github.com/v3/users/emails/#delete-email-addresses) - Delete email address(es)","operationId":"_2Fuser_2Femails_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]}],"responses":{"default":{"description":"default response"}},"tags":["github-users"],"x-swgg-descriptionLineList":["[User Emails](https://developer.github.com/v3/users/emails/#delete-email-addresses) - Delete email address(es)"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[User Emails](https://developer.github.com/v3/users/emails/#delete-email-addresses) - Delete email address(es)","x-swgg-tags0":"github-users"},"get":{"consumes":[],"description":"[User Emails](https://developer.github.com/v3/users/emails/#list-email-addresses-for-a-user) - List email addresses for a user","operationId":"_2Fuser_2Femails_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]}],"responses":{"default":{"description":"default response"}},"tags":["github-users"],"x-swgg-descriptionLineList":["[User Emails](https://developer.github.com/v3/users/emails/#list-email-addresses-for-a-user) - List email addresses for a user"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[User Emails](https://developer.github.com/v3/users/emails/#list-email-addresses-for-a-user) - List email addresses for a user","x-swgg-tags0":"github-users"},"post":{"consumes":[],"description":"[User Emails](https://developer.github.com/v3/users/emails/#add-email-addresses) - Add email address(es)","operationId":"_2Fuser_2Femails_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]}],"responses":{"default":{"description":"default response"}},"tags":["github-users"],"x-swgg-descriptionLineList":["[User Emails](https://developer.github.com/v3/users/emails/#add-email-addresses) - Add email address(es)"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[User Emails](https://developer.github.com/v3/users/emails/#add-email-addresses) - Add email address(es)","x-swgg-tags0":"github-users"}},"/user/following/{username}":{"delete":{"consumes":[],"description":"[User Followers](https://developer.github.com/v3/users/followers/#unfollow-a-user) - Unfollow a user","operationId":"_2Fuser_2Ffollowing_2F_7Busername_7D_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"username","description":"no description","in":"path","name":"username","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-users"],"x-swgg-descriptionLineList":["[User Followers](https://developer.github.com/v3/users/followers/#unfollow-a-user) - Unfollow a user"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[User Followers](https://developer.github.com/v3/users/followers/#unfollow-a-user) - Unfollow a user","x-swgg-tags0":"github-users"},"get":{"consumes":[],"description":"[User Followers](https://developer.github.com/v3/users/followers/#check-if-you-are-following-a-user) - Check if you are following a user","operationId":"_2Fuser_2Ffollowing_2F_7Busername_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"username","description":"no description","in":"path","name":"username","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-users"],"x-swgg-descriptionLineList":["[User Followers](https://developer.github.com/v3/users/followers/#check-if-you-are-following-a-user) - Check if you are following a user"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[User Followers](https://developer.github.com/v3/users/followers/#check-if-you-are-following-a-user) - Check if you are following a user","x-swgg-tags0":"github-users"},"put":{"consumes":[],"description":"[User Followers](https://developer.github.com/v3/users/followers/#follow-a-user) - Follow a user","operationId":"_2Fuser_2Ffollowing_2F_7Busername_7D_20PUT","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"username","description":"no description","in":"path","name":"username","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-users"],"x-swgg-descriptionLineList":["[User Followers](https://developer.github.com/v3/users/followers/#follow-a-user) - Follow a user"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[User Followers](https://developer.github.com/v3/users/followers/#follow-a-user) - Follow a user","x-swgg-tags0":"github-users"}},"/user/gpg_keys":{"get":{"consumes":[],"description":"[User GPG Keys](https://developer.github.com/v3/users/gpg_keys/#list-your-gpg-keys) - List your GPG keys","operationId":"_2Fuser_2Fgpg_keys_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]}],"responses":{"default":{"description":"default response"}},"tags":["github-users"],"x-swgg-descriptionLineList":["[User GPG Keys](https://developer.github.com/v3/users/gpg_keys/#list-your-gpg-keys) - List your GPG keys"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[User GPG Keys](https://developer.github.com/v3/users/gpg_keys/#list-your-gpg-keys) - List your GPG keys","x-swgg-tags0":"github-users"},"post":{"consumes":[],"description":"[User GPG Keys](https://developer.github.com/v3/users/gpg_keys/#create-a-gpg-key) - Create a GPG key\n\nCreates a GPG key. Requires that you are authenticated via Basic Auth, or OAuth with at least ```write:gpg_key``` [scope](https://developer.github.com/apps/building-integrations/setting-up-and-registering-oauth-apps/about-scopes-for-oauth-apps/).","operationId":"_2Fuser_2Fgpg_keys_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Fuser_2Fgpg_keys_20POST.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-users"],"x-swgg-descriptionLineList":["[User GPG Keys](https://developer.github.com/v3/users/gpg_keys/#create-a-gpg-key) - Create a GPG key","","Creates a GPG key. Requires that you are authenticated via Basic Auth, or OAuth with at least ```write:gpg_key``` [scope](https://developer.github.com/apps/building-integrations/setting-up-and-registering-oauth-apps/about-scopes-for-oauth-apps/)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[User GPG Keys](https://developer.github.com/v3/users/gpg_keys/#create-a-gpg-key) - Create a GPG key","x-swgg-tags0":"github-users"}},"/user/gpg_keys/{id}":{"delete":{"consumes":[],"description":"[User GPG Keys](https://developer.github.com/v3/users/gpg_keys/#delete-a-gpg-key) - Delete a GPG key\n\nRemoves a GPG key. Requires that you are authenticated via Basic Auth or via OAuth with at least ```admin:gpg_key``` [scope](https://developer.github.com/apps/building-integrations/setting-up-and-registering-oauth-apps/about-scopes-for-oauth-apps/).","operationId":"_2Fuser_2Fgpg_keys_2F_7Bid_7D_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-users"],"x-swgg-descriptionLineList":["[User GPG Keys](https://developer.github.com/v3/users/gpg_keys/#delete-a-gpg-key) - Delete a GPG key","","Removes a GPG key. Requires that you are authenticated via Basic Auth or via OAuth with at least ```admin:gpg_key``` [scope](https://developer.github.com/apps/building-integrations/setting-up-and-registering-oauth-apps/about-scopes-for-oauth-apps/)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[User GPG Keys](https://developer.github.com/v3/users/gpg_keys/#delete-a-gpg-key) - Delete a GPG key","x-swgg-tags0":"github-users"},"get":{"consumes":[],"description":"[User GPG Keys](https://developer.github.com/v3/users/gpg_keys/#get-a-single-gpg-key) - Get a single GPG key\n\nView extended details for a single GPG key. Requires that you are authenticated via Basic Auth or via OAuth with at least ```read:gpg_key``` [scope](https://developer.github.com/apps/building-integrations/setting-up-and-registering-oauth-apps/about-scopes-for-oauth-apps/).","operationId":"_2Fuser_2Fgpg_keys_2F_7Bid_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-users"],"x-swgg-descriptionLineList":["[User GPG Keys](https://developer.github.com/v3/users/gpg_keys/#get-a-single-gpg-key) - Get a single GPG key","","View extended details for a single GPG key. Requires that you are authenticated via Basic Auth or via OAuth with at least ```read:gpg_key``` [scope](https://developer.github.com/apps/building-integrations/setting-up-and-registering-oauth-apps/about-scopes-for-oauth-apps/)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[User GPG Keys](https://developer.github.com/v3/users/gpg_keys/#get-a-single-gpg-key) - Get a single GPG key","x-swgg-tags0":"github-users"}},"/user/installations":{"get":{"consumes":[],"description":"[GitHub Apps](https://developer.github.com/v3/apps/#list-installations-for-user) - List installations for user\n\nList installations that are accessible to the authenticated user.","operationId":"_2Fuser_2Finstallations_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.machine-man-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.machine-man-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"...","description":"no description","in":"query","name":"access_token","type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-apps"],"x-swgg-descriptionLineList":["[GitHub Apps](https://developer.github.com/v3/apps/#list-installations-for-user) - List installations for user","","List installations that are accessible to the authenticated user."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[GitHub Apps](https://developer.github.com/v3/apps/#list-installations-for-user) - List installations for user","x-swgg-tags0":"github-apps"}},"/user/installations/{installation_id}/repositories":{"get":{"consumes":[],"description":"[Installations](https://developer.github.com/v3/apps/installations/#list-repositories-accessible-to-the-user-for-an-installation) - List repositories accessible to the user for an installation\n\nList repositories that are accessible to the authenticated user for an installation.","operationId":"_2Fuser_2Finstallations_2F_7Binstallation_id_7D_2Frepositories_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.machine-man-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.machine-man-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"installation_id","description":"no description","in":"path","name":"installation_id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-apps"],"x-swgg-descriptionLineList":["[Installations](https://developer.github.com/v3/apps/installations/#list-repositories-accessible-to-the-user-for-an-installation) - List repositories accessible to the user for an installation","","List repositories that are accessible to the authenticated user for an installation."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Installations](https://developer.github.com/v3/apps/installations/#list-repositories-accessible-to-the-user-for-an-installation) - List repositories accessible to the user for an installation","x-swgg-tags0":"github-apps"}},"/user/installations/{installation_id}/repositories/{repository_id}":{"delete":{"consumes":[],"description":"[Installations](https://developer.github.com/v3/apps/installations/#remove-repository-from-installation) - Remove repository from installation\n\nRemove a single repository from an installation.","operationId":"_2Fuser_2Finstallations_2F_7Binstallation_id_7D_2Frepositories_2F_7Brepository_id_7D_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.machine-man-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.machine-man-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"installation_id","description":"no description","in":"path","name":"installation_id","required":true,"type":"string"},{"default":"repository_id","description":"no description","in":"path","name":"repository_id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-apps"],"x-swgg-descriptionLineList":["[Installations](https://developer.github.com/v3/apps/installations/#remove-repository-from-installation) - Remove repository from installation","","Remove a single repository from an installation."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Installations](https://developer.github.com/v3/apps/installations/#remove-repository-from-installation) - Remove repository from installation","x-swgg-tags0":"github-apps"},"put":{"consumes":[],"description":"[Installations](https://developer.github.com/v3/apps/installations/#add-repository-to-installation) - Add repository to installation\n\nAdd a single repository to an installation.","operationId":"_2Fuser_2Finstallations_2F_7Binstallation_id_7D_2Frepositories_2F_7Brepository_id_7D_20PUT","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.machine-man-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.machine-man-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"installation_id","description":"no description","in":"path","name":"installation_id","required":true,"type":"string"},{"default":"repository_id","description":"no description","in":"path","name":"repository_id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-apps"],"x-swgg-descriptionLineList":["[Installations](https://developer.github.com/v3/apps/installations/#add-repository-to-installation) - Add repository to installation","","Add a single repository to an installation."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Installations](https://developer.github.com/v3/apps/installations/#add-repository-to-installation) - Add repository to installation","x-swgg-tags0":"github-apps"}},"/user/keys":{"get":{"consumes":[],"description":"[User Public Keys](https://developer.github.com/v3/users/keys/#list-your-public-keys) - List your public keys","operationId":"_2Fuser_2Fkeys_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]}],"responses":{"default":{"description":"default response"}},"tags":["github-users"],"x-swgg-descriptionLineList":["[User Public Keys](https://developer.github.com/v3/users/keys/#list-your-public-keys) - List your public keys"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[User Public Keys](https://developer.github.com/v3/users/keys/#list-your-public-keys) - List your public keys","x-swgg-tags0":"github-users"},"post":{"consumes":[],"description":"[User Public Keys](https://developer.github.com/v3/users/keys/#create-a-public-key) - Create a public key\n\nCreates a public key. Requires that you are authenticated via Basic Auth, or OAuth with at least ```write:public_key``` [scope](https://developer.github.com/apps/building-integrations/setting-up-and-registering-oauth-apps/about-scopes-for-oauth-apps/).","operationId":"_2Fuser_2Fkeys_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Fuser_2Fkeys_20POST.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-users"],"x-swgg-descriptionLineList":["[User Public Keys](https://developer.github.com/v3/users/keys/#create-a-public-key) - Create a public key","","Creates a public key. Requires that you are authenticated via Basic Auth, or OAuth with at least ```write:public_key``` [scope](https://developer.github.com/apps/building-integrations/setting-up-and-registering-oauth-apps/about-scopes-for-oauth-apps/)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[User Public Keys](https://developer.github.com/v3/users/keys/#create-a-public-key) - Create a public key","x-swgg-tags0":"github-users"}},"/user/keys/{id}":{"delete":{"consumes":[],"description":"[User Public Keys](https://developer.github.com/v3/users/keys/#delete-a-public-key) - Delete a public key\n\nRemoves a public key. Requires that you are authenticated via Basic Auth or via OAuth with at least ```admin:public_key``` [scope](https://developer.github.com/apps/building-integrations/setting-up-and-registering-oauth-apps/about-scopes-for-oauth-apps/).","operationId":"_2Fuser_2Fkeys_2F_7Bid_7D_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-users"],"x-swgg-descriptionLineList":["[User Public Keys](https://developer.github.com/v3/users/keys/#delete-a-public-key) - Delete a public key","","Removes a public key. Requires that you are authenticated via Basic Auth or via OAuth with at least ```admin:public_key``` [scope](https://developer.github.com/apps/building-integrations/setting-up-and-registering-oauth-apps/about-scopes-for-oauth-apps/)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[User Public Keys](https://developer.github.com/v3/users/keys/#delete-a-public-key) - Delete a public key","x-swgg-tags0":"github-users"},"get":{"consumes":[],"description":"[User Public Keys](https://developer.github.com/v3/users/keys/#get-a-single-public-key) - Get a single public key\n\nView extended details for a single public key. Requires that you are authenticated via Basic Auth or via OAuth with at least ```read:public_key``` [scope](https://developer.github.com/apps/building-integrations/setting-up-and-registering-oauth-apps/about-scopes-for-oauth-apps/).","operationId":"_2Fuser_2Fkeys_2F_7Bid_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"id","description":"no description","in":"path","name":"id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-users"],"x-swgg-descriptionLineList":["[User Public Keys](https://developer.github.com/v3/users/keys/#get-a-single-public-key) - Get a single public key","","View extended details for a single public key. Requires that you are authenticated via Basic Auth or via OAuth with at least ```read:public_key``` [scope](https://developer.github.com/apps/building-integrations/setting-up-and-registering-oauth-apps/about-scopes-for-oauth-apps/)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[User Public Keys](https://developer.github.com/v3/users/keys/#get-a-single-public-key) - Get a single public key","x-swgg-tags0":"github-users"}},"/user/marketplace_purchases":{"get":{"consumes":[],"description":"[GitHub Marketplace](https://developer.github.com/v3/apps/marketplace/#get-a-users-marketplace-purchases) - Get a user's Marketplace purchases","operationId":"_2Fuser_2Fmarketplace_purchases_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.valkyrie-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.valkyrie-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]}],"responses":{"default":{"description":"default response"}},"tags":["github-apps"],"x-swgg-descriptionLineList":["[GitHub Marketplace](https://developer.github.com/v3/apps/marketplace/#get-a-users-marketplace-purchases) - Get a user's Marketplace purchases"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[GitHub Marketplace](https://developer.github.com/v3/apps/marketplace/#get-a-users-marketplace-purchases) - Get a user's Marketplace purchases","x-swgg-tags0":"github-apps"}},"/user/memberships/orgs":{"get":{"consumes":[],"description":"[Organization Members](https://developer.github.com/v3/orgs/members/#list-your-organization-memberships) - List your organization memberships","operationId":"_2Fuser_2Fmemberships_2Forgs_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.dazzler-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.dazzler-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"description":"Indicates the state of the memberships to return. Can be either ```active``` or ```pending```. If not specified, the API returns both active and pending memberships.","in":"query","name":"state","type":"string","x-swgg-descriptionLineList":["Indicates the state of the memberships to return. Can be either ```active``` or ```pending```. If not specified, the API returns both active and pending memberships."]}],"responses":{"default":{"description":"default response"}},"tags":["github-orgs"],"x-swgg-descriptionLineList":["[Organization Members](https://developer.github.com/v3/orgs/members/#list-your-organization-memberships) - List your organization memberships"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Organization Members](https://developer.github.com/v3/orgs/members/#list-your-organization-memberships) - List your organization memberships","x-swgg-tags0":"github-orgs"}},"/user/memberships/orgs/{org}":{"get":{"consumes":[],"description":"[Organization Members](https://developer.github.com/v3/orgs/members/#get-your-organization-membership) - Get your organization membership","operationId":"_2Fuser_2Fmemberships_2Forgs_2F_7Borg_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.dazzler-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.dazzler-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"org","description":"no description","in":"path","name":"org","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-orgs"],"x-swgg-descriptionLineList":["[Organization Members](https://developer.github.com/v3/orgs/members/#get-your-organization-membership) - Get your organization membership"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Organization Members](https://developer.github.com/v3/orgs/members/#get-your-organization-membership) - Get your organization membership","x-swgg-tags0":"github-orgs"},"patch":{"consumes":[],"description":"[Organization Members](https://developer.github.com/v3/orgs/members/#edit-your-organization-membership) - Edit your organization membership","operationId":"_2Fuser_2Fmemberships_2Forgs_2F_7Borg_7D_20PATCH","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.dazzler-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.dazzler-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"org","description":"no description","in":"path","name":"org","required":true,"type":"string"},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Fuser_2Fmemberships_2Forgs_2F_7Borg_7D_20PATCH.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-orgs"],"x-swgg-descriptionLineList":["[Organization Members](https://developer.github.com/v3/orgs/members/#edit-your-organization-membership) - Edit your organization membership"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Organization Members](https://developer.github.com/v3/orgs/members/#edit-your-organization-membership) - Edit your organization membership","x-swgg-tags0":"github-orgs"}},"/user/orgs":{"get":{"consumes":[],"description":"[Organizations](https://developer.github.com/v3/orgs/#list-your-organizations) - List your organizations\n\nList organizations for the authenticated user.\n\n####  OAuth scope requirements\n\nThis only lists organizations that your authorization allows you to operate on in some way (e.g., you can list teams with ```read:org``` scope, you can publicize your organization membership with ```user``` scope, etc.). Therefore, this API requires at least ```user``` or ```read:org``` scope. OAuth requests with insufficient scope receive a ```403 Forbidden``` response.","operationId":"_2Fuser_2Forgs_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]}],"responses":{"default":{"description":"default response"}},"tags":["github-orgs"],"x-swgg-descriptionLineList":["[Organizations](https://developer.github.com/v3/orgs/#list-your-organizations) - List your organizations","","List organizations for the authenticated user.","","####  OAuth scope requirements","","This only lists organizations that your authorization allows you to operate on in some way (e.g., you can list teams with ```read:org``` scope, you can publicize your organization membership with ```user``` scope, etc.). Therefore, this API requires at least ```user``` or ```read:org``` scope. OAuth requests with insufficient scope receive a ```403 Forbidden``` response."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Organizations](https://developer.github.com/v3/orgs/#list-your-organizations) - List your organizations","x-swgg-tags0":"github-orgs"}},"/user/public_emails":{"get":{"consumes":[],"description":"[User Emails](https://developer.github.com/v3/users/emails/#list-public-email-addresses-for-a-user) - List public email addresses for a user","operationId":"_2Fuser_2Fpublic_emails_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]}],"responses":{"default":{"description":"default response"}},"tags":["github-users"],"x-swgg-descriptionLineList":["[User Emails](https://developer.github.com/v3/users/emails/#list-public-email-addresses-for-a-user) - List public email addresses for a user"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[User Emails](https://developer.github.com/v3/users/emails/#list-public-email-addresses-for-a-user) - List public email addresses for a user","x-swgg-tags0":"github-users"}},"/user/repos":{"get":{"consumes":[],"description":"[Repositories](https://developer.github.com/v3/repos/#list-your-repositories) - List your repositories\n\nList repositories that are accessible to the authenticated user.\n\nThis includes repositories owned by the authenticated user, repositories where the authenticated user is a collaborator, and repositories that the authenticated user has access to through an organization membership.","operationId":"_2Fuser_2Frepos_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.nightshade-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.mercy-preview+json","application/vnd.github.nightshade-preview+json","application/vnd.github.jean-grey-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"all","description":"Can be one of ```all```, ```public```, or ```private```. Default: ```all```","enum":["all","public","private"],"in":"query","name":"visibility","type":"string","x-swgg-descriptionLineList":["Can be one of ```all```, ```public```, or ```private```. Default: ```all```"]},{"description":"Comma-separated list of values. Can include:\n* ```owner```: Repositories that are owned by the authenticated user.\n* ```collaborator```: Repositories that the user has been added to as a collaborator.\n* ```organization_member```: Repositories that the user has access to through being a member of an organization. This includes every repository on every team that the user is on.\n\nDefault: ```owner,collaborator,organization_member```","enum":["owner","collaborator","organization_member"],"in":"query","items":{"type":"string"},"name":"affiliation","type":"array","x-swgg-descriptionLineList":["Comma-separated list of values. Can include:","* ```owner```: Repositories that are owned by the authenticated user.","* ```collaborator```: Repositories that the user has been added to as a collaborator.","* ```organization_member```: Repositories that the user has access to through being a member of an organization. This includes every repository on every team that the user is on.","","Default: ```owner,collaborator,organization_member```"]},{"default":"all","description":"Can be one of ```all```, ```owner```, ```public```, ```private```, ```member```. Default: ```all```\n\nWill cause a ```422``` error if used in the same request as **visibility** or **affiliation**.","enum":["422","all","owner","public","private","member"],"in":"query","name":"type","type":"string","x-swgg-descriptionLineList":["Can be one of ```all```, ```owner```, ```public```, ```private```, ```member```. Default: ```all```","","Will cause a ```422``` error if used in the same request as **visibility** or **affiliation**."]},{"default":"full_name","description":"Can be one of ```created```, ```updated```, ```pushed```, ```full_name```. Default: ```full_name```","enum":["created","updated","pushed","full_name"],"in":"query","name":"sort","type":"string","x-swgg-descriptionLineList":["Can be one of ```created```, ```updated```, ```pushed```, ```full_name```. Default: ```full_name```"]},{"default":"full_name","description":"Can be one of ```asc``` or ```desc```. Default: when using ```full_name```: ```asc```; otherwise ```desc```","enum":["asc","desc","full_name"],"in":"query","name":"direction","type":"string","x-swgg-descriptionLineList":["Can be one of ```asc``` or ```desc```. Default: when using ```full_name```: ```asc```; otherwise ```desc```"]}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Repositories](https://developer.github.com/v3/repos/#list-your-repositories) - List your repositories","","List repositories that are accessible to the authenticated user.","","This includes repositories owned by the authenticated user, repositories where the authenticated user is a collaborator, and repositories that the authenticated user has access to through an organization membership."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Repositories](https://developer.github.com/v3/repos/#list-your-repositories) - List your repositories","x-swgg-tags0":"github-repos"},"post":{"consumes":[],"description":"[Repositories](https://developer.github.com/v3/repos/#create) - Create\n\nCreate a new repository for the authenticated user.\n\n**Note**: There are two endpoints for creating a repository: one to create a repository on a user account, and one to create a repository in an organization. The organization endpoint is fully enabled for [GitHub Apps](https://developer.github.com/v3/apps/available-endpoints/), whereas the user endpoint is enabled only for [user-to-server requests](https://developer.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#user-to-server-requests).","operationId":"_2Fuser_2Frepos_20POST","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.nightshade-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.mercy-preview+json","application/vnd.github.nightshade-preview+json","application/vnd.github.jean-grey-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"description":"no description","in":"body","name":"body","schema":{"$ref":"#/definitions/_2Fuser_2Frepos_20POST.body"}}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Repositories](https://developer.github.com/v3/repos/#create) - Create","","Create a new repository for the authenticated user.","","**Note**: There are two endpoints for creating a repository: one to create a repository on a user account, and one to create a repository in an organization. The organization endpoint is fully enabled for [GitHub Apps](https://developer.github.com/v3/apps/available-endpoints/), whereas the user endpoint is enabled only for [user-to-server requests](https://developer.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#user-to-server-requests)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Repositories](https://developer.github.com/v3/repos/#create) - Create","x-swgg-tags0":"github-repos"}},"/user/repository_invitations":{"get":{"consumes":[],"description":"[Repository Invitations](https://developer.github.com/v3/repos/invitations/#list-a-users-repository-invitations) - List a user's repository invitations","operationId":"_2Fuser_2Frepository_invitations_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Repository Invitations](https://developer.github.com/v3/repos/invitations/#list-a-users-repository-invitations) - List a user's repository invitations"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Repository Invitations](https://developer.github.com/v3/repos/invitations/#list-a-users-repository-invitations) - List a user's repository invitations","x-swgg-tags0":"github-repos"}},"/user/repository_invitations/{invitation_id}":{"delete":{"consumes":[],"description":"[Repository Invitations](https://developer.github.com/v3/repos/invitations/#decline-a-repository-invitation) - Decline a repository invitation","operationId":"_2Fuser_2Frepository_invitations_2F_7Binvitation_id_7D_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"invitation_id","description":"no description","in":"path","name":"invitation_id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Repository Invitations](https://developer.github.com/v3/repos/invitations/#decline-a-repository-invitation) - Decline a repository invitation"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Repository Invitations](https://developer.github.com/v3/repos/invitations/#decline-a-repository-invitation) - Decline a repository invitation","x-swgg-tags0":"github-repos"},"patch":{"consumes":[],"description":"[Repository Invitations](https://developer.github.com/v3/repos/invitations/#accept-a-repository-invitation) - Accept a repository invitation","operationId":"_2Fuser_2Frepository_invitations_2F_7Binvitation_id_7D_20PATCH","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"invitation_id","description":"no description","in":"path","name":"invitation_id","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Repository Invitations](https://developer.github.com/v3/repos/invitations/#accept-a-repository-invitation) - Accept a repository invitation"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Repository Invitations](https://developer.github.com/v3/repos/invitations/#accept-a-repository-invitation) - Accept a repository invitation","x-swgg-tags0":"github-repos"}},"/user/starred/{owner}/{repo}":{"delete":{"consumes":[],"description":"[Starring](https://developer.github.com/v3/activity/starring/#unstar-a-repository) - Unstar a repository\n\nRequires for the user to be authenticated.","operationId":"_2Fuser_2Fstarred_2F_7Bowner_7D_2F_7Brepo_7D_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3.star+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-activity"],"x-swgg-descriptionLineList":["[Starring](https://developer.github.com/v3/activity/starring/#unstar-a-repository) - Unstar a repository","","Requires for the user to be authenticated."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Starring](https://developer.github.com/v3/activity/starring/#unstar-a-repository) - Unstar a repository","x-swgg-tags0":"github-activity"},"get":{"consumes":[],"description":"[Starring](https://developer.github.com/v3/activity/starring/#check-if-you-are-starring-a-repository) - Check if you are starring a repository\n\nRequires for the user to be authenticated.","operationId":"_2Fuser_2Fstarred_2F_7Bowner_7D_2F_7Brepo_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3.star+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-activity"],"x-swgg-descriptionLineList":["[Starring](https://developer.github.com/v3/activity/starring/#check-if-you-are-starring-a-repository) - Check if you are starring a repository","","Requires for the user to be authenticated."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Starring](https://developer.github.com/v3/activity/starring/#check-if-you-are-starring-a-repository) - Check if you are starring a repository","x-swgg-tags0":"github-activity"},"put":{"consumes":[],"description":"[Starring](https://developer.github.com/v3/activity/starring/#star-a-repository) - Star a repository\n\nRequires for the user to be authenticated.","operationId":"_2Fuser_2Fstarred_2F_7Bowner_7D_2F_7Brepo_7D_20PUT","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3.star+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-activity"],"x-swgg-descriptionLineList":["[Starring](https://developer.github.com/v3/activity/starring/#star-a-repository) - Star a repository","","Requires for the user to be authenticated."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Starring](https://developer.github.com/v3/activity/starring/#star-a-repository) - Star a repository","x-swgg-tags0":"github-activity"}},"/user/subscriptions/{owner}/{repo}":{"delete":{"consumes":[],"description":"[Watching](https://developer.github.com/v3/activity/watching/#stop-watching-a-repository-legacy) - Stop watching a repository (LEGACY)\n\nRequires for the user to be authenticated.","operationId":"_2Fuser_2Fsubscriptions_2F_7Bowner_7D_2F_7Brepo_7D_20DELETE","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-activity"],"x-swgg-descriptionLineList":["[Watching](https://developer.github.com/v3/activity/watching/#stop-watching-a-repository-legacy) - Stop watching a repository (LEGACY)","","Requires for the user to be authenticated."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Watching](https://developer.github.com/v3/activity/watching/#stop-watching-a-repository-legacy) - Stop watching a repository (LEGACY)","x-swgg-tags0":"github-activity"},"get":{"consumes":[],"description":"[Watching](https://developer.github.com/v3/activity/watching/#check-if-you-are-watching-a-repository-legacy) - Check if you are watching a repository (LEGACY)\n\nRequires for the user to be authenticated.","operationId":"_2Fuser_2Fsubscriptions_2F_7Bowner_7D_2F_7Brepo_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-activity"],"x-swgg-descriptionLineList":["[Watching](https://developer.github.com/v3/activity/watching/#check-if-you-are-watching-a-repository-legacy) - Check if you are watching a repository (LEGACY)","","Requires for the user to be authenticated."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Watching](https://developer.github.com/v3/activity/watching/#check-if-you-are-watching-a-repository-legacy) - Check if you are watching a repository (LEGACY)","x-swgg-tags0":"github-activity"},"put":{"consumes":[],"description":"[Watching](https://developer.github.com/v3/activity/watching/#watch-a-repository-legacy) - Watch a repository (LEGACY)\n\nRequires the user to be authenticated.","operationId":"_2Fuser_2Fsubscriptions_2F_7Bowner_7D_2F_7Brepo_7D_20PUT","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"owner","description":"no description","in":"path","name":"owner","required":true,"type":"string"},{"default":"repo","description":"no description","in":"path","name":"repo","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-activity"],"x-swgg-descriptionLineList":["[Watching](https://developer.github.com/v3/activity/watching/#watch-a-repository-legacy) - Watch a repository (LEGACY)","","Requires the user to be authenticated."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Watching](https://developer.github.com/v3/activity/watching/#watch-a-repository-legacy) - Watch a repository (LEGACY)","x-swgg-tags0":"github-activity"}},"/user/teams":{"get":{"consumes":[],"description":"[Organization Teams](https://developer.github.com/v3/teams/#list-user-teams) - List user teams\n\n**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.hellcat-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nList all of the teams across all of the organizations to which the authenticated user belongs. This method requires ```user```, ```repo```, or ```read:org``` [scope](https://developer.github.com/apps/building-integrations/setting-up-and-registering-oauth-apps/about-scopes-for-oauth-apps/) when authenticating via [OAuth](https://developer.github.com/apps/building-integrations/setting-up-and-registering-oauth-apps/).","operationId":"_2Fuser_2Fteams_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hellcat-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3.repository+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]}],"responses":{"default":{"description":"default response"}},"tags":["github-teams"],"x-swgg-descriptionLineList":["[Organization Teams](https://developer.github.com/v3/teams/#list-user-teams) - List user teams","","**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.hellcat-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","List all of the teams across all of the organizations to which the authenticated user belongs. This method requires ```user```, ```repo```, or ```read:org``` [scope](https://developer.github.com/apps/building-integrations/setting-up-and-registering-oauth-apps/about-scopes-for-oauth-apps/) when authenticating via [OAuth](https://developer.github.com/apps/building-integrations/setting-up-and-registering-oauth-apps/)."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Organization Teams](https://developer.github.com/v3/teams/#list-user-teams) - List user teams","x-swgg-tags0":"github-teams"}},"/users":{"get":{"consumes":[],"description":"[Users](https://developer.github.com/v3/users/#get-all-users) - Get all users\n\nLists all users, in the order that they signed up on GitHub. This list includes personal user accounts and organization accounts.\n\nNote: Pagination is powered exclusively by the ```since``` parameter. Use the [Link header](https://developer.github.com/v3/#link-header) to get the URL for the next page of users.","operationId":"_2Fusers_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hagar-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.hagar-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"description":"The integer ID of the last User that you've seen.","in":"query","name":"since","type":"string","x-swgg-descriptionLineList":["The integer ID of the last User that you've seen."]}],"responses":{"default":{"description":"default response"}},"tags":["github-users"],"x-swgg-descriptionLineList":["[Users](https://developer.github.com/v3/users/#get-all-users) - Get all users","","Lists all users, in the order that they signed up on GitHub. This list includes personal user accounts and organization accounts.","","Note: Pagination is powered exclusively by the ```since``` parameter. Use the [Link header](https://developer.github.com/v3/#link-header) to get the URL for the next page of users."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Users](https://developer.github.com/v3/users/#get-all-users) - Get all users","x-swgg-tags0":"github-users"}},"/users/{username}":{"get":{"consumes":[],"description":"[Users](https://developer.github.com/v3/users/#get-a-single-user) - Get a single user","operationId":"_2Fusers_2F_7Busername_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hagar-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.hagar-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"username","description":"no description","in":"path","name":"username","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-users"],"x-swgg-descriptionLineList":["[Users](https://developer.github.com/v3/users/#get-a-single-user) - Get a single user"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Users](https://developer.github.com/v3/users/#get-a-single-user) - Get a single user","x-swgg-tags0":"github-users"}},"/users/{username}/events":{"get":{"consumes":[],"description":"[Events](https://developer.github.com/v3/activity/events/#list-events-performed-by-a-user) - List events performed by a user\n\nIf you are authenticated as the given user, you will see your private events.  Otherwise, you'll only see public events.","operationId":"_2Fusers_2F_7Busername_7D_2Fevents_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"username","description":"no description","in":"path","name":"username","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-activity"],"x-swgg-descriptionLineList":["[Events](https://developer.github.com/v3/activity/events/#list-events-performed-by-a-user) - List events performed by a user","","If you are authenticated as the given user, you will see your private events.  Otherwise, you'll only see public events."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Events](https://developer.github.com/v3/activity/events/#list-events-performed-by-a-user) - List events performed by a user","x-swgg-tags0":"github-activity"}},"/users/{username}/events/orgs/{org}":{"get":{"consumes":[],"description":"[Events](https://developer.github.com/v3/activity/events/#list-events-for-an-organization) - List events for an organization\n\nThis is the user's organization dashboard.  You must be authenticated as the user to view this.","operationId":"_2Fusers_2F_7Busername_7D_2Fevents_2Forgs_2F_7Borg_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"username","description":"no description","in":"path","name":"username","required":true,"type":"string"},{"default":"org","description":"no description","in":"path","name":"org","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-activity"],"x-swgg-descriptionLineList":["[Events](https://developer.github.com/v3/activity/events/#list-events-for-an-organization) - List events for an organization","","This is the user's organization dashboard.  You must be authenticated as the user to view this."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Events](https://developer.github.com/v3/activity/events/#list-events-for-an-organization) - List events for an organization","x-swgg-tags0":"github-activity"}},"/users/{username}/events/public":{"get":{"consumes":[],"description":"[Events](https://developer.github.com/v3/activity/events/#list-public-events-performed-by-a-user) - List public events performed by a user","operationId":"_2Fusers_2F_7Busername_7D_2Fevents_2Fpublic_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"username","description":"no description","in":"path","name":"username","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-activity"],"x-swgg-descriptionLineList":["[Events](https://developer.github.com/v3/activity/events/#list-public-events-performed-by-a-user) - List public events performed by a user"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Events](https://developer.github.com/v3/activity/events/#list-public-events-performed-by-a-user) - List public events performed by a user","x-swgg-tags0":"github-activity"}},"/users/{username}/followers":{"get":{"consumes":[],"description":"[User Followers](https://developer.github.com/v3/users/followers/#list-followers-of-a-user) - List followers of a user\n\nList a user's followers:","operationId":"_2Fusers_2F_7Busername_7D_2Ffollowers_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"username","description":"no description","in":"path","name":"username","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-users"],"x-swgg-descriptionLineList":["[User Followers](https://developer.github.com/v3/users/followers/#list-followers-of-a-user) - List followers of a user","","List a user's followers:"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[User Followers](https://developer.github.com/v3/users/followers/#list-followers-of-a-user) - List followers of a user","x-swgg-tags0":"github-users"}},"/users/{username}/following":{"get":{"consumes":[],"description":"[User Followers](https://developer.github.com/v3/users/followers/#list-users-followed-by-another-user) - List users followed by another user\n\nList who a user is following:","operationId":"_2Fusers_2F_7Busername_7D_2Ffollowing_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"username","description":"no description","in":"path","name":"username","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-users"],"x-swgg-descriptionLineList":["[User Followers](https://developer.github.com/v3/users/followers/#list-users-followed-by-another-user) - List users followed by another user","","List who a user is following:"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[User Followers](https://developer.github.com/v3/users/followers/#list-users-followed-by-another-user) - List users followed by another user","x-swgg-tags0":"github-users"}},"/users/{username}/following/{target_user}":{"get":{"consumes":[],"description":"[User Followers](https://developer.github.com/v3/users/followers/#check-if-one-user-follows-another) - Check if one user follows another","operationId":"_2Fusers_2F_7Busername_7D_2Ffollowing_2F_7Btarget_user_7D_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"username","description":"no description","in":"path","name":"username","required":true,"type":"string"},{"default":"target_user","description":"no description","in":"path","name":"target_user","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-users"],"x-swgg-descriptionLineList":["[User Followers](https://developer.github.com/v3/users/followers/#check-if-one-user-follows-another) - Check if one user follows another"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[User Followers](https://developer.github.com/v3/users/followers/#check-if-one-user-follows-another) - Check if one user follows another","x-swgg-tags0":"github-users"}},"/users/{username}/gists":{"get":{"consumes":[],"description":"[Gists](https://developer.github.com/v3/gists/#list-a-users-gists) - List a user's gists\n\nList public gists for the specified user:","operationId":"_2Fusers_2F_7Busername_7D_2Fgists_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3.raw","application/vnd.github.v3.base64","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"username","description":"no description","in":"path","name":"username","required":true,"type":"string"},{"description":"A timestamp in ISO 8601 format: ```YYYY-MM-DDTHH:MM:SSZ```. Only gists updated at or after this time are returned.","in":"query","name":"since","type":"string","x-swgg-descriptionLineList":["A timestamp in ISO 8601 format: ```YYYY-MM-DDTHH:MM:SSZ```. Only gists updated at or after this time are returned."]}],"responses":{"default":{"description":"default response"}},"tags":["github-gists"],"x-swgg-descriptionLineList":["[Gists](https://developer.github.com/v3/gists/#list-a-users-gists) - List a user's gists","","List public gists for the specified user:"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Gists](https://developer.github.com/v3/gists/#list-a-users-gists) - List a user's gists","x-swgg-tags0":"github-gists"}},"/users/{username}/gpg_keys":{"get":{"consumes":[],"description":"[User GPG Keys](https://developer.github.com/v3/users/gpg_keys/#list-gpg-keys-for-a-user) - List GPG keys for a user","operationId":"_2Fusers_2F_7Busername_7D_2Fgpg_keys_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"username","description":"no description","in":"path","name":"username","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-users"],"x-swgg-descriptionLineList":["[User GPG Keys](https://developer.github.com/v3/users/gpg_keys/#list-gpg-keys-for-a-user) - List GPG keys for a user"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[User GPG Keys](https://developer.github.com/v3/users/gpg_keys/#list-gpg-keys-for-a-user) - List GPG keys for a user","x-swgg-tags0":"github-users"}},"/users/{username}/hovercard":{"get":{"consumes":[],"description":"[Users](https://developer.github.com/v3/users/#get-contextual-information-about-a-user) - Get contextual information about a user\n\n**Note:** You can now retrieve someone's hovercard information in different contexts using the Hovercard API. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-03-21-hovercard-api-preview) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.hagar-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nProvides hovercard information when authenticated through basic auth or OAuth with the ```repo``` scope. You can find out more about someone in relation to their pull requests, issues, repositories, and organizations.","operationId":"_2Fusers_2F_7Busername_7D_2Fhovercard_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.hagar-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.hagar-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"username","description":"no description","in":"path","name":"username","required":true,"type":"string"},{"description":"Identifies which additional information you'd like to receive about the person's hovercard. Can be ```organization```, ```repository```, ```issue```, ```pull_request```. **Required** when using ```subject_id```.","in":"query","name":"subject_type","required":true,"type":"string","x-swgg-descriptionLineList":["Identifies which additional information you'd like to receive about the person's hovercard. Can be ```organization```, ```repository```, ```issue```, ```pull_request```. **Required** when using ```subject_id```."]},{"description":"Uses the ID for the ```subject_type``` you specified. **Required** when using ```subject_type```.","in":"query","name":"subject_id","required":true,"type":"string","x-swgg-descriptionLineList":["Uses the ID for the ```subject_type``` you specified. **Required** when using ```subject_type```."]}],"responses":{"default":{"description":"default response"}},"tags":["github-users"],"x-swgg-descriptionLineList":["[Users](https://developer.github.com/v3/users/#get-contextual-information-about-a-user) - Get contextual information about a user","","**Note:** You can now retrieve someone's hovercard information in different contexts using the Hovercard API. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-03-21-hovercard-api-preview) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.hagar-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","Provides hovercard information when authenticated through basic auth or OAuth with the ```repo``` scope. You can find out more about someone in relation to their pull requests, issues, repositories, and organizations."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Users](https://developer.github.com/v3/users/#get-contextual-information-about-a-user) - Get contextual information about a user","x-swgg-tags0":"github-users"}},"/users/{username}/keys":{"get":{"consumes":[],"description":"[User Public Keys](https://developer.github.com/v3/users/keys/#list-public-keys-for-a-user) - List public keys for a user","operationId":"_2Fusers_2F_7Busername_7D_2Fkeys_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"username","description":"no description","in":"path","name":"username","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-users"],"x-swgg-descriptionLineList":["[User Public Keys](https://developer.github.com/v3/users/keys/#list-public-keys-for-a-user) - List public keys for a user"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[User Public Keys](https://developer.github.com/v3/users/keys/#list-public-keys-for-a-user) - List public keys for a user","x-swgg-tags0":"github-users"}},"/users/{username}/orgs":{"get":{"consumes":[],"description":"[Organizations](https://developer.github.com/v3/orgs/#list-user-organizations) - List user organizations\n\nList [public organization memberships](https://help.github.com/articles/publicizing-or-concealing-organization-membership) for the specified user.\n\nThis method only lists public memberships, regardless of authentication. If you need to fetch all of the organization memberships (public and private) for the authenticated user, use the [List your organizations](https://developer.github.com/v3/orgs/#list-your-organizations) API instead.","operationId":"_2Fusers_2F_7Busername_7D_2Forgs_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.jean-grey-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.jean-grey-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"username","description":"no description","in":"path","name":"username","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-orgs"],"x-swgg-descriptionLineList":["[Organizations](https://developer.github.com/v3/orgs/#list-user-organizations) - List user organizations","","List [public organization memberships](https://help.github.com/articles/publicizing-or-concealing-organization-membership) for the specified user.","","This method only lists public memberships, regardless of authentication. If you need to fetch all of the organization memberships (public and private) for the authenticated user, use the [List your organizations](https://developer.github.com/v3/orgs/#list-your-organizations) API instead."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Organizations](https://developer.github.com/v3/orgs/#list-user-organizations) - List user organizations","x-swgg-tags0":"github-orgs"}},"/users/{username}/received_events":{"get":{"consumes":[],"description":"[Events](https://developer.github.com/v3/activity/events/#list-events-that-a-user-has-received) - List events that a user has received\n\nThese are events that you've received by watching repos and following users.  If you are authenticated as the given user, you will see private events.  Otherwise, you'll only see public events.","operationId":"_2Fusers_2F_7Busername_7D_2Freceived_events_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"username","description":"no description","in":"path","name":"username","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-activity"],"x-swgg-descriptionLineList":["[Events](https://developer.github.com/v3/activity/events/#list-events-that-a-user-has-received) - List events that a user has received","","These are events that you've received by watching repos and following users.  If you are authenticated as the given user, you will see private events.  Otherwise, you'll only see public events."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Events](https://developer.github.com/v3/activity/events/#list-events-that-a-user-has-received) - List events that a user has received","x-swgg-tags0":"github-activity"}},"/users/{username}/received_events/public":{"get":{"consumes":[],"description":"[Events](https://developer.github.com/v3/activity/events/#list-public-events-that-a-user-has-received) - List public events that a user has received","operationId":"_2Fusers_2F_7Busername_7D_2Freceived_events_2Fpublic_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"username","description":"no description","in":"path","name":"username","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-activity"],"x-swgg-descriptionLineList":["[Events](https://developer.github.com/v3/activity/events/#list-public-events-that-a-user-has-received) - List public events that a user has received"],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Events](https://developer.github.com/v3/activity/events/#list-public-events-that-a-user-has-received) - List public events that a user has received","x-swgg-tags0":"github-activity"}},"/users/{username}/repos":{"get":{"consumes":[],"description":"[Repositories](https://developer.github.com/v3/repos/#list-user-repositories) - List user repositories\n\nList public repositories for the specified user.","operationId":"_2Fusers_2F_7Busername_7D_2Frepos_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","default":["application/vnd.github.nightshade-preview+json"],"description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.mercy-preview+json","application/vnd.github.nightshade-preview+json","application/vnd.github.jean-grey-preview+json","application/vnd.github.hellcat-preview+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","required":true,"type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"username","description":"no description","in":"path","name":"username","required":true,"type":"string"},{"default":"owner","description":"Can be one of ```all```, ```owner```, ```member```. Default: ```owner```","enum":["all","owner","member"],"in":"query","name":"type","type":"string","x-swgg-descriptionLineList":["Can be one of ```all```, ```owner```, ```member```. Default: ```owner```"]},{"default":"full_name","description":"Can be one of ```created```, ```updated```, ```pushed```, ```full_name```. Default: ```full_name```","enum":["created","updated","pushed","full_name"],"in":"query","name":"sort","type":"string","x-swgg-descriptionLineList":["Can be one of ```created```, ```updated```, ```pushed```, ```full_name```. Default: ```full_name```"]},{"default":"full_name","description":"Can be one of ```asc``` or ```desc```. Default: when using ```full_name```: ```asc```, otherwise ```desc```","enum":["asc","desc","full_name"],"in":"query","name":"direction","type":"string","x-swgg-descriptionLineList":["Can be one of ```asc``` or ```desc```. Default: when using ```full_name```: ```asc```, otherwise ```desc```"]}],"responses":{"default":{"description":"default response"}},"tags":["github-repos"],"x-swgg-descriptionLineList":["[Repositories](https://developer.github.com/v3/repos/#list-user-repositories) - List user repositories","","List public repositories for the specified user."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Repositories](https://developer.github.com/v3/repos/#list-user-repositories) - List user repositories","x-swgg-tags0":"github-repos"}},"/users/{username}/starred":{"get":{"consumes":[],"description":"[Starring](https://developer.github.com/v3/activity/starring/#list-repositories-being-starred) - List repositories being starred\n\nList repositories being starred by a user.","operationId":"_2Fusers_2F_7Busername_7D_2Fstarred_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3.star+json","application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"username","description":"no description","in":"path","name":"username","required":true,"type":"string"},{"default":"created","description":"One of ```created``` (when the repository was starred) or ```updated``` (when it was last pushed to). Default: ```created```","in":"query","name":"sort","type":"string","x-swgg-descriptionLineList":["One of ```created``` (when the repository was starred) or ```updated``` (when it was last pushed to). Default: ```created```"]},{"default":"desc","description":"One of ```asc``` (ascending) or ```desc``` (descending). Default: ```desc```","in":"query","name":"direction","type":"string","x-swgg-descriptionLineList":["One of ```asc``` (ascending) or ```desc``` (descending). Default: ```desc```"]}],"responses":{"default":{"description":"default response"}},"tags":["github-activity"],"x-swgg-descriptionLineList":["[Starring](https://developer.github.com/v3/activity/starring/#list-repositories-being-starred) - List repositories being starred","","List repositories being starred by a user."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Starring](https://developer.github.com/v3/activity/starring/#list-repositories-being-starred) - List repositories being starred","x-swgg-tags0":"github-activity"}},"/users/{username}/subscriptions":{"get":{"consumes":[],"description":"[Watching](https://developer.github.com/v3/activity/watching/#list-repositories-being-watched) - List repositories being watched\n\nList repositories being watched by a user.","operationId":"_2Fusers_2F_7Busername_7D_2Fsubscriptions_20GET","parameters":[{"default":"xxxxxxxx","description":"https://developer.github.com/v3/#authentication\n\nOAuth2 token (sent as a parameter)","in":"query","name":"access_token","type":"string","x-swgg-apiKey":true,"x-swgg-descriptionLineList":["https://developer.github.com/v3/#authentication","","OAuth2 token (sent as a parameter)"]},{"default":"Awesome-Octocat-App","description":"https://developer.github.com/v3/index.html#user-agent-required\n\nAll API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems.","in":"header","name":"user-agent","required":true,"type":"string","x-swgg-descriptionLineList":["https://developer.github.com/v3/index.html#user-agent-required","","All API requests MUST include a valid ```User-Agent``` header. Requests with no ```User-Agent``` header will be rejected. We request that you use your GitHub username, or the name of your application, for the ```User-Agent``` header value. This allows us to contact you if there are problems."]},{"collectionFormat":"csv","description":"https://developer.github.com/v3/media/\n\nCustom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't.","enum":["application/vnd.github.v3+json"],"in":"header","items":{"type":"string"},"name":"accept","type":"array","x-swgg-descriptionLineList":["https://developer.github.com/v3/media/","","Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the ```Accept``` header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't."]},{"default":"username","description":"no description","in":"path","name":"username","required":true,"type":"string"}],"responses":{"default":{"description":"default response"}},"tags":["github-activity"],"x-swgg-descriptionLineList":["[Watching](https://developer.github.com/v3/activity/watching/#list-repositories-being-watched) - List repositories being watched","","List repositories being watched by a user."],"x-swgg-host":"api.github.com","x-swgg-schemes":["https"],"x-swgg-sortValue":"[Watching](https://developer.github.com/v3/activity/watching/#list-repositories-being-watched) - List repositories being watched","x-swgg-tags0":"github-activity"}}},"schemes":["https"],"securityDefinitions":{},"swagger":"2.0","tags":[{"description":"# [Activity](https://developer.github.com/v3/activity/)\n\nServing up the 'social' in Social Coding, the Activity APIs provide access to notifications, subscriptions, and timelines.\n\n# [Event Types & Payloads](https://developer.github.com/v3/activity/events/types/)\n\nEach event has a similar JSON schema, but a unique ```payload``` object that is determined by its event type.\n\nEvent names are used by [repository webhooks](https://developer.github.com/v3/repos/hooks/) to specify which events the webhook should receive. The included payloads below are from webhook deliveries but match events returned by the [Events API](https://developer.github.com/v3/activity/events/) (except where noted). The Events API uses the CamelCased name (e.g. ```CommitCommentEvent```) in the ```type``` field of an event object and does not include the ```repository``` or ```sender``` fields in the event payload object.\n\n**Note:** Some of these events may not be rendered in timelines, they're only created for various internal and webhook purposes.\n- [CommitCommentEvent](https://developer.github.com/v3/activity/events/types/#commitcommentevent)\n- [CreateEvent](https://developer.github.com/v3/activity/events/types/#createevent)\n- [DeleteEvent](https://developer.github.com/v3/activity/events/types/#deleteevent)\n- [DeploymentEvent](https://developer.github.com/v3/activity/events/types/#deploymentevent)\n- [DeploymentStatusEvent](https://developer.github.com/v3/activity/events/types/#deploymentstatusevent)\n- [DownloadEvent](https://developer.github.com/v3/activity/events/types/#downloadevent)\n- [FollowEvent](https://developer.github.com/v3/activity/events/types/#followevent)\n- [ForkEvent](https://developer.github.com/v3/activity/events/types/#forkevent)\n- [ForkApplyEvent](https://developer.github.com/v3/activity/events/types/#forkapplyevent)\n- [GistEvent](https://developer.github.com/v3/activity/events/types/#gistevent)\n- [GollumEvent](https://developer.github.com/v3/activity/events/types/#gollumevent)\n- [InstallationEvent](https://developer.github.com/v3/activity/events/types/#installationevent)\n- [InstallationRepositoriesEvent](https://developer.github.com/v3/activity/events/types/#installationrepositoriesevent)\n- [IssueCommentEvent](https://developer.github.com/v3/activity/events/types/#issuecommentevent)\n- [IssuesEvent](https://developer.github.com/v3/activity/events/types/#issuesevent)\n- [LabelEvent](https://developer.github.com/v3/activity/events/types/#labelevent)\n- [MarketplacePurchaseEvent](https://developer.github.com/v3/activity/events/types/#marketplacepurchaseevent)\n- [MemberEvent](https://developer.github.com/v3/activity/events/types/#memberevent)\n- [MembershipEvent](https://developer.github.com/v3/activity/events/types/#membershipevent)\n- [MilestoneEvent](https://developer.github.com/v3/activity/events/types/#milestoneevent)\n- [OrganizationEvent](https://developer.github.com/v3/activity/events/types/#organizationevent)\n- [OrgBlockEvent](https://developer.github.com/v3/activity/events/types/#orgblockevent)\n- [PageBuildEvent](https://developer.github.com/v3/activity/events/types/#pagebuildevent)\n- [ProjectCardEvent](https://developer.github.com/v3/activity/events/types/#projectcardevent)\n- [ProjectColumnEvent](https://developer.github.com/v3/activity/events/types/#projectcolumnevent)\n- [ProjectEvent](https://developer.github.com/v3/activity/events/types/#projectevent)\n- [PublicEvent](https://developer.github.com/v3/activity/events/types/#publicevent)\n- [PullRequestEvent](https://developer.github.com/v3/activity/events/types/#pullrequestevent)\n- [PullRequestReviewEvent](https://developer.github.com/v3/activity/events/types/#pullrequestreviewevent)\n- [PullRequestReviewCommentEvent](https://developer.github.com/v3/activity/events/types/#pullrequestreviewcommentevent)\n- [PushEvent](https://developer.github.com/v3/activity/events/types/#pushevent)\n- [ReleaseEvent](https://developer.github.com/v3/activity/events/types/#releaseevent)\n- [RepositoryEvent](https://developer.github.com/v3/activity/events/types/#repositoryevent)\n- [StatusEvent](https://developer.github.com/v3/activity/events/types/#statusevent)\n- [TeamEvent](https://developer.github.com/v3/activity/events/types/#teamevent)\n- [TeamAddEvent](https://developer.github.com/v3/activity/events/types/#teamaddevent)\n- [WatchEvent](https://developer.github.com/v3/activity/events/types/#watchevent)\n\n# [Events](https://developer.github.com/v3/activity/events/)\n\nThis is a read-only API to the GitHub events. These events power the various activity streams on the site.\n- [List public events](https://developer.github.com/v3/activity/events/#list-public-events)\n- [List repository events](https://developer.github.com/v3/activity/events/#list-repository-events)\n- [List issue events for a repository](https://developer.github.com/v3/activity/events/#list-issue-events-for-a-repository)\n- [List public events for a network of repositories](https://developer.github.com/v3/activity/events/#list-public-events-for-a-network-of-repositories)\n- [List public events for an organization](https://developer.github.com/v3/activity/events/#list-public-events-for-an-organization)\n- [List events that a user has received](https://developer.github.com/v3/activity/events/#list-events-that-a-user-has-received)\n- [List public events that a user has received](https://developer.github.com/v3/activity/events/#list-public-events-that-a-user-has-received)\n- [List events performed by a user](https://developer.github.com/v3/activity/events/#list-events-performed-by-a-user)\n- [List public events performed by a user](https://developer.github.com/v3/activity/events/#list-public-events-performed-by-a-user)\n- [List events for an organization](https://developer.github.com/v3/activity/events/#list-events-for-an-organization)\n\nEvents are optimized for polling with the \"ETag\" header.  If no new events have been triggered, you will see a \"304 Not Modified\" response, and your current rate limit will be untouched.  There is also an \"X-Poll-Interval\" header that specifies how often (in seconds) you are allowed to poll.  In times of high server load, the time may increase.  Please obey the header.\n```\ncurl -I https://api.github.com/users/tater/events\nHTTP/1.1 200 OK\nX-Poll-Interval: 60\nETag: \"a18c3bded88eb5dbb5c849a489412bf3\"\n# The quotes around the ETag value are important\ncurl -I https://api.github.com/users/tater/events \\\n   -H 'If-None-Match: \"a18c3bded88eb5dbb5c849a489412bf3\"'\nHTTP/1.1 304 Not Modified\nX-Poll-Interval: 60\n```\n\n\nEvents support [pagination](https://developer.github.com/v3/#pagination), however the ```per_page``` option is unsupported. The fixed page size is 30 items. Fetching up to ten pages is supported, for a total of 300 events.\n\nOnly events created within the past 90 days will be included in timelines. Events older than 90 days will not be included (even if the total number of events in the timeline is less than 300).\n\nAll Events have the same response format:\n```\nStatus: 200 OK\nLink: &lt;https://api.github.com/resource?page=2&gt;; rel=\"next\",\n      &lt;https://api.github.com/resource?page=5&gt;; rel=\"last\"\n```\n\n```\n[\n  {\n    \"type\": \"Event\",\n    \"public\": true,\n    \"payload\": {\n    },\n    \"repo\": {\n      \"id\": 3,\n      \"name\": \"octocat/Hello-World\",\n      \"url\": \"https://api.github.com/repos/octocat/Hello-World\"\n    },\n    \"actor\": {\n      \"id\": 1,\n      \"login\": \"octocat\",\n      \"gravatar_id\": \"\",\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"url\": \"https://api.github.com/users/octocat\"\n    },\n    \"org\": {\n      \"id\": 1,\n      \"login\": \"github\",\n      \"gravatar_id\": \"\",\n      \"url\": \"https://api.github.com/orgs/github\",\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\"\n    },\n    \"created_at\": \"2011-09-06T17:26:27Z\",\n    \"id\": \"12345\"\n  }\n]\n```\n\n# [Feeds](https://developer.github.com/v3/activity/feeds/)\n\nno description\n\n# [Notifications](https://developer.github.com/v3/activity/notifications/)\n\nUsers receive notifications for conversations in repositories they watch including:\n- Issues and their comments\n- Pull Requests and their comments\n- Comments on any commits\n\nNotifications are also sent for conversations in unwatched repositories when the user is involved including:\n- **@mentions**\n- Issue assignments\n- Commits the user authors or commits\n- Any discussion in which the user actively participates\n\nAll Notification API calls require the ```notifications``` or ```repo``` API scopes.  Doing this will give read-only access to some Issue/Commit content. You will still need the \"repo\" scope to access Issues and Commits from their respective endpoints.\n\nNotifications come back as \"threads\".  A Thread contains information about the current discussion of an Issue/PullRequest/Commit.\n\nNotifications are optimized for polling with the \"Last-Modified\" header.  If there are no new notifications, you will see a \"304 Not Modified\" response, leaving your current rate limit untouched.  There is an \"X-Poll-Interval\" header that specifies how often (in seconds) you are allowed to poll.  In times of high server load, the time may increase.  Please obey the header.\n```\n# Add authentication to your requests\ncurl -I https://api.github.com/notifications\nHTTP/1.1 200 OK\nLast-Modified: Thu, 25 Oct 2012 15:16:27 GMT\nX-Poll-Interval: 60\n# Pass the Last-Modified header exactly\ncurl -I https://api.github.com/notifications\n   -H \"If-Modified-Since: Thu, 25 Oct 2012 15:16:27 GMT\"\nHTTP/1.1 304 Not Modified\nX-Poll-Interval: 60\n```\n\n# [Starring](https://developer.github.com/v3/activity/starring/)\n\nRepository Starring is a feature that lets users bookmark repositories.  Stars are shown next to repositories to show an approximate level of interest.  Stars have no effect on notifications or the activity feed.  For that, see [Repository Watching](https://developer.github.com/v3/activity/watching).\n\n####  Starring vs. Watching\n\nIn August 2012, we [changed the way watching works](https://github.com/blog/1204-notifications-stars) on GitHub.  Many API client applications may be using the original \"watcher\" endpoints for accessing this data. You can now start using the \"star\" endpoints instead (described below). Check out the [Watcher API Change post](https://developer.github.com/changes/2012-09-05-watcher-api/) for more details.\n\n# [Watching](https://developer.github.com/v3/activity/watching/)\n\nWatching a Repository registers the user to receive notifications on new discussions, as well as events in the user's activity feed.  See [Repository Starring](https://developer.github.com/v3/activity/starring) for simple repository bookmarks.\n\n####  Watching vs. Starring\n\nIn August 2012, we [changed the way watching works](https://github.com/blog/1204-notifications-stars) on GitHub.  At the time of that change, many API clients were already using the existing \"watcher\" endpoints to access starring data. To avoid breaking those applications, the legacy \"watcher\" endpoints continue to provide starring data.\n\nTo provide access to watching data, the v3 Watcher API uses the \"subscription\" endpoints described below. Check out the [Watcher API Change post](https://developer.github.com/changes/2012-09-05-watcher-api/) for more details.","name":"github-activity","x-swgg-descriptionLineList":["# [Activity](https://developer.github.com/v3/activity/)","","Serving up the 'social' in Social Coding, the Activity APIs provide access to notifications, subscriptions, and timelines.","","# [Event Types & Payloads](https://developer.github.com/v3/activity/events/types/)","","Each event has a similar JSON schema, but a unique ```payload``` object that is determined by its event type.","","Event names are used by [repository webhooks](https://developer.github.com/v3/repos/hooks/) to specify which events the webhook should receive. The included payloads below are from webhook deliveries but match events returned by the [Events API](https://developer.github.com/v3/activity/events/) (except where noted). The Events API uses the CamelCased name (e.g. ```CommitCommentEvent```) in the ```type``` field of an event object and does not include the ```repository``` or ```sender``` fields in the event payload object.","","**Note:** Some of these events may not be rendered in timelines, they're only created for various internal and webhook purposes.","- [CommitCommentEvent](https://developer.github.com/v3/activity/events/types/#commitcommentevent)","- [CreateEvent](https://developer.github.com/v3/activity/events/types/#createevent)","- [DeleteEvent](https://developer.github.com/v3/activity/events/types/#deleteevent)","- [DeploymentEvent](https://developer.github.com/v3/activity/events/types/#deploymentevent)","- [DeploymentStatusEvent](https://developer.github.com/v3/activity/events/types/#deploymentstatusevent)","- [DownloadEvent](https://developer.github.com/v3/activity/events/types/#downloadevent)","- [FollowEvent](https://developer.github.com/v3/activity/events/types/#followevent)","- [ForkEvent](https://developer.github.com/v3/activity/events/types/#forkevent)","- [ForkApplyEvent](https://developer.github.com/v3/activity/events/types/#forkapplyevent)","- [GistEvent](https://developer.github.com/v3/activity/events/types/#gistevent)","- [GollumEvent](https://developer.github.com/v3/activity/events/types/#gollumevent)","- [InstallationEvent](https://developer.github.com/v3/activity/events/types/#installationevent)","- [InstallationRepositoriesEvent](https://developer.github.com/v3/activity/events/types/#installationrepositoriesevent)","- [IssueCommentEvent](https://developer.github.com/v3/activity/events/types/#issuecommentevent)","- [IssuesEvent](https://developer.github.com/v3/activity/events/types/#issuesevent)","- [LabelEvent](https://developer.github.com/v3/activity/events/types/#labelevent)","- [MarketplacePurchaseEvent](https://developer.github.com/v3/activity/events/types/#marketplacepurchaseevent)","- [MemberEvent](https://developer.github.com/v3/activity/events/types/#memberevent)","- [MembershipEvent](https://developer.github.com/v3/activity/events/types/#membershipevent)","- [MilestoneEvent](https://developer.github.com/v3/activity/events/types/#milestoneevent)","- [OrganizationEvent](https://developer.github.com/v3/activity/events/types/#organizationevent)","- [OrgBlockEvent](https://developer.github.com/v3/activity/events/types/#orgblockevent)","- [PageBuildEvent](https://developer.github.com/v3/activity/events/types/#pagebuildevent)","- [ProjectCardEvent](https://developer.github.com/v3/activity/events/types/#projectcardevent)","- [ProjectColumnEvent](https://developer.github.com/v3/activity/events/types/#projectcolumnevent)","- [ProjectEvent](https://developer.github.com/v3/activity/events/types/#projectevent)","- [PublicEvent](https://developer.github.com/v3/activity/events/types/#publicevent)","- [PullRequestEvent](https://developer.github.com/v3/activity/events/types/#pullrequestevent)","- [PullRequestReviewEvent](https://developer.github.com/v3/activity/events/types/#pullrequestreviewevent)","- [PullRequestReviewCommentEvent](https://developer.github.com/v3/activity/events/types/#pullrequestreviewcommentevent)","- [PushEvent](https://developer.github.com/v3/activity/events/types/#pushevent)","- [ReleaseEvent](https://developer.github.com/v3/activity/events/types/#releaseevent)","- [RepositoryEvent](https://developer.github.com/v3/activity/events/types/#repositoryevent)","- [StatusEvent](https://developer.github.com/v3/activity/events/types/#statusevent)","- [TeamEvent](https://developer.github.com/v3/activity/events/types/#teamevent)","- [TeamAddEvent](https://developer.github.com/v3/activity/events/types/#teamaddevent)","- [WatchEvent](https://developer.github.com/v3/activity/events/types/#watchevent)","","# [Events](https://developer.github.com/v3/activity/events/)","","This is a read-only API to the GitHub events. These events power the various activity streams on the site.","- [List public events](https://developer.github.com/v3/activity/events/#list-public-events)","- [List repository events](https://developer.github.com/v3/activity/events/#list-repository-events)","- [List issue events for a repository](https://developer.github.com/v3/activity/events/#list-issue-events-for-a-repository)","- [List public events for a network of repositories](https://developer.github.com/v3/activity/events/#list-public-events-for-a-network-of-repositories)","- [List public events for an organization](https://developer.github.com/v3/activity/events/#list-public-events-for-an-organization)","- [List events that a user has received](https://developer.github.com/v3/activity/events/#list-events-that-a-user-has-received)","- [List public events that a user has received](https://developer.github.com/v3/activity/events/#list-public-events-that-a-user-has-received)","- [List events performed by a user](https://developer.github.com/v3/activity/events/#list-events-performed-by-a-user)","- [List public events performed by a user](https://developer.github.com/v3/activity/events/#list-public-events-performed-by-a-user)","- [List events for an organization](https://developer.github.com/v3/activity/events/#list-events-for-an-organization)","","Events are optimized for polling with the \"ETag\" header.  If no new events have been triggered, you will see a \"304 Not Modified\" response, and your current rate limit will be untouched.  There is also an \"X-Poll-Interval\" header that specifies how often (in seconds) you are allowed to poll.  In times of high server load, the time may increase.  Please obey the header.","```","curl -I https://api.github.com/users/tater/events","HTTP/1.1 200 OK","X-Poll-Interval: 60","ETag: \"a18c3bded88eb5dbb5c849a489412bf3\"","# The quotes around the ETag value are important","curl -I https://api.github.com/users/tater/events \\","   -H 'If-None-Match: \"a18c3bded88eb5dbb5c849a489412bf3\"'","HTTP/1.1 304 Not Modified","X-Poll-Interval: 60","```","","","Events support [pagination](https://developer.github.com/v3/#pagination), however the ```per_page``` option is unsupported. The fixed page size is 30 items. Fetching up to ten pages is supported, for a total of 300 events.","","Only events created within the past 90 days will be included in timelines. Events older than 90 days will not be included (even if the total number of events in the timeline is less than 300).","","All Events have the same response format:","```","Status: 200 OK","Link: &lt;https://api.github.com/resource?page=2&gt;; rel=\"next\",","      &lt;https://api.github.com/resource?page=5&gt;; rel=\"last\"","```","","```","[","  {","    \"type\": \"Event\",","    \"public\": true,","    \"payload\": {","    },","    \"repo\": {","      \"id\": 3,","      \"name\": \"octocat/Hello-World\",","      \"url\": \"https://api.github.com/repos/octocat/Hello-World\"","    },","    \"actor\": {","      \"id\": 1,","      \"login\": \"octocat\",","      \"gravatar_id\": \"\",","      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",","      \"url\": \"https://api.github.com/users/octocat\"","    },","    \"org\": {","      \"id\": 1,","      \"login\": \"github\",","      \"gravatar_id\": \"\",","      \"url\": \"https://api.github.com/orgs/github\",","      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\"","    },","    \"created_at\": \"2011-09-06T17:26:27Z\",","    \"id\": \"12345\"","  }","]","```","","# [Feeds](https://developer.github.com/v3/activity/feeds/)","","no description","","# [Notifications](https://developer.github.com/v3/activity/notifications/)","","Users receive notifications for conversations in repositories they watch including:","- Issues and their comments","- Pull Requests and their comments","- Comments on any commits","","Notifications are also sent for conversations in unwatched repositories when the user is involved including:","- **@mentions**","- Issue assignments","- Commits the user authors or commits","- Any discussion in which the user actively participates","","All Notification API calls require the ```notifications``` or ```repo``` API scopes.  Doing this will give read-only access to some Issue/Commit content. You will still need the \"repo\" scope to access Issues and Commits from their respective endpoints.","","Notifications come back as \"threads\".  A Thread contains information about the current discussion of an Issue/PullRequest/Commit.","","Notifications are optimized for polling with the \"Last-Modified\" header.  If there are no new notifications, you will see a \"304 Not Modified\" response, leaving your current rate limit untouched.  There is an \"X-Poll-Interval\" header that specifies how often (in seconds) you are allowed to poll.  In times of high server load, the time may increase.  Please obey the header.","```","# Add authentication to your requests","curl -I https://api.github.com/notifications","HTTP/1.1 200 OK","Last-Modified: Thu, 25 Oct 2012 15:16:27 GMT","X-Poll-Interval: 60","# Pass the Last-Modified header exactly","curl -I https://api.github.com/notifications","   -H \"If-Modified-Since: Thu, 25 Oct 2012 15:16:27 GMT\"","HTTP/1.1 304 Not Modified","X-Poll-Interval: 60","```","","# [Starring](https://developer.github.com/v3/activity/starring/)","","Repository Starring is a feature that lets users bookmark repositories.  Stars are shown next to repositories to show an approximate level of interest.  Stars have no effect on notifications or the activity feed.  For that, see [Repository Watching](https://developer.github.com/v3/activity/watching).","","####  Starring vs. Watching","","In August 2012, we [changed the way watching works](https://github.com/blog/1204-notifications-stars) on GitHub.  Many API client applications may be using the original \"watcher\" endpoints for accessing this data. You can now start using the \"star\" endpoints instead (described below). Check out the [Watcher API Change post](https://developer.github.com/changes/2012-09-05-watcher-api/) for more details.","","# [Watching](https://developer.github.com/v3/activity/watching/)","","Watching a Repository registers the user to receive notifications on new discussions, as well as events in the user's activity feed.  See [Repository Starring](https://developer.github.com/v3/activity/starring) for simple repository bookmarks.","","####  Watching vs. Starring","","In August 2012, we [changed the way watching works](https://github.com/blog/1204-notifications-stars) on GitHub.  At the time of that change, many API clients were already using the existing \"watcher\" endpoints to access starring data. To avoid breaking those applications, the legacy \"watcher\" endpoints continue to provide starring data.","","To provide access to watching data, the v3 Watcher API uses the \"subscription\" endpoints described below. Check out the [Watcher API Change post](https://developer.github.com/changes/2012-09-05-watcher-api/) for more details."]},{"description":"# [GitHub Apps](https://developer.github.com/v3/apps/)\n\nFor information on how to authenticate as a GitHub App, see \"[Authentication Options for GitHub Apps](https://developer.github.com/apps/building-github-apps/authentication-options-for-github-apps#authenticating-as-a-github-app).\"\n\n**Note:** To access the API with your integration, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` Header for your requests.\n\n```\napplication/vnd.github.machine-man-preview+json\n```\n\n# [GitHub App Permissions](https://developer.github.com/v3/apps/permissions/)\n\n**Note:** To access the API with your integration, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` Header for your requests.\n\n```\napplication/vnd.github.machine-man-preview+json\n```\n\nGitHub Apps are created with a set of permissions. These define what resources the GitHub App can access via the API. For more information, see \"[Permissions for GitHub Apps](https://developer.github.com/apps/building-github-apps/permissions-for-github-apps/).\"\n\n# [GitHub Apps: Available Endpoints](https://developer.github.com/v3/apps/available-endpoints/)\n\n**Note:** To access the API with your integration, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` Header for your requests.\n\n```\napplication/vnd.github.machine-man-preview+json\n```\n\nThe following endpoints are available for use by GitHub Apps. For more information, see \"[GitHub Apps](https://developer.github.com/apps/building-github-apps/).\"\n\n#### Review Comments\n- [List comments on a pull request](https://developer.github.com/v3/pulls/comments/#list-comments-on-a-pull-request)\n- [List comments in a repository](https://developer.github.com/v3/pulls/comments/#list-comments-in-a-repository)\n- [Get a single comment](https://developer.github.com/v3/pulls/comments/#get-a-single-comment)\n- [Create a comment](https://developer.github.com/v3/pulls/comments/#create-a-comment)\n- [Edit a comment](https://developer.github.com/v3/pulls/comments/#edit-a-comment)\n- [Delete a comment](https://developer.github.com/v3/pulls/comments/#delete-a-comment)\n\n#### Reviews\n- [Get a single review](https://developer.github.com/v3/pulls/reviews/#get-a-single-review)\n- [Get comments for a single review](https://developer.github.com/v3/pulls/reviews/#get-comments-for-a-single-review)\n- [Create a pull request review](https://developer.github.com/v3/pulls/reviews/#create-a-pull-request-review)\n\n#### Teams\n- [List teams](https://developer.github.com/v3/teams/#list-teams)\n- [Get team](https://developer.github.com/v3/teams/#get-team)\n- [Edit team](https://developer.github.com/v3/teams/#edit-team)\n- [Delete team](https://developer.github.com/v3/teams/#delete-team)\n- [List child teams](https://developer.github.com/v3/teams/#list-child-teams)\n- [List team repos](https://developer.github.com/v3/teams/#list-team-repos)\n\n#### Commits\n- [Get a Commit](https://developer.github.com/v3/git/commits/#get-a-commit)\n- [Create a Commit](https://developer.github.com/v3/git/commits/#create-a-commit)\n- [List commits on a repository](https://developer.github.com/v3/repos/commits/#list-commits-on-a-repository)\n- [Get a single commit](https://developer.github.com/v3/repos/commits/#get-a-single-commit)\n- [Get the SHA-1 of a commit reference](https://developer.github.com/v3/repos/commits/#get-the-sha-1-of-a-commit-reference)\n\n#### Tags\n- [Get a Tag](https://developer.github.com/v3/git/tags/#get-a-tag)\n- [Create a Tag Object](https://developer.github.com/v3/git/tags/#create-a-tag-object)\n\n#### Blobs\n- [Get a Blob](https://developer.github.com/v3/git/blobs/#get-a-blob)\n- [Create a Blob](https://developer.github.com/v3/git/blobs/#create-a-blob)\n\n#### Trees\n- [Get a Tree](https://developer.github.com/v3/git/trees/#get-a-tree)\n- [Create a Tree](https://developer.github.com/v3/git/trees/#create-a-tree)\n\n#### References\n- [Get a Reference](https://developer.github.com/v3/git/refs/#get-a-reference)\n- [Get all References](https://developer.github.com/v3/git/refs/#get-all-references)\n- [Create a Reference](https://developer.github.com/v3/git/refs/#create-a-reference)\n- [Update a Reference](https://developer.github.com/v3/git/refs/#update-a-reference)\n- [Delete a Reference](https://developer.github.com/v3/git/refs/#delete-a-reference)\n\n#### Issues\n- [List issues for a repository](https://developer.github.com/v3/issues/#list-issues-for-a-repository)\n- [Get a single issue](https://developer.github.com/v3/issues/#get-a-single-issue)\n- [Create an issue](https://developer.github.com/v3/issues/#create-an-issue)\n- [Edit an issue](https://developer.github.com/v3/issues/#edit-an-issue)\n- [Lock an issue](https://developer.github.com/v3/issues/#lock-an-issue)\n- [Unlock an issue](https://developer.github.com/v3/issues/#unlock-an-issue)\n\n#### Source Imports\n- [Start an import](https://developer.github.com/v3/migration/source_imports/#start-an-import)\n- [Get import progress](https://developer.github.com/v3/migration/source_imports/#get-import-progress)\n- [Update existing import](https://developer.github.com/v3/migration/source_imports/#update-existing-import)\n- [Get commit authors](https://developer.github.com/v3/migration/source_imports/#get-commit-authors)\n- [Map a commit author](https://developer.github.com/v3/migration/source_imports/#map-a-commit-author)\n- [Set Git LFS preference](https://developer.github.com/v3/migration/source_imports/#set-git-lfs-preference)\n- [Get large files](https://developer.github.com/v3/migration/source_imports/#get-large-files)\n- [Cancel an import](https://developer.github.com/v3/migration/source_imports/#cancel-an-import)\n\n#### Organizations\n- [List all organizations](https://developer.github.com/v3/orgs/#list-all-organizations)\n- [List user organizations](https://developer.github.com/v3/orgs/#list-user-organizations)\n\n#### Watching\n- [List watchers](https://developer.github.com/v3/activity/watching/#list-watchers)\n\n#### Starring\n- [List Stargazers](https://developer.github.com/v3/activity/starring/#list-stargazers)\n\n#### Events\n- [List public events](https://developer.github.com/v3/activity/events/#list-public-events)\n- [List repository events](https://developer.github.com/v3/activity/events/#list-repository-events)\n- [List public events for a network of repositories](https://developer.github.com/v3/activity/events/#list-public-events-for-a-network-of-repositories)\n- [List public events for an organization](https://developer.github.com/v3/activity/events/#list-public-events-for-an-organization)\n- [List events that a user has received](https://developer.github.com/v3/activity/events/#list-events-that-a-user-has-received)\n- [List public events that a user has received](https://developer.github.com/v3/activity/events/#list-public-events-that-a-user-has-received)\n- [List events performed by a user](https://developer.github.com/v3/activity/events/#list-events-performed-by-a-user)\n- [List public events performed by a user](https://developer.github.com/v3/activity/events/#list-public-events-performed-by-a-user)\n- [List events for an issue](https://developer.github.com/v3/issues/events/#list-events-for-an-issue)\n- [List events for a repository](https://developer.github.com/v3/issues/events/#list-events-for-a-repository)\n- [Get a single event](https://developer.github.com/v3/issues/events/#get-a-single-event)\n\n#### Feeds\n- [List Feeds](https://developer.github.com/v3/activity/feeds/#list-feeds)\n\n#### Meta\n- [Meta](https://developer.github.com/v3/meta/#meta)\n\n#### Codes of Conduct\n- [List all codes of conduct](https://developer.github.com/v3/codes_of_conduct/#list-all-codes-of-conduct)\n- [Get an individual code of conduct](https://developer.github.com/v3/codes_of_conduct/#get-an-individual-code-of-conduct)\n- [Get a repository's code of conduct](https://developer.github.com/v3/codes_of_conduct/#get-a-repositorys-code-of-conduct)\n\n#### Labels\n- [List all labels for this repository](https://developer.github.com/v3/issues/labels/#list-all-labels-for-this-repository)\n- [Get a single label](https://developer.github.com/v3/issues/labels/#get-a-single-label)\n- [Create a label](https://developer.github.com/v3/issues/labels/#create-a-label)\n- [Update a label](https://developer.github.com/v3/issues/labels/#update-a-label)\n- [Delete a label](https://developer.github.com/v3/issues/labels/#delete-a-label)\n- [List labels on an issue](https://developer.github.com/v3/issues/labels/#list-labels-on-an-issue)\n- [Add labels to an issue](https://developer.github.com/v3/issues/labels/#add-labels-to-an-issue)\n- [Remove a label from an issue](https://developer.github.com/v3/issues/labels/#remove-a-label-from-an-issue)\n- [Replace all labels for an issue](https://developer.github.com/v3/issues/labels/#replace-all-labels-for-an-issue)\n- [Remove all labels from an issue](https://developer.github.com/v3/issues/labels/#remove-all-labels-from-an-issue)\n- [Get labels for every issue in a milestone](https://developer.github.com/v3/issues/labels/#get-labels-for-every-issue-in-a-milestone)\n\n#### Comments\n- [List comments on an issue](https://developer.github.com/v3/issues/comments/#list-comments-on-an-issue)\n- [List comments in a repository](https://developer.github.com/v3/issues/comments/#list-comments-in-a-repository)\n- [Get a single comment](https://developer.github.com/v3/issues/comments/#get-a-single-comment)\n- [Create a comment](https://developer.github.com/v3/issues/comments/#create-a-comment)\n- [Edit a comment](https://developer.github.com/v3/issues/comments/#edit-a-comment)\n- [Delete a comment](https://developer.github.com/v3/issues/comments/#delete-a-comment)\n- [List commit comments for a repository](https://developer.github.com/v3/repos/comments/#list-commit-comments-for-a-repository)\n- [List comments for a single commit](https://developer.github.com/v3/repos/comments/#list-comments-for-a-single-commit)\n- [Create a commit comment](https://developer.github.com/v3/repos/comments/#create-a-commit-comment)\n- [Get a single commit comment](https://developer.github.com/v3/repos/comments/#get-a-single-commit-comment)\n- [Update a commit comment](https://developer.github.com/v3/repos/comments/#update-a-commit-comment)\n- [Delete a commit comment](https://developer.github.com/v3/repos/comments/#delete-a-commit-comment)\n\n#### Assignees\n- [List assignees](https://developer.github.com/v3/issues/assignees/#list-assignees)\n- [Check assignee](https://developer.github.com/v3/issues/assignees/#check-assignee)\n- [Add assignees to an issue](https://developer.github.com/v3/issues/assignees/#add-assignees-to-an-issue)\n- [Remove assignees from an issue](https://developer.github.com/v3/issues/assignees/#remove-assignees-from-an-issue)\n\n#### Milestones\n- [List milestones for a repository](https://developer.github.com/v3/issues/milestones/#list-milestones-for-a-repository)\n- [Get a single milestone](https://developer.github.com/v3/issues/milestones/#get-a-single-milestone)\n- [Create a milestone](https://developer.github.com/v3/issues/milestones/#create-a-milestone)\n- [Update a milestone](https://developer.github.com/v3/issues/milestones/#update-a-milestone)\n- [Delete a milestone](https://developer.github.com/v3/issues/milestones/#delete-a-milestone)\n\n#### Timeline\n- [List events for an issue](https://developer.github.com/v3/issues/timeline/#list-events-for-an-issue)\n\n#### Pull Requests\n- [List pull requests](https://developer.github.com/v3/pulls/#list-pull-requests)\n- [Get a single pull request](https://developer.github.com/v3/pulls/#get-a-single-pull-request)\n- [Create a pull request](https://developer.github.com/v3/pulls/#create-a-pull-request)\n- [Update a pull request](https://developer.github.com/v3/pulls/#update-a-pull-request)\n- [List commits on a pull request](https://developer.github.com/v3/pulls/#list-commits-on-a-pull-request)\n- [List pull requests files](https://developer.github.com/v3/pulls/#list-pull-requests-files)\n- [Get if a pull request has been merged](https://developer.github.com/v3/pulls/#get-if-a-pull-request-has-been-merged)\n\n#### Miscellaneous\n- [Emojis](https://developer.github.com/v3/misc/#emojis)\n\n#### Installations\n- [List repositories](https://developer.github.com/v3/apps/installations/#list-repositories)\n\n#### GitHub Apps\n- [Get a single GitHub App](https://developer.github.com/v3/apps/#get-a-single-github-app)\n- [Get the authenticated GitHub App](https://developer.github.com/v3/apps/#get-the-authenticated-github-app)\n- [Find installations](https://developer.github.com/v3/apps/#find-installations)\n- [Get a single installation](https://developer.github.com/v3/apps/#get-a-single-installation)\n- [Create a new installation token](https://developer.github.com/v3/apps/#create-a-new-installation-token)\n\n#### Users\n- [Get a single user](https://developer.github.com/v3/users/#get-a-single-user)\n- [Get all users](https://developer.github.com/v3/users/#get-all-users)\n\n#### Projects\n- [List repository projects](https://developer.github.com/v3/projects/#list-repository-projects)\n- [List organization projects](https://developer.github.com/v3/projects/#list-organization-projects)\n- [Get a project](https://developer.github.com/v3/projects/#get-a-project)\n- [Create a repository project](https://developer.github.com/v3/projects/#create-a-repository-project)\n- [Create an organization project](https://developer.github.com/v3/projects/#create-an-organization-project)\n- [Update a project](https://developer.github.com/v3/projects/#update-a-project)\n- [Delete a project](https://developer.github.com/v3/projects/#delete-a-project)\n\n#### Rate Limit\n- [Get your current rate limit status](https://developer.github.com/v3/rate_limit/#get-your-current-rate-limit-status)\n\n#### Markdown\n- [Render an arbitrary Markdown document](https://developer.github.com/v3/markdown/#render-an-arbitrary-markdown-document)\n- [Render a Markdown document in raw mode](https://developer.github.com/v3/markdown/#render-a-markdown-document-in-raw-mode)\n\n#### Forks\n- [List forks](https://developer.github.com/v3/repos/forks/#list-forks)\n- [Create a fork](https://developer.github.com/v3/repos/forks/#create-a-fork)\n\n#### Statuses\n- [Create a status](https://developer.github.com/v3/repos/statuses/#create-a-status)\n- [List statuses for a specific ref](https://developer.github.com/v3/repos/statuses/#list-statuses-for-a-specific-ref)\n- [Get the combined status for a specific ref](https://developer.github.com/v3/repos/statuses/#get-the-combined-status-for-a-specific-ref)\n\n#### Branches\n- [List branches](https://developer.github.com/v3/repos/branches/#list-branches)\n- [Get branch](https://developer.github.com/v3/repos/branches/#get-branch)\n- [Get branch protection](https://developer.github.com/v3/repos/branches/#get-branch-protection)\n- [Update branch protection](https://developer.github.com/v3/repos/branches/#update-branch-protection)\n- [Remove branch protection](https://developer.github.com/v3/repos/branches/#remove-branch-protection)\n- [Get required status checks of protected branch](https://developer.github.com/v3/repos/branches/#get-required-status-checks-of-protected-branch)\n- [Update required status checks of protected branch](https://developer.github.com/v3/repos/branches/#update-required-status-checks-of-protected-branch)\n- [Remove required status checks of protected branch](https://developer.github.com/v3/repos/branches/#remove-required-status-checks-of-protected-branch)\n- [List required status checks contexts of protected branch](https://developer.github.com/v3/repos/branches/#list-required-status-checks-contexts-of-protected-branch)\n- [Replace required status checks contexts of protected branch](https://developer.github.com/v3/repos/branches/#replace-required-status-checks-contexts-of-protected-branch)\n- [Add required status checks contexts of protected branch](https://developer.github.com/v3/repos/branches/#add-required-status-checks-contexts-of-protected-branch)\n- [Remove required status checks contexts of protected branch](https://developer.github.com/v3/repos/branches/#remove-required-status-checks-contexts-of-protected-branch)\n- [Get pull request review enforcement of protected branch](https://developer.github.com/v3/repos/branches/#get-pull-request-review-enforcement-of-protected-branch)\n- [Update pull request review enforcement of protected branch](https://developer.github.com/v3/repos/branches/#update-pull-request-review-enforcement-of-protected-branch)\n- [Remove pull request review enforcement of protected branch](https://developer.github.com/v3/repos/branches/#remove-pull-request-review-enforcement-of-protected-branch)\n- [Get required signatures of protected branch](https://developer.github.com/v3/repos/branches/#get-required-signatures-of-protected-branch)\n- [Add required signatures of protected branch](https://developer.github.com/v3/repos/branches/#add-required-signatures-of-protected-branch)\n- [Remove required signatures of protected branch](https://developer.github.com/v3/repos/branches/#remove-required-signatures-of-protected-branch)\n- [Get admin enforcement of protected branch](https://developer.github.com/v3/repos/branches/#get-admin-enforcement-of-protected-branch)\n- [Add admin enforcement of protected branch](https://developer.github.com/v3/repos/branches/#add-admin-enforcement-of-protected-branch)\n- [Remove admin enforcement of protected branch](https://developer.github.com/v3/repos/branches/#remove-admin-enforcement-of-protected-branch)\n- [Get restrictions of protected branch](https://developer.github.com/v3/repos/branches/#get-restrictions-of-protected-branch)\n- [Remove restrictions of protected branch](https://developer.github.com/v3/repos/branches/#remove-restrictions-of-protected-branch)\n- [List team restrictions of protected branch](https://developer.github.com/v3/repos/branches/#list-team-restrictions-of-protected-branch)\n- [Replace team restrictions of protected branch](https://developer.github.com/v3/repos/branches/#replace-team-restrictions-of-protected-branch)\n- [Add team restrictions of protected branch](https://developer.github.com/v3/repos/branches/#add-team-restrictions-of-protected-branch)\n- [Remove team restrictions of protected branch](https://developer.github.com/v3/repos/branches/#remove-team-restrictions-of-protected-branch)\n- [List user restrictions of protected branch](https://developer.github.com/v3/repos/branches/#list-user-restrictions-of-protected-branch)\n- [Replace user restrictions of protected branch](https://developer.github.com/v3/repos/branches/#replace-user-restrictions-of-protected-branch)\n- [Add user restrictions of protected branch](https://developer.github.com/v3/repos/branches/#add-user-restrictions-of-protected-branch)\n- [Remove user restrictions of protected branch](https://developer.github.com/v3/repos/branches/#remove-user-restrictions-of-protected-branch)\n\n#### Deploy Keys\n- [List deploy keys](https://developer.github.com/v3/repos/keys/#list-deploy-keys)\n- [Get a deploy key](https://developer.github.com/v3/repos/keys/#get-a-deploy-key)\n- [Add a new deploy key](https://developer.github.com/v3/repos/keys/#add-a-new-deploy-key)\n- [Remove a deploy key](https://developer.github.com/v3/repos/keys/#remove-a-deploy-key)\n\n#### Community Profile\n- [Retrieve community profile metrics](https://developer.github.com/v3/repos/community/#retrieve-community-profile-metrics)\n\n#### Deployments\n- [List deployments](https://developer.github.com/v3/repos/deployments/#list-deployments)\n- [Get a single deployment](https://developer.github.com/v3/repos/deployments/#get-a-single-deployment)\n- [Create a deployment](https://developer.github.com/v3/repos/deployments/#create-a-deployment)\n- [List deployment statuses](https://developer.github.com/v3/repos/deployments/#list-deployment-statuses)\n- [Get a single deployment status](https://developer.github.com/v3/repos/deployments/#get-a-single-deployment-status)\n- [Create a deployment status](https://developer.github.com/v3/repos/deployments/#create-a-deployment-status)\n\n#### Contents\n- [Get the README](https://developer.github.com/v3/repos/contents/#get-the-readme)\n- [Get contents](https://developer.github.com/v3/repos/contents/#get-contents)\n- [Create a file](https://developer.github.com/v3/repos/contents/#create-a-file)\n- [Update a file](https://developer.github.com/v3/repos/contents/#update-a-file)\n- [Delete a file](https://developer.github.com/v3/repos/contents/#delete-a-file)\n- [Get archive link](https://developer.github.com/v3/repos/contents/#get-archive-link)\n\n#### Releases\n- [List releases for a repository](https://developer.github.com/v3/repos/releases/#list-releases-for-a-repository)\n- [Get a single release](https://developer.github.com/v3/repos/releases/#get-a-single-release)\n- [Get the latest release](https://developer.github.com/v3/repos/releases/#get-the-latest-release)\n- [Get a release by tag name](https://developer.github.com/v3/repos/releases/#get-a-release-by-tag-name)\n- [Create a release](https://developer.github.com/v3/repos/releases/#create-a-release)\n- [Edit a release](https://developer.github.com/v3/repos/releases/#edit-a-release)\n- [Delete a release](https://developer.github.com/v3/repos/releases/#delete-a-release)\n- [List assets for a release](https://developer.github.com/v3/repos/releases/#list-assets-for-a-release)\n- [Upload a release asset](https://developer.github.com/v3/repos/releases/#upload-a-release-asset)\n- [Get a single release asset](https://developer.github.com/v3/repos/releases/#get-a-single-release-asset)\n- [Edit a release asset](https://developer.github.com/v3/repos/releases/#edit-a-release-asset)\n- [Delete a release asset](https://developer.github.com/v3/repos/releases/#delete-a-release-asset)\n\n#### Collaborators\n- [List collaborators](https://developer.github.com/v3/repos/collaborators/#list-collaborators)\n- [Check if a user is a collaborator](https://developer.github.com/v3/repos/collaborators/#check-if-a-user-is-a-collaborator)\n- [Review a user's permission level](https://developer.github.com/v3/repos/collaborators/#review-a-users-permission-level)\n- [Add user as a collaborator](https://developer.github.com/v3/repos/collaborators/#add-user-as-a-collaborator)\n- [Remove user as a collaborator](https://developer.github.com/v3/repos/collaborators/#remove-user-as-a-collaborator)\n\n#### Statistics\n- [Get contributors list with additions, deletions, and commit counts](https://developer.github.com/v3/repos/statistics/#get-contributors-list-with-additions-deletions-and-commit-counts)\n- [Get the last year of commit activity data](https://developer.github.com/v3/repos/statistics/#get-the-last-year-of-commit-activity-data)\n- [Get the number of additions and deletions per week](https://developer.github.com/v3/repos/statistics/#get-the-number-of-additions-and-deletions-per-week)\n- [Get the weekly commit count for the repository owner and everyone else](https://developer.github.com/v3/repos/statistics/#get-the-weekly-commit-count-for-the-repository-owner-and-everyone-else)\n- [Get the number of commits per hour in each day](https://developer.github.com/v3/repos/statistics/#get-the-number-of-commits-per-hour-in-each-day)\n\n#### Merging\n- [Perform a merge](https://developer.github.com/v3/repos/merging/#perform-a-merge)\n\n#### Pages\n- [Get information about a Pages site](https://developer.github.com/v3/repos/pages/#get-information-about-a-pages-site)\n- [Request a page build](https://developer.github.com/v3/repos/pages/#request-a-page-build)\n- [List Pages builds](https://developer.github.com/v3/repos/pages/#list-pages-builds)\n- [List latest Pages build](https://developer.github.com/v3/repos/pages/#list-latest-pages-build)\n- [List a specific Pages build](https://developer.github.com/v3/repos/pages/#list-a-specific-pages-build)\n\n#### Members\n- [Members list](https://developer.github.com/v3/orgs/members/#members-list)\n- [Check membership](https://developer.github.com/v3/orgs/members/#check-membership)\n- [Remove a member](https://developer.github.com/v3/orgs/members/#remove-a-member)\n- [Get organization membership](https://developer.github.com/v3/orgs/members/#get-organization-membership)\n- [Add or update organization membership](https://developer.github.com/v3/orgs/members/#add-or-update-organization-membership)\n- [Remove organization membership](https://developer.github.com/v3/orgs/members/#remove-organization-membership)\n\n#### Outside Collaborators\n- [List outside collaborators](https://developer.github.com/v3/orgs/outside_collaborators/#list-outside-collaborators)\n- [Remove outside collaborator](https://developer.github.com/v3/orgs/outside_collaborators/#remove-outside-collaborator)\n- [Convert member to outside collaborator](https://developer.github.com/v3/orgs/outside_collaborators/#convert-member-to-outside-collaborator)\n\n#### Licenses\n- [List all licenses](https://developer.github.com/v3/licenses/#list-all-licenses)\n- [Get an individual license](https://developer.github.com/v3/licenses/#get-an-individual-license)\n\n#### Reactions\n- [List reactions for a commit comment](https://developer.github.com/v3/reactions/#list-reactions-for-a-commit-comment)\n- [List reactions for an issue](https://developer.github.com/v3/reactions/#list-reactions-for-an-issue)\n- [List reactions for an issue comment](https://developer.github.com/v3/reactions/#list-reactions-for-an-issue-comment)\n- [List reactions for a pull request review comment](https://developer.github.com/v3/reactions/#list-reactions-for-a-pull-request-review-comment)\n- [List reactions for a team discussion](https://developer.github.com/v3/reactions/#list-reactions-for-a-team-discussion)\n- [List reactions for a team discussion comment](https://developer.github.com/v3/reactions/#list-reactions-for-a-team-discussion-comment)\n\n#### Public Keys\n- [List public keys for a user](https://developer.github.com/v3/users/keys/#list-public-keys-for-a-user)\n\n#### Team Members\n- [List team members](https://developer.github.com/v3/teams/members/#list-team-members)\n- [Get team member](https://developer.github.com/v3/teams/members/#get-team-member)\n- [Get team membership](https://developer.github.com/v3/teams/members/#get-team-membership)\n- [Add or update team membership](https://developer.github.com/v3/teams/members/#add-or-update-team-membership)\n- [Remove team membership](https://developer.github.com/v3/teams/members/#remove-team-membership)\n- [List pending team invitations](https://developer.github.com/v3/teams/members/#list-pending-team-invitations)\n\n#### Team Discussion Comments\n- [List comments](https://developer.github.com/v3/teams/discussion_comments/#list-comments)\n- [Get a single comment](https://developer.github.com/v3/teams/discussion_comments/#get-a-single-comment)\n- [Create a comment](https://developer.github.com/v3/teams/discussion_comments/#create-a-comment)\n- [Edit a comment](https://developer.github.com/v3/teams/discussion_comments/#edit-a-comment)\n- [Delete a comment](https://developer.github.com/v3/teams/discussion_comments/#delete-a-comment)\n\n#### Team Discussions\n- [List discussions](https://developer.github.com/v3/teams/discussions/#list-discussions)\n- [Get a single discussion](https://developer.github.com/v3/teams/discussions/#get-a-single-discussion)\n- [Create a discussion](https://developer.github.com/v3/teams/discussions/#create-a-discussion)\n- [Edit a discussion](https://developer.github.com/v3/teams/discussions/#edit-a-discussion)\n- [Delete a discussion](https://developer.github.com/v3/teams/discussions/#delete-a-discussion)\n\n#### Overview\n- [Root endpoint](https://developer.github.com/v3/#root-endpoint)\n\n#### Repositories\n- [List user repositories](https://developer.github.com/v3/repos/#list-user-repositories)\n- [List all public repositories](https://developer.github.com/v3/repos/#list-all-public-repositories)\n- [Create](https://developer.github.com/v3/repos/#create)\n- [Get](https://developer.github.com/v3/repos/#get)\n- [Edit](https://developer.github.com/v3/repos/#edit)\n- [List all topics for a repository](https://developer.github.com/v3/repos/#list-all-topics-for-a-repository)\n- [Replace all topics for a repository](https://developer.github.com/v3/repos/#replace-all-topics-for-a-repository)\n- [List contributors](https://developer.github.com/v3/repos/#list-contributors)\n- [List languages](https://developer.github.com/v3/repos/#list-languages)\n- [List teams](https://developer.github.com/v3/repos/#list-teams)\n- [List tags](https://developer.github.com/v3/repos/#list-tags)\n- [Delete a repository](https://developer.github.com/v3/repos/#delete-a-repository)\n\n#### Project columns\n- [Get a project column](https://developer.github.com/v3/projects/columns/#get-a-project-column)\n- [Create a project column](https://developer.github.com/v3/projects/columns/#create-a-project-column)\n- [Update a project column](https://developer.github.com/v3/projects/columns/#update-a-project-column)\n- [Delete a project column](https://developer.github.com/v3/projects/columns/#delete-a-project-column)\n- [Move a project column](https://developer.github.com/v3/projects/columns/#move-a-project-column)\n\n#### Project cards\n- [List project cards](https://developer.github.com/v3/projects/cards/#list-project-cards)\n- [Get a project card](https://developer.github.com/v3/projects/cards/#get-a-project-card)\n- [Create a project card](https://developer.github.com/v3/projects/cards/#create-a-project-card)\n- [Update a project card](https://developer.github.com/v3/projects/cards/#update-a-project-card)\n- [Delete a project card](https://developer.github.com/v3/projects/cards/#delete-a-project-card)\n- [Move a project card](https://developer.github.com/v3/projects/cards/#move-a-project-card)\n\n#### Search\n- [Search repositories](https://developer.github.com/v3/search/#search-repositories)\n- [Search commits](https://developer.github.com/v3/search/#search-commits)\n- [Search code](https://developer.github.com/v3/search/#search-code)\n- [Search issues](https://developer.github.com/v3/search/#search-issues)\n- [Search users](https://developer.github.com/v3/search/#search-users)\n- [Search topics](https://developer.github.com/v3/search/#search-topics)\n- [Search labels](https://developer.github.com/v3/search/#search-labels)\n\n# [GitHub Marketplace](https://developer.github.com/v3/apps/marketplace/)\n\n**Note:** The The GitHub Marketplace API on GitHub is currently available for developers to preview. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.valkyrie-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nFor more information about GitHub Marketplace, see \"[GitHub Marketplace](https://developer.github.com/apps/marketplace/).\"\n\n**Note:** This preview includes methods for testing with **stubbed data**. Stubbed data is fake data that's useful for testing your GitHub Apps. Stubbed data is hard-coded and will not change based on actual subscriptions.\n\nTo test with stubbed data, use a stubbed endpoint in place of its production counterpart. This allows you to test whether API logic succeeds before listing GitHub Apps on GitHub Marketplace.\n\nBe sure to replace stubbed endpoints with production endpoints before deploying your GitHub App.\n\nEndpoints for ```/marketplace_listing/*``` and ```/user/marketplace_purchases``` are only accessible by OAuth Apps using ```client_id``` and ```secret``` basic authentication or by [GitHub Apps using a JWT](https://developer.github.com/apps/building-github-apps/authentication-options-for-github-apps/#authenticating-as-a-github-app).\n-\n\nFor API authentication for GitHub Marketplace listings associated with an OAuth App, see \"[Authorization options for OAuth Apps](https://developer.github.com/apps/building-oauth-apps/authorization-options-for-oauth-apps/).\"\n-\n\nFor API authentication for GitHub Marketplace listings associated with a GitHub App, see \"[Authentication options for GitHub Apps](https://developer.github.com/apps/building-github-apps/authentication-options-for-github-apps/).\"\n\n# [Installations](https://developer.github.com/v3/apps/installations/)\n\nFor information on how to authenticate as an installation, see \"[Authentication Options for GitHub Apps](https://developer.github.com/apps/building-github-apps/authentication-options-for-github-apps#authenticating-as-an-installation).\"\n\n**Note:** To access the API with your integration, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` Header for your requests.\n\n```\napplication/vnd.github.machine-man-preview+json\n```","name":"github-apps","x-swgg-descriptionLineList":["# [GitHub Apps](https://developer.github.com/v3/apps/)","","For information on how to authenticate as a GitHub App, see \"[Authentication Options for GitHub Apps](https://developer.github.com/apps/building-github-apps/authentication-options-for-github-apps#authenticating-as-a-github-app).\"","","**Note:** To access the API with your integration, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` Header for your requests.","","```","application/vnd.github.machine-man-preview+json","```","","# [GitHub App Permissions](https://developer.github.com/v3/apps/permissions/)","","**Note:** To access the API with your integration, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` Header for your requests.","","```","application/vnd.github.machine-man-preview+json","```","","GitHub Apps are created with a set of permissions. These define what resources the GitHub App can access via the API. For more information, see \"[Permissions for GitHub Apps](https://developer.github.com/apps/building-github-apps/permissions-for-github-apps/).\"","","# [GitHub Apps: Available Endpoints](https://developer.github.com/v3/apps/available-endpoints/)","","**Note:** To access the API with your integration, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` Header for your requests.","","```","application/vnd.github.machine-man-preview+json","```","","The following endpoints are available for use by GitHub Apps. For more information, see \"[GitHub Apps](https://developer.github.com/apps/building-github-apps/).\"","","#### Review Comments","- [List comments on a pull request](https://developer.github.com/v3/pulls/comments/#list-comments-on-a-pull-request)","- [List comments in a repository](https://developer.github.com/v3/pulls/comments/#list-comments-in-a-repository)","- [Get a single comment](https://developer.github.com/v3/pulls/comments/#get-a-single-comment)","- [Create a comment](https://developer.github.com/v3/pulls/comments/#create-a-comment)","- [Edit a comment](https://developer.github.com/v3/pulls/comments/#edit-a-comment)","- [Delete a comment](https://developer.github.com/v3/pulls/comments/#delete-a-comment)","","#### Reviews","- [Get a single review](https://developer.github.com/v3/pulls/reviews/#get-a-single-review)","- [Get comments for a single review](https://developer.github.com/v3/pulls/reviews/#get-comments-for-a-single-review)","- [Create a pull request review](https://developer.github.com/v3/pulls/reviews/#create-a-pull-request-review)","","#### Teams","- [List teams](https://developer.github.com/v3/teams/#list-teams)","- [Get team](https://developer.github.com/v3/teams/#get-team)","- [Edit team](https://developer.github.com/v3/teams/#edit-team)","- [Delete team](https://developer.github.com/v3/teams/#delete-team)","- [List child teams](https://developer.github.com/v3/teams/#list-child-teams)","- [List team repos](https://developer.github.com/v3/teams/#list-team-repos)","","#### Commits","- [Get a Commit](https://developer.github.com/v3/git/commits/#get-a-commit)","- [Create a Commit](https://developer.github.com/v3/git/commits/#create-a-commit)","- [List commits on a repository](https://developer.github.com/v3/repos/commits/#list-commits-on-a-repository)","- [Get a single commit](https://developer.github.com/v3/repos/commits/#get-a-single-commit)","- [Get the SHA-1 of a commit reference](https://developer.github.com/v3/repos/commits/#get-the-sha-1-of-a-commit-reference)","","#### Tags","- [Get a Tag](https://developer.github.com/v3/git/tags/#get-a-tag)","- [Create a Tag Object](https://developer.github.com/v3/git/tags/#create-a-tag-object)","","#### Blobs","- [Get a Blob](https://developer.github.com/v3/git/blobs/#get-a-blob)","- [Create a Blob](https://developer.github.com/v3/git/blobs/#create-a-blob)","","#### Trees","- [Get a Tree](https://developer.github.com/v3/git/trees/#get-a-tree)","- [Create a Tree](https://developer.github.com/v3/git/trees/#create-a-tree)","","#### References","- [Get a Reference](https://developer.github.com/v3/git/refs/#get-a-reference)","- [Get all References](https://developer.github.com/v3/git/refs/#get-all-references)","- [Create a Reference](https://developer.github.com/v3/git/refs/#create-a-reference)","- [Update a Reference](https://developer.github.com/v3/git/refs/#update-a-reference)","- [Delete a Reference](https://developer.github.com/v3/git/refs/#delete-a-reference)","","#### Issues","- [List issues for a repository](https://developer.github.com/v3/issues/#list-issues-for-a-repository)","- [Get a single issue](https://developer.github.com/v3/issues/#get-a-single-issue)","- [Create an issue](https://developer.github.com/v3/issues/#create-an-issue)","- [Edit an issue](https://developer.github.com/v3/issues/#edit-an-issue)","- [Lock an issue](https://developer.github.com/v3/issues/#lock-an-issue)","- [Unlock an issue](https://developer.github.com/v3/issues/#unlock-an-issue)","","#### Source Imports","- [Start an import](https://developer.github.com/v3/migration/source_imports/#start-an-import)","- [Get import progress](https://developer.github.com/v3/migration/source_imports/#get-import-progress)","- [Update existing import](https://developer.github.com/v3/migration/source_imports/#update-existing-import)","- [Get commit authors](https://developer.github.com/v3/migration/source_imports/#get-commit-authors)","- [Map a commit author](https://developer.github.com/v3/migration/source_imports/#map-a-commit-author)","- [Set Git LFS preference](https://developer.github.com/v3/migration/source_imports/#set-git-lfs-preference)","- [Get large files](https://developer.github.com/v3/migration/source_imports/#get-large-files)","- [Cancel an import](https://developer.github.com/v3/migration/source_imports/#cancel-an-import)","","#### Organizations","- [List all organizations](https://developer.github.com/v3/orgs/#list-all-organizations)","- [List user organizations](https://developer.github.com/v3/orgs/#list-user-organizations)","","#### Watching","- [List watchers](https://developer.github.com/v3/activity/watching/#list-watchers)","","#### Starring","- [List Stargazers](https://developer.github.com/v3/activity/starring/#list-stargazers)","","#### Events","- [List public events](https://developer.github.com/v3/activity/events/#list-public-events)","- [List repository events](https://developer.github.com/v3/activity/events/#list-repository-events)","- [List public events for a network of repositories](https://developer.github.com/v3/activity/events/#list-public-events-for-a-network-of-repositories)","- [List public events for an organization](https://developer.github.com/v3/activity/events/#list-public-events-for-an-organization)","- [List events that a user has received](https://developer.github.com/v3/activity/events/#list-events-that-a-user-has-received)","- [List public events that a user has received](https://developer.github.com/v3/activity/events/#list-public-events-that-a-user-has-received)","- [List events performed by a user](https://developer.github.com/v3/activity/events/#list-events-performed-by-a-user)","- [List public events performed by a user](https://developer.github.com/v3/activity/events/#list-public-events-performed-by-a-user)","- [List events for an issue](https://developer.github.com/v3/issues/events/#list-events-for-an-issue)","- [List events for a repository](https://developer.github.com/v3/issues/events/#list-events-for-a-repository)","- [Get a single event](https://developer.github.com/v3/issues/events/#get-a-single-event)","","#### Feeds","- [List Feeds](https://developer.github.com/v3/activity/feeds/#list-feeds)","","#### Meta","- [Meta](https://developer.github.com/v3/meta/#meta)","","#### Codes of Conduct","- [List all codes of conduct](https://developer.github.com/v3/codes_of_conduct/#list-all-codes-of-conduct)","- [Get an individual code of conduct](https://developer.github.com/v3/codes_of_conduct/#get-an-individual-code-of-conduct)","- [Get a repository's code of conduct](https://developer.github.com/v3/codes_of_conduct/#get-a-repositorys-code-of-conduct)","","#### Labels","- [List all labels for this repository](https://developer.github.com/v3/issues/labels/#list-all-labels-for-this-repository)","- [Get a single label](https://developer.github.com/v3/issues/labels/#get-a-single-label)","- [Create a label](https://developer.github.com/v3/issues/labels/#create-a-label)","- [Update a label](https://developer.github.com/v3/issues/labels/#update-a-label)","- [Delete a label](https://developer.github.com/v3/issues/labels/#delete-a-label)","- [List labels on an issue](https://developer.github.com/v3/issues/labels/#list-labels-on-an-issue)","- [Add labels to an issue](https://developer.github.com/v3/issues/labels/#add-labels-to-an-issue)","- [Remove a label from an issue](https://developer.github.com/v3/issues/labels/#remove-a-label-from-an-issue)","- [Replace all labels for an issue](https://developer.github.com/v3/issues/labels/#replace-all-labels-for-an-issue)","- [Remove all labels from an issue](https://developer.github.com/v3/issues/labels/#remove-all-labels-from-an-issue)","- [Get labels for every issue in a milestone](https://developer.github.com/v3/issues/labels/#get-labels-for-every-issue-in-a-milestone)","","#### Comments","- [List comments on an issue](https://developer.github.com/v3/issues/comments/#list-comments-on-an-issue)","- [List comments in a repository](https://developer.github.com/v3/issues/comments/#list-comments-in-a-repository)","- [Get a single comment](https://developer.github.com/v3/issues/comments/#get-a-single-comment)","- [Create a comment](https://developer.github.com/v3/issues/comments/#create-a-comment)","- [Edit a comment](https://developer.github.com/v3/issues/comments/#edit-a-comment)","- [Delete a comment](https://developer.github.com/v3/issues/comments/#delete-a-comment)","- [List commit comments for a repository](https://developer.github.com/v3/repos/comments/#list-commit-comments-for-a-repository)","- [List comments for a single commit](https://developer.github.com/v3/repos/comments/#list-comments-for-a-single-commit)","- [Create a commit comment](https://developer.github.com/v3/repos/comments/#create-a-commit-comment)","- [Get a single commit comment](https://developer.github.com/v3/repos/comments/#get-a-single-commit-comment)","- [Update a commit comment](https://developer.github.com/v3/repos/comments/#update-a-commit-comment)","- [Delete a commit comment](https://developer.github.com/v3/repos/comments/#delete-a-commit-comment)","","#### Assignees","- [List assignees](https://developer.github.com/v3/issues/assignees/#list-assignees)","- [Check assignee](https://developer.github.com/v3/issues/assignees/#check-assignee)","- [Add assignees to an issue](https://developer.github.com/v3/issues/assignees/#add-assignees-to-an-issue)","- [Remove assignees from an issue](https://developer.github.com/v3/issues/assignees/#remove-assignees-from-an-issue)","","#### Milestones","- [List milestones for a repository](https://developer.github.com/v3/issues/milestones/#list-milestones-for-a-repository)","- [Get a single milestone](https://developer.github.com/v3/issues/milestones/#get-a-single-milestone)","- [Create a milestone](https://developer.github.com/v3/issues/milestones/#create-a-milestone)","- [Update a milestone](https://developer.github.com/v3/issues/milestones/#update-a-milestone)","- [Delete a milestone](https://developer.github.com/v3/issues/milestones/#delete-a-milestone)","","#### Timeline","- [List events for an issue](https://developer.github.com/v3/issues/timeline/#list-events-for-an-issue)","","#### Pull Requests","- [List pull requests](https://developer.github.com/v3/pulls/#list-pull-requests)","- [Get a single pull request](https://developer.github.com/v3/pulls/#get-a-single-pull-request)","- [Create a pull request](https://developer.github.com/v3/pulls/#create-a-pull-request)","- [Update a pull request](https://developer.github.com/v3/pulls/#update-a-pull-request)","- [List commits on a pull request](https://developer.github.com/v3/pulls/#list-commits-on-a-pull-request)","- [List pull requests files](https://developer.github.com/v3/pulls/#list-pull-requests-files)","- [Get if a pull request has been merged](https://developer.github.com/v3/pulls/#get-if-a-pull-request-has-been-merged)","","#### Miscellaneous","- [Emojis](https://developer.github.com/v3/misc/#emojis)","","#### Installations","- [List repositories](https://developer.github.com/v3/apps/installations/#list-repositories)","","#### GitHub Apps","- [Get a single GitHub App](https://developer.github.com/v3/apps/#get-a-single-github-app)","- [Get the authenticated GitHub App](https://developer.github.com/v3/apps/#get-the-authenticated-github-app)","- [Find installations](https://developer.github.com/v3/apps/#find-installations)","- [Get a single installation](https://developer.github.com/v3/apps/#get-a-single-installation)","- [Create a new installation token](https://developer.github.com/v3/apps/#create-a-new-installation-token)","","#### Users","- [Get a single user](https://developer.github.com/v3/users/#get-a-single-user)","- [Get all users](https://developer.github.com/v3/users/#get-all-users)","","#### Projects","- [List repository projects](https://developer.github.com/v3/projects/#list-repository-projects)","- [List organization projects](https://developer.github.com/v3/projects/#list-organization-projects)","- [Get a project](https://developer.github.com/v3/projects/#get-a-project)","- [Create a repository project](https://developer.github.com/v3/projects/#create-a-repository-project)","- [Create an organization project](https://developer.github.com/v3/projects/#create-an-organization-project)","- [Update a project](https://developer.github.com/v3/projects/#update-a-project)","- [Delete a project](https://developer.github.com/v3/projects/#delete-a-project)","","#### Rate Limit","- [Get your current rate limit status](https://developer.github.com/v3/rate_limit/#get-your-current-rate-limit-status)","","#### Markdown","- [Render an arbitrary Markdown document](https://developer.github.com/v3/markdown/#render-an-arbitrary-markdown-document)","- [Render a Markdown document in raw mode](https://developer.github.com/v3/markdown/#render-a-markdown-document-in-raw-mode)","","#### Forks","- [List forks](https://developer.github.com/v3/repos/forks/#list-forks)","- [Create a fork](https://developer.github.com/v3/repos/forks/#create-a-fork)","","#### Statuses","- [Create a status](https://developer.github.com/v3/repos/statuses/#create-a-status)","- [List statuses for a specific ref](https://developer.github.com/v3/repos/statuses/#list-statuses-for-a-specific-ref)","- [Get the combined status for a specific ref](https://developer.github.com/v3/repos/statuses/#get-the-combined-status-for-a-specific-ref)","","#### Branches","- [List branches](https://developer.github.com/v3/repos/branches/#list-branches)","- [Get branch](https://developer.github.com/v3/repos/branches/#get-branch)","- [Get branch protection](https://developer.github.com/v3/repos/branches/#get-branch-protection)","- [Update branch protection](https://developer.github.com/v3/repos/branches/#update-branch-protection)","- [Remove branch protection](https://developer.github.com/v3/repos/branches/#remove-branch-protection)","- [Get required status checks of protected branch](https://developer.github.com/v3/repos/branches/#get-required-status-checks-of-protected-branch)","- [Update required status checks of protected branch](https://developer.github.com/v3/repos/branches/#update-required-status-checks-of-protected-branch)","- [Remove required status checks of protected branch](https://developer.github.com/v3/repos/branches/#remove-required-status-checks-of-protected-branch)","- [List required status checks contexts of protected branch](https://developer.github.com/v3/repos/branches/#list-required-status-checks-contexts-of-protected-branch)","- [Replace required status checks contexts of protected branch](https://developer.github.com/v3/repos/branches/#replace-required-status-checks-contexts-of-protected-branch)","- [Add required status checks contexts of protected branch](https://developer.github.com/v3/repos/branches/#add-required-status-checks-contexts-of-protected-branch)","- [Remove required status checks contexts of protected branch](https://developer.github.com/v3/repos/branches/#remove-required-status-checks-contexts-of-protected-branch)","- [Get pull request review enforcement of protected branch](https://developer.github.com/v3/repos/branches/#get-pull-request-review-enforcement-of-protected-branch)","- [Update pull request review enforcement of protected branch](https://developer.github.com/v3/repos/branches/#update-pull-request-review-enforcement-of-protected-branch)","- [Remove pull request review enforcement of protected branch](https://developer.github.com/v3/repos/branches/#remove-pull-request-review-enforcement-of-protected-branch)","- [Get required signatures of protected branch](https://developer.github.com/v3/repos/branches/#get-required-signatures-of-protected-branch)","- [Add required signatures of protected branch](https://developer.github.com/v3/repos/branches/#add-required-signatures-of-protected-branch)","- [Remove required signatures of protected branch](https://developer.github.com/v3/repos/branches/#remove-required-signatures-of-protected-branch)","- [Get admin enforcement of protected branch](https://developer.github.com/v3/repos/branches/#get-admin-enforcement-of-protected-branch)","- [Add admin enforcement of protected branch](https://developer.github.com/v3/repos/branches/#add-admin-enforcement-of-protected-branch)","- [Remove admin enforcement of protected branch](https://developer.github.com/v3/repos/branches/#remove-admin-enforcement-of-protected-branch)","- [Get restrictions of protected branch](https://developer.github.com/v3/repos/branches/#get-restrictions-of-protected-branch)","- [Remove restrictions of protected branch](https://developer.github.com/v3/repos/branches/#remove-restrictions-of-protected-branch)","- [List team restrictions of protected branch](https://developer.github.com/v3/repos/branches/#list-team-restrictions-of-protected-branch)","- [Replace team restrictions of protected branch](https://developer.github.com/v3/repos/branches/#replace-team-restrictions-of-protected-branch)","- [Add team restrictions of protected branch](https://developer.github.com/v3/repos/branches/#add-team-restrictions-of-protected-branch)","- [Remove team restrictions of protected branch](https://developer.github.com/v3/repos/branches/#remove-team-restrictions-of-protected-branch)","- [List user restrictions of protected branch](https://developer.github.com/v3/repos/branches/#list-user-restrictions-of-protected-branch)","- [Replace user restrictions of protected branch](https://developer.github.com/v3/repos/branches/#replace-user-restrictions-of-protected-branch)","- [Add user restrictions of protected branch](https://developer.github.com/v3/repos/branches/#add-user-restrictions-of-protected-branch)","- [Remove user restrictions of protected branch](https://developer.github.com/v3/repos/branches/#remove-user-restrictions-of-protected-branch)","","#### Deploy Keys","- [List deploy keys](https://developer.github.com/v3/repos/keys/#list-deploy-keys)","- [Get a deploy key](https://developer.github.com/v3/repos/keys/#get-a-deploy-key)","- [Add a new deploy key](https://developer.github.com/v3/repos/keys/#add-a-new-deploy-key)","- [Remove a deploy key](https://developer.github.com/v3/repos/keys/#remove-a-deploy-key)","","#### Community Profile","- [Retrieve community profile metrics](https://developer.github.com/v3/repos/community/#retrieve-community-profile-metrics)","","#### Deployments","- [List deployments](https://developer.github.com/v3/repos/deployments/#list-deployments)","- [Get a single deployment](https://developer.github.com/v3/repos/deployments/#get-a-single-deployment)","- [Create a deployment](https://developer.github.com/v3/repos/deployments/#create-a-deployment)","- [List deployment statuses](https://developer.github.com/v3/repos/deployments/#list-deployment-statuses)","- [Get a single deployment status](https://developer.github.com/v3/repos/deployments/#get-a-single-deployment-status)","- [Create a deployment status](https://developer.github.com/v3/repos/deployments/#create-a-deployment-status)","","#### Contents","- [Get the README](https://developer.github.com/v3/repos/contents/#get-the-readme)","- [Get contents](https://developer.github.com/v3/repos/contents/#get-contents)","- [Create a file](https://developer.github.com/v3/repos/contents/#create-a-file)","- [Update a file](https://developer.github.com/v3/repos/contents/#update-a-file)","- [Delete a file](https://developer.github.com/v3/repos/contents/#delete-a-file)","- [Get archive link](https://developer.github.com/v3/repos/contents/#get-archive-link)","","#### Releases","- [List releases for a repository](https://developer.github.com/v3/repos/releases/#list-releases-for-a-repository)","- [Get a single release](https://developer.github.com/v3/repos/releases/#get-a-single-release)","- [Get the latest release](https://developer.github.com/v3/repos/releases/#get-the-latest-release)","- [Get a release by tag name](https://developer.github.com/v3/repos/releases/#get-a-release-by-tag-name)","- [Create a release](https://developer.github.com/v3/repos/releases/#create-a-release)","- [Edit a release](https://developer.github.com/v3/repos/releases/#edit-a-release)","- [Delete a release](https://developer.github.com/v3/repos/releases/#delete-a-release)","- [List assets for a release](https://developer.github.com/v3/repos/releases/#list-assets-for-a-release)","- [Upload a release asset](https://developer.github.com/v3/repos/releases/#upload-a-release-asset)","- [Get a single release asset](https://developer.github.com/v3/repos/releases/#get-a-single-release-asset)","- [Edit a release asset](https://developer.github.com/v3/repos/releases/#edit-a-release-asset)","- [Delete a release asset](https://developer.github.com/v3/repos/releases/#delete-a-release-asset)","","#### Collaborators","- [List collaborators](https://developer.github.com/v3/repos/collaborators/#list-collaborators)","- [Check if a user is a collaborator](https://developer.github.com/v3/repos/collaborators/#check-if-a-user-is-a-collaborator)","- [Review a user's permission level](https://developer.github.com/v3/repos/collaborators/#review-a-users-permission-level)","- [Add user as a collaborator](https://developer.github.com/v3/repos/collaborators/#add-user-as-a-collaborator)","- [Remove user as a collaborator](https://developer.github.com/v3/repos/collaborators/#remove-user-as-a-collaborator)","","#### Statistics","- [Get contributors list with additions, deletions, and commit counts](https://developer.github.com/v3/repos/statistics/#get-contributors-list-with-additions-deletions-and-commit-counts)","- [Get the last year of commit activity data](https://developer.github.com/v3/repos/statistics/#get-the-last-year-of-commit-activity-data)","- [Get the number of additions and deletions per week](https://developer.github.com/v3/repos/statistics/#get-the-number-of-additions-and-deletions-per-week)","- [Get the weekly commit count for the repository owner and everyone else](https://developer.github.com/v3/repos/statistics/#get-the-weekly-commit-count-for-the-repository-owner-and-everyone-else)","- [Get the number of commits per hour in each day](https://developer.github.com/v3/repos/statistics/#get-the-number-of-commits-per-hour-in-each-day)","","#### Merging","- [Perform a merge](https://developer.github.com/v3/repos/merging/#perform-a-merge)","","#### Pages","- [Get information about a Pages site](https://developer.github.com/v3/repos/pages/#get-information-about-a-pages-site)","- [Request a page build](https://developer.github.com/v3/repos/pages/#request-a-page-build)","- [List Pages builds](https://developer.github.com/v3/repos/pages/#list-pages-builds)","- [List latest Pages build](https://developer.github.com/v3/repos/pages/#list-latest-pages-build)","- [List a specific Pages build](https://developer.github.com/v3/repos/pages/#list-a-specific-pages-build)","","#### Members","- [Members list](https://developer.github.com/v3/orgs/members/#members-list)","- [Check membership](https://developer.github.com/v3/orgs/members/#check-membership)","- [Remove a member](https://developer.github.com/v3/orgs/members/#remove-a-member)","- [Get organization membership](https://developer.github.com/v3/orgs/members/#get-organization-membership)","- [Add or update organization membership](https://developer.github.com/v3/orgs/members/#add-or-update-organization-membership)","- [Remove organization membership](https://developer.github.com/v3/orgs/members/#remove-organization-membership)","","#### Outside Collaborators","- [List outside collaborators](https://developer.github.com/v3/orgs/outside_collaborators/#list-outside-collaborators)","- [Remove outside collaborator](https://developer.github.com/v3/orgs/outside_collaborators/#remove-outside-collaborator)","- [Convert member to outside collaborator](https://developer.github.com/v3/orgs/outside_collaborators/#convert-member-to-outside-collaborator)","","#### Licenses","- [List all licenses](https://developer.github.com/v3/licenses/#list-all-licenses)","- [Get an individual license](https://developer.github.com/v3/licenses/#get-an-individual-license)","","#### Reactions","- [List reactions for a commit comment](https://developer.github.com/v3/reactions/#list-reactions-for-a-commit-comment)","- [List reactions for an issue](https://developer.github.com/v3/reactions/#list-reactions-for-an-issue)","- [List reactions for an issue comment](https://developer.github.com/v3/reactions/#list-reactions-for-an-issue-comment)","- [List reactions for a pull request review comment](https://developer.github.com/v3/reactions/#list-reactions-for-a-pull-request-review-comment)","- [List reactions for a team discussion](https://developer.github.com/v3/reactions/#list-reactions-for-a-team-discussion)","- [List reactions for a team discussion comment](https://developer.github.com/v3/reactions/#list-reactions-for-a-team-discussion-comment)","","#### Public Keys","- [List public keys for a user](https://developer.github.com/v3/users/keys/#list-public-keys-for-a-user)","","#### Team Members","- [List team members](https://developer.github.com/v3/teams/members/#list-team-members)","- [Get team member](https://developer.github.com/v3/teams/members/#get-team-member)","- [Get team membership](https://developer.github.com/v3/teams/members/#get-team-membership)","- [Add or update team membership](https://developer.github.com/v3/teams/members/#add-or-update-team-membership)","- [Remove team membership](https://developer.github.com/v3/teams/members/#remove-team-membership)","- [List pending team invitations](https://developer.github.com/v3/teams/members/#list-pending-team-invitations)","","#### Team Discussion Comments","- [List comments](https://developer.github.com/v3/teams/discussion_comments/#list-comments)","- [Get a single comment](https://developer.github.com/v3/teams/discussion_comments/#get-a-single-comment)","- [Create a comment](https://developer.github.com/v3/teams/discussion_comments/#create-a-comment)","- [Edit a comment](https://developer.github.com/v3/teams/discussion_comments/#edit-a-comment)","- [Delete a comment](https://developer.github.com/v3/teams/discussion_comments/#delete-a-comment)","","#### Team Discussions","- [List discussions](https://developer.github.com/v3/teams/discussions/#list-discussions)","- [Get a single discussion](https://developer.github.com/v3/teams/discussions/#get-a-single-discussion)","- [Create a discussion](https://developer.github.com/v3/teams/discussions/#create-a-discussion)","- [Edit a discussion](https://developer.github.com/v3/teams/discussions/#edit-a-discussion)","- [Delete a discussion](https://developer.github.com/v3/teams/discussions/#delete-a-discussion)","","#### Overview","- [Root endpoint](https://developer.github.com/v3/#root-endpoint)","","#### Repositories","- [List user repositories](https://developer.github.com/v3/repos/#list-user-repositories)","- [List all public repositories](https://developer.github.com/v3/repos/#list-all-public-repositories)","- [Create](https://developer.github.com/v3/repos/#create)","- [Get](https://developer.github.com/v3/repos/#get)","- [Edit](https://developer.github.com/v3/repos/#edit)","- [List all topics for a repository](https://developer.github.com/v3/repos/#list-all-topics-for-a-repository)","- [Replace all topics for a repository](https://developer.github.com/v3/repos/#replace-all-topics-for-a-repository)","- [List contributors](https://developer.github.com/v3/repos/#list-contributors)","- [List languages](https://developer.github.com/v3/repos/#list-languages)","- [List teams](https://developer.github.com/v3/repos/#list-teams)","- [List tags](https://developer.github.com/v3/repos/#list-tags)","- [Delete a repository](https://developer.github.com/v3/repos/#delete-a-repository)","","#### Project columns","- [Get a project column](https://developer.github.com/v3/projects/columns/#get-a-project-column)","- [Create a project column](https://developer.github.com/v3/projects/columns/#create-a-project-column)","- [Update a project column](https://developer.github.com/v3/projects/columns/#update-a-project-column)","- [Delete a project column](https://developer.github.com/v3/projects/columns/#delete-a-project-column)","- [Move a project column](https://developer.github.com/v3/projects/columns/#move-a-project-column)","","#### Project cards","- [List project cards](https://developer.github.com/v3/projects/cards/#list-project-cards)","- [Get a project card](https://developer.github.com/v3/projects/cards/#get-a-project-card)","- [Create a project card](https://developer.github.com/v3/projects/cards/#create-a-project-card)","- [Update a project card](https://developer.github.com/v3/projects/cards/#update-a-project-card)","- [Delete a project card](https://developer.github.com/v3/projects/cards/#delete-a-project-card)","- [Move a project card](https://developer.github.com/v3/projects/cards/#move-a-project-card)","","#### Search","- [Search repositories](https://developer.github.com/v3/search/#search-repositories)","- [Search commits](https://developer.github.com/v3/search/#search-commits)","- [Search code](https://developer.github.com/v3/search/#search-code)","- [Search issues](https://developer.github.com/v3/search/#search-issues)","- [Search users](https://developer.github.com/v3/search/#search-users)","- [Search topics](https://developer.github.com/v3/search/#search-topics)","- [Search labels](https://developer.github.com/v3/search/#search-labels)","","# [GitHub Marketplace](https://developer.github.com/v3/apps/marketplace/)","","**Note:** The The GitHub Marketplace API on GitHub is currently available for developers to preview. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.valkyrie-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","For more information about GitHub Marketplace, see \"[GitHub Marketplace](https://developer.github.com/apps/marketplace/).\"","","**Note:** This preview includes methods for testing with **stubbed data**. Stubbed data is fake data that's useful for testing your GitHub Apps. Stubbed data is hard-coded and will not change based on actual subscriptions.","","To test with stubbed data, use a stubbed endpoint in place of its production counterpart. This allows you to test whether API logic succeeds before listing GitHub Apps on GitHub Marketplace.","","Be sure to replace stubbed endpoints with production endpoints before deploying your GitHub App.","","Endpoints for ```/marketplace_listing/*``` and ```/user/marketplace_purchases``` are only accessible by OAuth Apps using ```client_id``` and ```secret``` basic authentication or by [GitHub Apps using a JWT](https://developer.github.com/apps/building-github-apps/authentication-options-for-github-apps/#authenticating-as-a-github-app).","-","","For API authentication for GitHub Marketplace listings associated with an OAuth App, see \"[Authorization options for OAuth Apps](https://developer.github.com/apps/building-oauth-apps/authorization-options-for-oauth-apps/).\"","-","","For API authentication for GitHub Marketplace listings associated with a GitHub App, see \"[Authentication options for GitHub Apps](https://developer.github.com/apps/building-github-apps/authentication-options-for-github-apps/).\"","","# [Installations](https://developer.github.com/v3/apps/installations/)","","For information on how to authenticate as an installation, see \"[Authentication Options for GitHub Apps](https://developer.github.com/apps/building-github-apps/authentication-options-for-github-apps#authenticating-as-an-installation).\"","","**Note:** To access the API with your integration, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` Header for your requests.","","```","application/vnd.github.machine-man-preview+json","```"]},{"description":"# [Gists](https://developer.github.com/v3/gists/)\n\n**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.jean-grey-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nCustom media types\n\nThe following media types are supported when fetching gist contents. You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).\n```\napplication/vnd.github.VERSION.raw\napplication/vnd.github.VERSION.base64\n```\n\n# [Gist Comments](https://developer.github.com/v3/gists/comments/)\n\nGist Comments use [these custom media types](https://developer.github.com/v3/gists/comments/#custom-media-types). You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).\n\nCustom media types\n\nThese are the supported media types for gist comments. You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).\n```\napplication/vnd.github.VERSION.raw+json\napplication/vnd.github.VERSION.text+json\napplication/vnd.github.VERSION.html+json\napplication/vnd.github.VERSION.full+json\n```","name":"github-gists","x-swgg-descriptionLineList":["# [Gists](https://developer.github.com/v3/gists/)","","**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.jean-grey-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","Custom media types","","The following media types are supported when fetching gist contents. You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).","```","application/vnd.github.VERSION.raw","application/vnd.github.VERSION.base64","```","","# [Gist Comments](https://developer.github.com/v3/gists/comments/)","","Gist Comments use [these custom media types](https://developer.github.com/v3/gists/comments/#custom-media-types). You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).","","Custom media types","","These are the supported media types for gist comments. You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).","```","application/vnd.github.VERSION.raw+json","application/vnd.github.VERSION.text+json","application/vnd.github.VERSION.html+json","application/vnd.github.VERSION.full+json","```"]},{"description":"# [Git Data](https://developer.github.com/v3/git/)\n\nThe Git Database API gives you access to read and write raw Git objects to your Git database on GitHub and to list and update your references (branch heads and tags).\n\nThis basically allows you to reimplement a lot of Git functionality over our API - by creating raw objects directly into the database and updating branch references you could technically do just about anything that Git can do without having Git installed.\n\nGit DB API functions will return a ```409 Conflict``` if the git repository for a Repository is empty or unavailable.  This typically means it is being created still. Contact [GitHub support](https://github.com/contact) if this response status persists.\n\nFor more information on the Git object database, please read the [Git Internals](http://git-scm.com/book/en/v1/Git-Internals) chapter of the Pro Git book.\n\nAs an example, if you wanted to commit a change to a file in your repository, you would:\n- get the current commit object\n- retrieve the tree it points to\n- retrieve the content of the blob object that tree has for that particular file path\n- change the content somehow and post a new blob object with that new content, getting a blob SHA back\n- post a new tree object with that file path pointer replaced with your new blob SHA getting a tree SHA back\n- create a new commit object with the current commit SHA as the parent and the new tree SHA, getting a commit SHA back\n- update the reference of your branch to point to the new commit SHA\n\nIt might seem complex, but it's actually pretty simple when you understand the model and it opens up a ton of things you could potentially do with the API.\n\n# [Git Blobs](https://developer.github.com/v3/git/blobs/)\n\nBlobs leverage [these custom media types](https://developer.github.com/v3/git/blobs/#custom-media-types). You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).\n\n**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.jean-grey-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nCustom media types\n\nThese are the supported media types for blobs. You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).\n```\napplication/json\napplication/vnd.github.VERSION.raw\n```\n\n# [Git Commits](https://developer.github.com/v3/git/commits/)\n\n**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.jean-grey-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\n# [Git Refs](https://developer.github.com/v3/git/refs/)\n\n**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.jean-grey-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\n# [Git Tags](https://developer.github.com/v3/git/tags/)\n\nThis tags API only deals with tag objects - so only annotated tags, not lightweight tags.\n\n**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.jean-grey-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\n# [Git Trees](https://developer.github.com/v3/git/trees/)\n\nno description","name":"github-git","x-swgg-descriptionLineList":["# [Git Data](https://developer.github.com/v3/git/)","","The Git Database API gives you access to read and write raw Git objects to your Git database on GitHub and to list and update your references (branch heads and tags).","","This basically allows you to reimplement a lot of Git functionality over our API - by creating raw objects directly into the database and updating branch references you could technically do just about anything that Git can do without having Git installed.","","Git DB API functions will return a ```409 Conflict``` if the git repository for a Repository is empty or unavailable.  This typically means it is being created still. Contact [GitHub support](https://github.com/contact) if this response status persists.","","For more information on the Git object database, please read the [Git Internals](http://git-scm.com/book/en/v1/Git-Internals) chapter of the Pro Git book.","","As an example, if you wanted to commit a change to a file in your repository, you would:","- get the current commit object","- retrieve the tree it points to","- retrieve the content of the blob object that tree has for that particular file path","- change the content somehow and post a new blob object with that new content, getting a blob SHA back","- post a new tree object with that file path pointer replaced with your new blob SHA getting a tree SHA back","- create a new commit object with the current commit SHA as the parent and the new tree SHA, getting a commit SHA back","- update the reference of your branch to point to the new commit SHA","","It might seem complex, but it's actually pretty simple when you understand the model and it opens up a ton of things you could potentially do with the API.","","# [Git Blobs](https://developer.github.com/v3/git/blobs/)","","Blobs leverage [these custom media types](https://developer.github.com/v3/git/blobs/#custom-media-types). You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).","","**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.jean-grey-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","Custom media types","","These are the supported media types for blobs. You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).","```","application/json","application/vnd.github.VERSION.raw","```","","# [Git Commits](https://developer.github.com/v3/git/commits/)","","**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.jean-grey-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","# [Git Refs](https://developer.github.com/v3/git/refs/)","","**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.jean-grey-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","# [Git Tags](https://developer.github.com/v3/git/tags/)","","This tags API only deals with tag objects - so only annotated tags, not lightweight tags.","","**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.jean-grey-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","# [Git Trees](https://developer.github.com/v3/git/trees/)","","no description"]},{"description":"# [Issues](https://developer.github.com/v3/issues/)\n\nIssues use [these custom media types](https://developer.github.com/v3/issues/#custom-media-types). You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).\n\n**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.jean-grey-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nCustom media types\n\nThese are the supported media types for issues. You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).\n```\napplication/vnd.github.VERSION.raw+json\napplication/vnd.github.VERSION.text+json\napplication/vnd.github.VERSION.html+json\napplication/vnd.github.VERSION.full+json\n```\n\n# [Issue Assignees](https://developer.github.com/v3/issues/assignees/)\n\nno description\n\n# [Issue Comments](https://developer.github.com/v3/issues/comments/)\n\nThe Issue Comments API supports listing, viewing, editing, and creating comments on issues and pull requests.\n\nIssue Comments use [these custom media types](https://developer.github.com/v3/issues/comments/#custom-media-types). You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).\n\nCustom media types\n\nThese are the supported media types for issue comments. You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).\n```\napplication/vnd.github.VERSION.raw+json\napplication/vnd.github.VERSION.text+json\napplication/vnd.github.VERSION.html+json\napplication/vnd.github.VERSION.full+json\n```\n\n# [Issue Events](https://developer.github.com/v3/issues/events/)\n\nRecords various events that occur around an issue or pull request. This is useful both for display on issue/pull request information pages and also to determine who should be notified of comments.\n\n####  Attributes\n- id - The Integer ID of the event.\n- url - The API URL for fetching the event.\n- actor - The User object that generated the event.\n- commit_id - The String SHA of a commit that referenced this Issue\n- commit_url - The GitHub API link to a commit that referenced this Issue\n- event - Identifies the actual type of Event that occurred.\n- created_at - The timestamp indicating when the event occurred.\n- labels - The Labels object, including `name` and `color` attributes. Only provided for `labeled` and `unlabeled` events.\n- assignee - The User object which was assigned to (or unassigned from) this Issue. Only provided for 'assigned' and 'unassigned' events.\n- assigner - The User object that performed the assignment (or unassignment) for this Issue. Only provided for 'assigned' and 'unassigned' events.\n- review_requester - The User who requested a review. Only provided for 'review_requested' and 'review_request_removed' events.\n- requested_reviewers - The Users whose reviews were requested. Only provided for 'review_requested' and 'review_request_removed' events.\n- lock_reason - The reason an issue or pull request conversation was locked, if one was provided. Only provided for `locked` events.\n- dismissed_review - A `dismissed_review` object that includes the `state`, `review_id`, `dismissal_message`, and `dismissal_commit_id` (the ID of the commit that dismissed the review) if one exists. Possible `state` strings include `commented`, `approved`, or `changes_requested`. Only provided for `review_dismissed` events.\n- milestone - The Milestone object including a `title` attribute. Only provided for `milestoned` and   `demilestoned` events.\n- rename - An object containing rename details including `from` and `to` attributes. Only   provided for `renamed` events.\n\n####  Events\n- closed - The issue was closed by the actor. When the commit_id is present, it   identifies the commit that closed the issue using \"closes / fixes #NN\"   syntax.\n- reopened - The issue was reopened by the actor.\n- subscribed - The actor subscribed to receive notifications for an issue.\n- merged - The issue was merged by the actor. The `commit_id` attribute is the SHA1 of   the HEAD commit that was merged.\n- referenced - The issue was referenced from a commit message. The `commit_id` attribute is   the commit SHA1 of where that happened.\n- mentioned - The actor was @mentioned in an issue body.\n- assigned - The issue was assigned to the actor.\n- unassigned - The actor was unassigned from the issue.\n- labeled - A label was added to the issue.\n- unlabeled - A label was removed from the issue.\n- milestoned - The issue was added to a milestone.\n- demilestoned - The issue was removed from a milestone.\n- renamed - The issue title was changed.\n- locked - The issue was locked by the actor.\n- unlocked - The issue was unlocked by the actor.\n- head_ref_deleted - The pull request's branch was deleted.\n- head_ref_restored - The pull request's branch was restored.\n- review_dismissed - The actor dismissed a review from the pull request.\n- review_requested - The actor requested review from the subject on this pull request.\n- review_request_removed - The actor removed the review request for the subject on this pull request.\n- marked_as_duplicate - A user with write permissions marked an issue as a duplicate of another issue or a pull request as a duplicate of another pull request.\n- unmarked_as_duplicate - An issue that a user had previously marked as a duplicate of another issue is no longer considered a duplicate, or a pull request that a user had previously marked as a duplicate of another pull request is no longer considered a duplicate.\n- added_to_project - The issue was added to a project board.\n- moved_columns_in_project - The issue was moved between columns in a project board.\n- removed_from_project - The issue was removed from a project board.\n- converted_note_to_issue - The issue was created by converting a note in a project board to an issue.\n\n**Note**: The project-related events ```added_to_project```, ```moved_columns_in_project```, ```removed_from_project```, and ```converted_note_to_issue``` will not be included in the response if project boards have been [disabled](https://help.github.com/articles/disabling-project-boards-in-a-repository) in the repository.\n\n# [Issue Labels](https://developer.github.com/v3/issues/labels/)\n\n**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.jean-grey-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\n# [Issue Milestones](https://developer.github.com/v3/issues/milestones/)\n\n**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.jean-grey-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\n# [Issue Timeline](https://developer.github.com/v3/issues/timeline/)\n\nThe API to get issue timeline events is currently available for developers to preview.   During the preview period, the APIs may change without advance notice.   Please see the [blog post](https://developer.github.com/changes/2016-05-23-timeline-preview-api/) for full details.\n\nTo access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.mockingbird-preview\n```\n\n####  Timeline\n- [List events for an issue](https://developer.github.com/v3/issues/timeline/#list-events-for-an-issue)\n\nRecords various events that occur around an issue or pull request. This is useful both for display on issue and pull request information pages, as well as to determine who should be notified of comments.\n\n####  Attributes\n- id - The Integer ID of the event.\n- url - The API URL for fetching the event.\n- actor - The User object that generated the event.\n- commit_id - The String SHA of a commit that referenced this Issue.\n- event - Identifies the actual type of Event that occurred.\n- created_at - The timestamp indicating when the event occurred.\n- label - The Label object including `name` and `color` attributes. Only provided for `labeled`   and `unlabeled` events.\n- assignee - The User object which was assigned to (or unassigned from) this Issue. Only provided for `assigned` and `unassigned` events.\n- dismissed_review - A `dismissed_review` object that includes the `state`, `review_id`, `dismissal_message`, and `dismissal_commit_id` (the ID of the commit that dismissed the review) if one exists. Possible `state` strings include `commented`, `approved`, or `changes_requested`. Only provided for `review_dismissed` events.\n- milestone - The Milestone object including a `title` attribute. Only provided for `milestoned` and   `demilestoned` events.\n- source - The `id`, `actor`, and `url` for the source of a reference from another issue. Only provided for `cross-referenced` events.\n- rename - An object containing rename details including `from` and `to` attributes. Only   provided for `renamed` events.\n\n####  Events\n- added_to_project - The issue was added to a project board.\n- assigned - The issue was assigned to the assignee.\n- closed - The issue was closed by the actor. When the commit_id is present, it   identifies the commit that closed the issue using \"closes / fixes #NN\"   syntax.\n- commented - A comment was added to the issue.\n- committed - A commit was added to the pull request's `HEAD` branch. Only provided for pull requests.\n- converted_note_to_issue - The issue was created by converting a note in a project board to an issue.\n- cross-referenced - The issue was referenced from another issue. The `source` attribute contains the `id`, `actor`, and `url` of the reference's source.\n- demilestoned - The issue was removed from a milestone.\n- head_ref_deleted - The pull request's branch was deleted.\n- head_ref_restored - The pull request's branch was restored.\n- labeled - A label was added to the issue.\n- locked - The issue was locked by the actor.\n- marked_as_duplicate - A user with write permissions marked an issue as a duplicate of another issue or a pull request as a duplicate of another pull request.\n- mentioned - The actor was @mentioned in an issue body.\n- merged - The issue was merged by the actor. The `commit_id` attribute is the SHA1 of   the HEAD commit that was merged.\n- milestoned - The issue was added to a milestone.\n- moved_columns_in_project - The issue was moved between columns in a project board.\n- referenced - The issue was referenced from a commit message. The `commit_id` attribute is   the commit SHA1 of where that happened.\n- removed_from_project - The issue was removed from a project board.\n- renamed - The issue title was changed.\n- reopened - The issue was reopened by the actor.\n- review_dismissed - The actor dismissed a review from the pull request.\n- review_requested - The actor requested a review from the subject on this pull request.\n- review_request_removed - The actor removed the review request for the subject on this pull request.\n- subscribed - The actor subscribed to receive notifications for an issue.\n- unassigned - The assignee was unassigned from the issue.\n- unlabeled - A label was removed from the issue.\n- unlocked - The issue was unlocked by the actor.\n- unmarked_as_duplicate - An issue that a user had previously marked as a duplicate of another issue is no longer considered a duplicate, or a pull request that a user had previously marked as a duplicate of another pull request is no longer considered a duplicate.\n- unsubscribed - The actor unsubscribed to stop receiving notifications for an issue.\n\n**Note**: The project-related events ```added_to_project```, ```moved_columns_in_project```, ```removed_from_project```, and ```converted_note_to_issue``` will not be included in the response if project boards have been [disabled](https://help.github.com/articles/disabling-project-boards-in-a-repository) in the repository.","name":"github-issues","x-swgg-descriptionLineList":["# [Issues](https://developer.github.com/v3/issues/)","","Issues use [these custom media types](https://developer.github.com/v3/issues/#custom-media-types). You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).","","**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.jean-grey-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","Custom media types","","These are the supported media types for issues. You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).","```","application/vnd.github.VERSION.raw+json","application/vnd.github.VERSION.text+json","application/vnd.github.VERSION.html+json","application/vnd.github.VERSION.full+json","```","","# [Issue Assignees](https://developer.github.com/v3/issues/assignees/)","","no description","","# [Issue Comments](https://developer.github.com/v3/issues/comments/)","","The Issue Comments API supports listing, viewing, editing, and creating comments on issues and pull requests.","","Issue Comments use [these custom media types](https://developer.github.com/v3/issues/comments/#custom-media-types). You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).","","Custom media types","","These are the supported media types for issue comments. You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).","```","application/vnd.github.VERSION.raw+json","application/vnd.github.VERSION.text+json","application/vnd.github.VERSION.html+json","application/vnd.github.VERSION.full+json","```","","# [Issue Events](https://developer.github.com/v3/issues/events/)","","Records various events that occur around an issue or pull request. This is useful both for display on issue/pull request information pages and also to determine who should be notified of comments.","","####  Attributes","- id - The Integer ID of the event.","- url - The API URL for fetching the event.","- actor - The User object that generated the event.","- commit_id - The String SHA of a commit that referenced this Issue","- commit_url - The GitHub API link to a commit that referenced this Issue","- event - Identifies the actual type of Event that occurred.","- created_at - The timestamp indicating when the event occurred.","- labels - The Labels object, including `name` and `color` attributes. Only provided for `labeled` and `unlabeled` events.","- assignee - The User object which was assigned to (or unassigned from) this Issue. Only provided for 'assigned' and 'unassigned' events.","- assigner - The User object that performed the assignment (or unassignment) for this Issue. Only provided for 'assigned' and 'unassigned' events.","- review_requester - The User who requested a review. Only provided for 'review_requested' and 'review_request_removed' events.","- requested_reviewers - The Users whose reviews were requested. Only provided for 'review_requested' and 'review_request_removed' events.","- lock_reason - The reason an issue or pull request conversation was locked, if one was provided. Only provided for `locked` events.","- dismissed_review - A `dismissed_review` object that includes the `state`, `review_id`, `dismissal_message`, and `dismissal_commit_id` (the ID of the commit that dismissed the review) if one exists. Possible `state` strings include `commented`, `approved`, or `changes_requested`. Only provided for `review_dismissed` events.","- milestone - The Milestone object including a `title` attribute. Only provided for `milestoned` and   `demilestoned` events.","- rename - An object containing rename details including `from` and `to` attributes. Only   provided for `renamed` events.","","####  Events","- closed - The issue was closed by the actor. When the commit_id is present, it   identifies the commit that closed the issue using \"closes / fixes #NN\"   syntax.","- reopened - The issue was reopened by the actor.","- subscribed - The actor subscribed to receive notifications for an issue.","- merged - The issue was merged by the actor. The `commit_id` attribute is the SHA1 of   the HEAD commit that was merged.","- referenced - The issue was referenced from a commit message. The `commit_id` attribute is   the commit SHA1 of where that happened.","- mentioned - The actor was @mentioned in an issue body.","- assigned - The issue was assigned to the actor.","- unassigned - The actor was unassigned from the issue.","- labeled - A label was added to the issue.","- unlabeled - A label was removed from the issue.","- milestoned - The issue was added to a milestone.","- demilestoned - The issue was removed from a milestone.","- renamed - The issue title was changed.","- locked - The issue was locked by the actor.","- unlocked - The issue was unlocked by the actor.","- head_ref_deleted - The pull request's branch was deleted.","- head_ref_restored - The pull request's branch was restored.","- review_dismissed - The actor dismissed a review from the pull request.","- review_requested - The actor requested review from the subject on this pull request.","- review_request_removed - The actor removed the review request for the subject on this pull request.","- marked_as_duplicate - A user with write permissions marked an issue as a duplicate of another issue or a pull request as a duplicate of another pull request.","- unmarked_as_duplicate - An issue that a user had previously marked as a duplicate of another issue is no longer considered a duplicate, or a pull request that a user had previously marked as a duplicate of another pull request is no longer considered a duplicate.","- added_to_project - The issue was added to a project board.","- moved_columns_in_project - The issue was moved between columns in a project board.","- removed_from_project - The issue was removed from a project board.","- converted_note_to_issue - The issue was created by converting a note in a project board to an issue.","","**Note**: The project-related events ```added_to_project```, ```moved_columns_in_project```, ```removed_from_project```, and ```converted_note_to_issue``` will not be included in the response if project boards have been [disabled](https://help.github.com/articles/disabling-project-boards-in-a-repository) in the repository.","","# [Issue Labels](https://developer.github.com/v3/issues/labels/)","","**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.jean-grey-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","# [Issue Milestones](https://developer.github.com/v3/issues/milestones/)","","**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.jean-grey-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","# [Issue Timeline](https://developer.github.com/v3/issues/timeline/)","","The API to get issue timeline events is currently available for developers to preview.   During the preview period, the APIs may change without advance notice.   Please see the [blog post](https://developer.github.com/changes/2016-05-23-timeline-preview-api/) for full details.","","To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.mockingbird-preview","```","","####  Timeline","- [List events for an issue](https://developer.github.com/v3/issues/timeline/#list-events-for-an-issue)","","Records various events that occur around an issue or pull request. This is useful both for display on issue and pull request information pages, as well as to determine who should be notified of comments.","","####  Attributes","- id - The Integer ID of the event.","- url - The API URL for fetching the event.","- actor - The User object that generated the event.","- commit_id - The String SHA of a commit that referenced this Issue.","- event - Identifies the actual type of Event that occurred.","- created_at - The timestamp indicating when the event occurred.","- label - The Label object including `name` and `color` attributes. Only provided for `labeled`   and `unlabeled` events.","- assignee - The User object which was assigned to (or unassigned from) this Issue. Only provided for `assigned` and `unassigned` events.","- dismissed_review - A `dismissed_review` object that includes the `state`, `review_id`, `dismissal_message`, and `dismissal_commit_id` (the ID of the commit that dismissed the review) if one exists. Possible `state` strings include `commented`, `approved`, or `changes_requested`. Only provided for `review_dismissed` events.","- milestone - The Milestone object including a `title` attribute. Only provided for `milestoned` and   `demilestoned` events.","- source - The `id`, `actor`, and `url` for the source of a reference from another issue. Only provided for `cross-referenced` events.","- rename - An object containing rename details including `from` and `to` attributes. Only   provided for `renamed` events.","","####  Events","- added_to_project - The issue was added to a project board.","- assigned - The issue was assigned to the assignee.","- closed - The issue was closed by the actor. When the commit_id is present, it   identifies the commit that closed the issue using \"closes / fixes #NN\"   syntax.","- commented - A comment was added to the issue.","- committed - A commit was added to the pull request's `HEAD` branch. Only provided for pull requests.","- converted_note_to_issue - The issue was created by converting a note in a project board to an issue.","- cross-referenced - The issue was referenced from another issue. The `source` attribute contains the `id`, `actor`, and `url` of the reference's source.","- demilestoned - The issue was removed from a milestone.","- head_ref_deleted - The pull request's branch was deleted.","- head_ref_restored - The pull request's branch was restored.","- labeled - A label was added to the issue.","- locked - The issue was locked by the actor.","- marked_as_duplicate - A user with write permissions marked an issue as a duplicate of another issue or a pull request as a duplicate of another pull request.","- mentioned - The actor was @mentioned in an issue body.","- merged - The issue was merged by the actor. The `commit_id` attribute is the SHA1 of   the HEAD commit that was merged.","- milestoned - The issue was added to a milestone.","- moved_columns_in_project - The issue was moved between columns in a project board.","- referenced - The issue was referenced from a commit message. The `commit_id` attribute is   the commit SHA1 of where that happened.","- removed_from_project - The issue was removed from a project board.","- renamed - The issue title was changed.","- reopened - The issue was reopened by the actor.","- review_dismissed - The actor dismissed a review from the pull request.","- review_requested - The actor requested a review from the subject on this pull request.","- review_request_removed - The actor removed the review request for the subject on this pull request.","- subscribed - The actor subscribed to receive notifications for an issue.","- unassigned - The assignee was unassigned from the issue.","- unlabeled - A label was removed from the issue.","- unlocked - The issue was unlocked by the actor.","- unmarked_as_duplicate - An issue that a user had previously marked as a duplicate of another issue is no longer considered a duplicate, or a pull request that a user had previously marked as a duplicate of another pull request is no longer considered a duplicate.","- unsubscribed - The actor unsubscribed to stop receiving notifications for an issue.","","**Note**: The project-related events ```added_to_project```, ```moved_columns_in_project```, ```removed_from_project```, and ```converted_note_to_issue``` will not be included in the response if project boards have been [disabled](https://help.github.com/articles/disabling-project-boards-in-a-repository) in the repository."]},{"description":"# [Migration](https://developer.github.com/v3/migration/)\n\nThese APIs help you move projects to or from GitHub.\n\n# [Migrations](https://developer.github.com/v3/migration/migrations/)\n\nThe Migrations API is only available to [authenticated](https://developer.github.com/v3/#authentication) organization [owners](https://help.github.com/articles/permission-levels-for-an-organization/).\n\nTo access the Migrations API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.wyandotte-preview+json\n```\n\n# [Source Imports](https://developer.github.com/v3/migration/source_imports/)\n\nThe source import APIs are currently in public preview. During this period, the APIs may change in a backwards-incompatible way.  To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.barred-rock-preview\n```\n\nThe Source Import API lets you start an import from a Git, Subversion, Mercurial, or Team Foundation Server source repository. This is the same functionality as [the GitHub Importer](https://help.github.com/articles/importing-from-other-version-control-systems-to-github/).\n\nA typical source import would [start the import](https://developer.github.com/v3/migration/source_imports/#start-an-import) and then (optionally) [update the authors](https://developer.github.com/v3/migration/source_imports/#map-a-commit-author) and/or [set the preference](https://developer.github.com/v3/migration/source_imports/#set-git-lfs-preference) for using Git LFS if large files exist in the import. A more detailed example can be seen in this diagram:\n```\n+---------+                     +--------+                              +---------------------+\n| Tooling |                     | GitHub |                              | Original Repository |\n+---------+                     +--------+                              +---------------------+\n     |                              |                                              |\n     |  Start import                |                                              |\n     |-----------------------------&gt;|                                              |\n     |                              |                                              |\n     |                              |  Download source data                        |\n     |                              |---------------------------------------------&gt;|\n     |                              |                        Begin streaming data  |\n     |                              |&lt;---------------------------------------------|\n     |                              |                                              |\n     |  Get import progress         |                                              |\n     |-----------------------------&gt;|                                              |\n     |       \"status\": \"importing\"  |                                              |\n     |&lt;-----------------------------|                                              |\n     |                              |                                              |\n     |  Get commit authors          |                                              |\n     |-----------------------------&gt;|                                              |\n     |                              |                                              |\n     |  Map a commit author         |                                              |\n     |-----------------------------&gt;|                                              |\n     |                              |                                              |\n     |                              |                                              |\n     |                              |                       Finish streaming data  |\n     |                              |&lt;---------------------------------------------|\n     |                              |                                              |\n     |                              |  Rewrite commits with mapped authors         |\n     |                              |------+                                       |\n     |                              |      |                                       |\n     |                              |&lt;-----+                                       |\n     |                              |                                              |\n     |                              |  Update repository on GitHub                 |\n     |                              |------+                                       |\n     |                              |      |                                       |\n     |                              |&lt;-----+                                       |\n     |                              |                                              |\n     |  Map a commit author         |                                              |\n     |-----------------------------&gt;|                                              |\n     |                              |  Rewrite commits with mapped authors         |\n     |                              |------+                                       |\n     |                              |      |                                       |\n     |                              |&lt;-----+                                       |\n     |                              |                                              |\n     |                              |  Update repository on GitHub                 |\n     |                              |------+                                       |\n     |                              |      |                                       |\n     |                              |&lt;-----+                                       |\n     |                              |                                              |\n     |  Get large files             |                                              |\n     |-----------------------------&gt;|                                              |\n     |                              |                                              |\n     |  opt_in to Git LFS           |                                              |\n     |-----------------------------&gt;|                                              |\n     |                              |  Rewrite commits for large files             |\n     |                              |------+                                       |\n     |                              |      |                                       |\n     |                              |&lt;-----+                                       |\n     |                              |                                              |\n     |                              |  Update repository on GitHub                 |\n     |                              |------+                                       |\n     |                              |      |                                       |\n     |                              |&lt;-----+                                       |\n     |                              |                                              |\n     |  Get import progress         |                                              |\n     |-----------------------------&gt;|                                              |\n     |        \"status\": \"complete\"  |                                              |\n     |&lt;-----------------------------|                                              |\n     |                              |                                              |\n     |                              |                                              |\n```","name":"github-migration","x-swgg-descriptionLineList":["# [Migration](https://developer.github.com/v3/migration/)","","These APIs help you move projects to or from GitHub.","","# [Migrations](https://developer.github.com/v3/migration/migrations/)","","The Migrations API is only available to [authenticated](https://developer.github.com/v3/#authentication) organization [owners](https://help.github.com/articles/permission-levels-for-an-organization/).","","To access the Migrations API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.wyandotte-preview+json","```","","# [Source Imports](https://developer.github.com/v3/migration/source_imports/)","","The source import APIs are currently in public preview. During this period, the APIs may change in a backwards-incompatible way.  To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.barred-rock-preview","```","","The Source Import API lets you start an import from a Git, Subversion, Mercurial, or Team Foundation Server source repository. This is the same functionality as [the GitHub Importer](https://help.github.com/articles/importing-from-other-version-control-systems-to-github/).","","A typical source import would [start the import](https://developer.github.com/v3/migration/source_imports/#start-an-import) and then (optionally) [update the authors](https://developer.github.com/v3/migration/source_imports/#map-a-commit-author) and/or [set the preference](https://developer.github.com/v3/migration/source_imports/#set-git-lfs-preference) for using Git LFS if large files exist in the import. A more detailed example can be seen in this diagram:","```","+---------+                     +--------+                              +---------------------+","| Tooling |                     | GitHub |                              | Original Repository |","+---------+                     +--------+                              +---------------------+","     |                              |                                              |","     |  Start import                |                                              |","     |-----------------------------&gt;|                                              |","     |                              |                                              |","     |                              |  Download source data                        |","     |                              |---------------------------------------------&gt;|","     |                              |                        Begin streaming data  |","     |                              |&lt;---------------------------------------------|","     |                              |                                              |","     |  Get import progress         |                                              |","     |-----------------------------&gt;|                                              |","     |       \"status\": \"importing\"  |                                              |","     |&lt;-----------------------------|                                              |","     |                              |                                              |","     |  Get commit authors          |                                              |","     |-----------------------------&gt;|                                              |","     |                              |                                              |","     |  Map a commit author         |                                              |","     |-----------------------------&gt;|                                              |","     |                              |                                              |","     |                              |                                              |","     |                              |                       Finish streaming data  |","     |                              |&lt;---------------------------------------------|","     |                              |                                              |","     |                              |  Rewrite commits with mapped authors         |","     |                              |------+                                       |","     |                              |      |                                       |","     |                              |&lt;-----+                                       |","     |                              |                                              |","     |                              |  Update repository on GitHub                 |","     |                              |------+                                       |","     |                              |      |                                       |","     |                              |&lt;-----+                                       |","     |                              |                                              |","     |  Map a commit author         |                                              |","     |-----------------------------&gt;|                                              |","     |                              |  Rewrite commits with mapped authors         |","     |                              |------+                                       |","     |                              |      |                                       |","     |                              |&lt;-----+                                       |","     |                              |                                              |","     |                              |  Update repository on GitHub                 |","     |                              |------+                                       |","     |                              |      |                                       |","     |                              |&lt;-----+                                       |","     |                              |                                              |","     |  Get large files             |                                              |","     |-----------------------------&gt;|                                              |","     |                              |                                              |","     |  opt_in to Git LFS           |                                              |","     |-----------------------------&gt;|                                              |","     |                              |  Rewrite commits for large files             |","     |                              |------+                                       |","     |                              |      |                                       |","     |                              |&lt;-----+                                       |","     |                              |                                              |","     |                              |  Update repository on GitHub                 |","     |                              |------+                                       |","     |                              |      |                                       |","     |                              |&lt;-----+                                       |","     |                              |                                              |","     |  Get import progress         |                                              |","     |-----------------------------&gt;|                                              |","     |        \"status\": \"complete\"  |                                              |","     |&lt;-----------------------------|                                              |","     |                              |                                              |","     |                              |                                              |","```"]},{"description":"# [Miscellaneous](https://developer.github.com/v3/misc/)\n\nThis is a miscellaneous set of APIs which provide access to top level GitHub resources and info.\n\n# [Codes of Conduct](https://developer.github.com/v3/codes_of_conduct/)\n\nThe Codes of Conduct API is currently available for developers to preview.   During the preview period, the API may change without advance notice.\n\nTo access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.scarlet-witch-preview+json\n```\n\n# [Emojis](https://developer.github.com/v3/emojis/)\n\nLists all the emojis available to use on GitHub.\n\n# [Gitignore](https://developer.github.com/v3/gitignore/)\n\nWhen you create a new GitHub repository via the API, you can specify a [.gitignore template](https://help.github.com/articles/ignoring-files) to apply to the repository upon creation. The .gitignore Templates API lists and fetches templates from the [GitHub .gitignore repository](https://github.com/github/gitignore).\n\n# [Licenses](https://developer.github.com/v3/licenses/)\n\nThe Licenses API returns metadata about popular open source licenses and information about a particular project's license file.\n\nThe Licenses API uses [the open source Ruby Gem Licensee](https://github.com/benbalter/licensee) to attempt to identify the project's license. Licensee matches the contents of a project's ```LICENSE``` file (if it exists) against a short list of known licenses. As a result, the API does not take into account the licenses of project dependencies or other means of documenting a project's license such as references to the license name in the documentation.\n\nIf a license is matched, the license key and name returned conforms to the [SPDX specification](https://spdx.org/).\n\n**Note:** These endpoints will also return a repository's license information:\n- [Get a repository](https://developer.github.com/v3/repos/#get)\n- [List user repositories](https://developer.github.com/v3/repos/#list-user-repositories)\n- [List organization repositories](https://developer.github.com/v3/repos/#list-organization-repositories)\n- [List forks](https://developer.github.com/v3/repos/forks/#list-forks)\n- [List repositories being watched](https://developer.github.com/v3/activity/watching/#list-repositories-being-watched)\n- [List team repos](https://developer.github.com/v3/teams/#list-team-repos)\n\nGitHub is a lot of things, but it’s not a law firm. As such, GitHub does not provide legal advice. Using the Licenses API or sending us an email about it does not constitute legal advice nor does it create an attorney-client relationship. If you have any questions about what you can and can't do with a particular license, you should consult with your own legal counsel before moving forward. In fact, you should always consult with your own lawyer before making any decisions that might have legal ramifications or that may impact your legal rights.\n\nGitHub created the License API to help users get information about open source licenses and the projects that use them. We hope it helps, but please keep in mind that we’re not lawyers (at least not most of us aren't) and that we make mistakes like everyone else. For that reason, GitHub provides the API on an “as-is” basis and makes no warranties regarding any information or licenses provided on or through it, and disclaims liability for damages resulting from using the API.\n\n# [Markdown](https://developer.github.com/v3/markdown/)\n\nno description\n\n# [Meta](https://developer.github.com/v3/meta/)\n\nThis endpoint provides information about GitHub.com, the service.\n\n# [Rate Limit](https://developer.github.com/v3/rate_limit/)\n\nThe overview documentation describes the [rate limit rules](https://developer.github.com/v3/#rate-limiting). You can check your current rate limit status at any time using the Rate Limit API described below.","name":"github-misc","x-swgg-descriptionLineList":["# [Miscellaneous](https://developer.github.com/v3/misc/)","","This is a miscellaneous set of APIs which provide access to top level GitHub resources and info.","","# [Codes of Conduct](https://developer.github.com/v3/codes_of_conduct/)","","The Codes of Conduct API is currently available for developers to preview.   During the preview period, the API may change without advance notice.","","To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.scarlet-witch-preview+json","```","","# [Emojis](https://developer.github.com/v3/emojis/)","","Lists all the emojis available to use on GitHub.","","# [Gitignore](https://developer.github.com/v3/gitignore/)","","When you create a new GitHub repository via the API, you can specify a [.gitignore template](https://help.github.com/articles/ignoring-files) to apply to the repository upon creation. The .gitignore Templates API lists and fetches templates from the [GitHub .gitignore repository](https://github.com/github/gitignore).","","# [Licenses](https://developer.github.com/v3/licenses/)","","The Licenses API returns metadata about popular open source licenses and information about a particular project's license file.","","The Licenses API uses [the open source Ruby Gem Licensee](https://github.com/benbalter/licensee) to attempt to identify the project's license. Licensee matches the contents of a project's ```LICENSE``` file (if it exists) against a short list of known licenses. As a result, the API does not take into account the licenses of project dependencies or other means of documenting a project's license such as references to the license name in the documentation.","","If a license is matched, the license key and name returned conforms to the [SPDX specification](https://spdx.org/).","","**Note:** These endpoints will also return a repository's license information:","- [Get a repository](https://developer.github.com/v3/repos/#get)","- [List user repositories](https://developer.github.com/v3/repos/#list-user-repositories)","- [List organization repositories](https://developer.github.com/v3/repos/#list-organization-repositories)","- [List forks](https://developer.github.com/v3/repos/forks/#list-forks)","- [List repositories being watched](https://developer.github.com/v3/activity/watching/#list-repositories-being-watched)","- [List team repos](https://developer.github.com/v3/teams/#list-team-repos)","","GitHub is a lot of things, but it’s not a law firm. As such, GitHub does not provide legal advice. Using the Licenses API or sending us an email about it does not constitute legal advice nor does it create an attorney-client relationship. If you have any questions about what you can and can't do with a particular license, you should consult with your own legal counsel before moving forward. In fact, you should always consult with your own lawyer before making any decisions that might have legal ramifications or that may impact your legal rights.","","GitHub created the License API to help users get information about open source licenses and the projects that use them. We hope it helps, but please keep in mind that we’re not lawyers (at least not most of us aren't) and that we make mistakes like everyone else. For that reason, GitHub provides the API on an “as-is” basis and makes no warranties regarding any information or licenses provided on or through it, and disclaims liability for damages resulting from using the API.","","# [Markdown](https://developer.github.com/v3/markdown/)","","no description","","# [Meta](https://developer.github.com/v3/meta/)","","This endpoint provides information about GitHub.com, the service.","","# [Rate Limit](https://developer.github.com/v3/rate_limit/)","","The overview documentation describes the [rate limit rules](https://developer.github.com/v3/#rate-limiting). You can check your current rate limit status at any time using the Rate Limit API described below."]},{"description":"# [Organizations](https://developer.github.com/v3/orgs/)\n\n**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.jean-grey-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\n# [Blocking Organization Users](https://developer.github.com/v3/orgs/blocking/)\n\n**Note:** The User Blocking API on GitHub is currently available for developers to preview. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.giant-sentry-fist-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nThe token used to authenticate the call must have the ```admin:org``` scope in order to make any blocking calls for an organization. Otherwise, the response returns ```HTTP 404```.\n\n# [Organization Members](https://developer.github.com/v3/orgs/members/)\n\nno description\n\n# [Organization Outside Collaborators](https://developer.github.com/v3/orgs/outside_collaborators/)\n\nno description\n\n# [Organization Webhooks](https://developer.github.com/v3/orgs/hooks/)\n\nOrganization webhooks allow you to receive HTTP ```POST``` payloads whenever certain events happen within the organization. Subscribing to these events makes it possible to build integrations that react to actions on GitHub.com. For more information on actions you can subscribe to, check out our [Events documentation](https://developer.github.com/webhooks/#events).","name":"github-orgs","x-swgg-descriptionLineList":["# [Organizations](https://developer.github.com/v3/orgs/)","","**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.jean-grey-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","# [Blocking Organization Users](https://developer.github.com/v3/orgs/blocking/)","","**Note:** The User Blocking API on GitHub is currently available for developers to preview. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.giant-sentry-fist-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","The token used to authenticate the call must have the ```admin:org``` scope in order to make any blocking calls for an organization. Otherwise, the response returns ```HTTP 404```.","","# [Organization Members](https://developer.github.com/v3/orgs/members/)","","no description","","# [Organization Outside Collaborators](https://developer.github.com/v3/orgs/outside_collaborators/)","","no description","","# [Organization Webhooks](https://developer.github.com/v3/orgs/hooks/)","","Organization webhooks allow you to receive HTTP ```POST``` payloads whenever certain events happen within the organization. Subscribing to these events makes it possible to build integrations that react to actions on GitHub.com. For more information on actions you can subscribe to, check out our [Events documentation](https://developer.github.com/webhooks/#events)."]},{"description":"# [Projects](https://developer.github.com/v3/projects/)\n\n**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.jean-grey-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nThe Projects API is currently available for developers to preview.   During the preview period, the API may change without advance notice. Please   see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details.\n\nTo access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.inertia-preview+json\n```\n\n# [Project cards](https://developer.github.com/v3/projects/cards/)\n\nThe Projects API is currently available for developers to preview.   During the preview period, the API may change without advance notice. Please   see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details.\n\nTo access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.inertia-preview+json\n```\n\n# [Project columns](https://developer.github.com/v3/projects/columns/)\n\nThe Projects API is currently available for developers to preview.   During the preview period, the API may change without advance notice. Please   see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details.\n\nTo access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.inertia-preview+json\n```","name":"github-projects","x-swgg-descriptionLineList":["# [Projects](https://developer.github.com/v3/projects/)","","**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.jean-grey-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","The Projects API is currently available for developers to preview.   During the preview period, the API may change without advance notice. Please   see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details.","","To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.inertia-preview+json","```","","# [Project cards](https://developer.github.com/v3/projects/cards/)","","The Projects API is currently available for developers to preview.   During the preview period, the API may change without advance notice. Please   see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details.","","To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.inertia-preview+json","```","","# [Project columns](https://developer.github.com/v3/projects/columns/)","","The Projects API is currently available for developers to preview.   During the preview period, the API may change without advance notice. Please   see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details.","","To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.inertia-preview+json","```"]},{"description":"# [Pull Requests](https://developer.github.com/v3/pulls/)\n\nThe Pull Request API allows you to list, view, edit, create, and even merge pull requests. Comments on pull requests can be managed via the [Issue Comments API](https://developer.github.com/v3/issues/comments/).\n\nPull Requests use [these custom media types](https://developer.github.com/v3/pulls/#custom-media-types). You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).\n\n**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.jean-grey-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nCustom media types\n\nThese are the supported media types for pull requests. You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).\n```\napplication/vnd.github.VERSION.raw+json\napplication/vnd.github.VERSION.text+json\napplication/vnd.github.VERSION.html+json\napplication/vnd.github.VERSION.full+json\napplication/vnd.github.VERSION.diff\napplication/vnd.github.VERSION.patch\n```\n\n# [Review Comments](https://developer.github.com/v3/pulls/comments/)\n\nPull Request review comments are comments on a portion of the unified diff.  These are separate from Commit Comments (which are applied directly to a commit, outside of the Pull Request view), and Issue Comments (which do not reference a portion of the unified diff).\n\nPull Request review comments use [these custom media types](https://developer.github.com/v3/pulls/comments/#custom-media-types). You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).\n\nCustom media types\n\nThese are the supported media types for pull request review comments. You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).\n```\napplication/vnd.github.VERSION.raw+json\napplication/vnd.github.VERSION.text+json\napplication/vnd.github.VERSION.html+json\napplication/vnd.github.VERSION.full+json\n```\n\n# [Review Requests](https://developer.github.com/v3/pulls/review_requests/)\n\nPull request authors and repository owners and collaborators can request a pull request review from anyone with write access to the repository. Each requested reviewer will receive a notification asking them to review the pull request.\n\n# [Reviews](https://developer.github.com/v3/pulls/reviews/)\n\nPull Request Reviews are groups of Pull Request Review Comments on the Pull Request, grouped together with a state and optional body comment.","name":"github-pulls","x-swgg-descriptionLineList":["# [Pull Requests](https://developer.github.com/v3/pulls/)","","The Pull Request API allows you to list, view, edit, create, and even merge pull requests. Comments on pull requests can be managed via the [Issue Comments API](https://developer.github.com/v3/issues/comments/).","","Pull Requests use [these custom media types](https://developer.github.com/v3/pulls/#custom-media-types). You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).","","**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.jean-grey-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","Custom media types","","These are the supported media types for pull requests. You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).","```","application/vnd.github.VERSION.raw+json","application/vnd.github.VERSION.text+json","application/vnd.github.VERSION.html+json","application/vnd.github.VERSION.full+json","application/vnd.github.VERSION.diff","application/vnd.github.VERSION.patch","```","","# [Review Comments](https://developer.github.com/v3/pulls/comments/)","","Pull Request review comments are comments on a portion of the unified diff.  These are separate from Commit Comments (which are applied directly to a commit, outside of the Pull Request view), and Issue Comments (which do not reference a portion of the unified diff).","","Pull Request review comments use [these custom media types](https://developer.github.com/v3/pulls/comments/#custom-media-types). You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).","","Custom media types","","These are the supported media types for pull request review comments. You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).","```","application/vnd.github.VERSION.raw+json","application/vnd.github.VERSION.text+json","application/vnd.github.VERSION.html+json","application/vnd.github.VERSION.full+json","```","","# [Review Requests](https://developer.github.com/v3/pulls/review_requests/)","","Pull request authors and repository owners and collaborators can request a pull request review from anyone with write access to the repository. Each requested reviewer will receive a notification asking them to review the pull request.","","# [Reviews](https://developer.github.com/v3/pulls/reviews/)","","Pull Request Reviews are groups of Pull Request Review Comments on the Pull Request, grouped together with a state and optional body comment."]},{"description":"# [Reactions](https://developer.github.com/v3/reactions/)\n\n**Note:** APIs for managing reactions are currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.squirrel-girl-preview+json\n```\n\n**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.jean-grey-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","name":"github-reactions","x-swgg-descriptionLineList":["# [Reactions](https://developer.github.com/v3/reactions/)","","**Note:** APIs for managing reactions are currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.squirrel-girl-preview+json","```","","**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.jean-grey-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact)."]},{"description":"# [Repositories](https://developer.github.com/v3/repos/)\n\n**Note:** The ```topics``` property for repositories on GitHub is currently available for developers to preview. To view the ```topics``` property in calls that return repository results, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.mercy-preview+json\n```\n\n**Note:** The [Repository Transfer API](https://developer.github.com/changes/2017-11-09-repository-transfer-api-preview) is currently available for developers to preview. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.nightshade-preview+json\n```\n\n**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.jean-grey-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\n# [Branches](https://developer.github.com/v3/repos/branches/)\n\nno description\n\n# [Collaborators](https://developer.github.com/v3/repos/collaborators/)\n\nno description\n\n# [Comments](https://developer.github.com/v3/repos/comments/)\n\nCustom media types\n\nThese are the supported media types for commit comments. You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).\n```\napplication/vnd.github-commitcomment.raw+json\napplication/vnd.github-commitcomment.text+json\napplication/vnd.github-commitcomment.html+json\napplication/vnd.github-commitcomment.full+json\n```\n\n# [Commits](https://developer.github.com/v3/repos/commits/)\n\nThe Repo Commits API supports listing, viewing, and comparing commits in a repository.\n\n# [Community](https://developer.github.com/v3/repos/community/)\n\nWe're currently offering a preview of the Community Profile API (also known as community health).\n\nTo access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.black-panther-preview+json\n```\n\n# [Contents](https://developer.github.com/v3/repos/contents/)\n\nThese API methods let you retrieve the contents of files within a repository as Base64 encoded content. See [media types](https://developer.github.com/v3/repos/contents/#custom-media-types) for requesting the raw format or rendered HTML (when supported).\n\nCustom media types\n\n[READMEs](https://developer.github.com/v3/repos/contents/#get-the-readme), [files](https://developer.github.com/v3/repos/contents/#get-contents), and [symlinks](https://developer.github.com/v3/repos/contents/#get-contents) support the following custom media types:\n```\napplication/vnd.github.VERSION.raw\napplication/vnd.github.VERSION.html\n```\n\n# [Deploy Keys](https://developer.github.com/v3/repos/keys/)\n\nno description\n\n# [Deployments](https://developer.github.com/v3/repos/deployments/)\n\nDeployments are a request for a specific ref (branch, SHA, tag) to be deployed. GitHub then dispatches deployment events that external services can listen for and act on. This enables developers and organizations to build loosely-coupled tooling around deployments, without having to worry about implementation details of delivering different types of applications (e.g., web, native).\n\nDeployment statuses allow external services to mark deployments with an ```error```, ```failure```, ```pending```, or ```success``` state, which can then be consumed by any system listening for ```deployment_status``` events.\n\nDeployment statuses can also include an optional ```description``` and ```target_url```, and we highly recommend providing them as they make deployment statuses much more useful. The ```target_url``` would be the full URL to the deployment output, and the ```description``` would be the high level summary of what happened with the deployment.\n\nDeployments and deployment statuses both have associated [repository events](https://developer.github.com/v3/activity/events/types/#deploymentevent) when they're created. This allows webhooks and 3rd party integrations to respond to deployment requests as well as update the status of a deployment as progress is made.\n\nBelow is a simple sequence diagram for how these interactions would work.\n```\n+---------+             +--------+            +-----------+        +-------------+\n| Tooling |             | GitHub |            | 3rd Party |        | Your Server |\n+---------+             +--------+            +-----------+        +-------------+\n     |                      |                       |                     |\n     |  Create Deployment   |                       |                     |\n     |---------------------&gt;|                       |                     |\n     |                      |                       |                     |\n     |  Deployment Created  |                       |                     |\n     |&lt;---------------------|                       |                     |\n     |                      |                       |                     |\n     |                      |   Deployment Event    |                     |\n     |                      |----------------------&gt;|                     |\n     |                      |                       |     SSH+Deploys     |\n     |                      |                       |--------------------&gt;|\n     |                      |                       |                     |\n     |                      |   Deployment Status   |                     |\n     |                      |&lt;----------------------|                     |\n     |                      |                       |                     |\n     |                      |                       |   Deploy Completed  |\n     |                      |                       |&lt;--------------------|\n     |                      |                       |                     |\n     |                      |   Deployment Status   |                     |\n     |                      |&lt;----------------------|                     |\n     |                      |                       |                     |\n```\n\n\nKeep in mind that GitHub is never actually accessing your servers. It's up to your 3rd party integration to interact with deployment events.  This allows for [GitHub integrations](https://github.com/integrations) as well as running your own systems depending on your use case. Multiple systems can listen for deployment events, and it's up to each of those systems to decide whether or not they're responsible for pushing the code out to your servers, building native code, etc.\n\nNote that the ```repo_deployment``` [OAuth scope](https://developer.github.com/apps/building-integrations/setting-up-and-registering-oauth-apps/about-scopes-for-oauth-apps/) grants targeted access to deployments and deployment statuses **without** granting access to repository code, while the ```repo``` scope grants permission to code as well.\n\n**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.jean-grey-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\n# [Downloads](https://developer.github.com/v3/repos/downloads/)\n\nThe Downloads API (described below) was [deprecated on December 11, 2012](https://github.com/blog/1302-goodbye-uploads). It will be removed at a future date.\n\nWe recommend using [Releases](https://developer.github.com/v3/repos/releases/) instead.\n\nThe downloads API is for package downloads only. If you want to get source tarballs you should use [this](https://developer.github.com/v3/repos/contents/#get-archive-link) instead.\n\n# [Forks](https://developer.github.com/v3/repos/forks/)\n\nno description\n\n# [Merging](https://developer.github.com/v3/repos/merging/)\n\nThe Repo Merging API supports merging branches in a repository. This accomplishes essentially the same thing as merging one branch into another in a local repository and then pushing to GitHub. The benefit is that the merge is done on the server side and a local repository is not needed. This makes it more appropriate for automation and other tools where maintaining local repositories would be cumbersome and inefficient.\n\nThe authenticated user will be the author of any merges done through this endpoint.\n\n# [Pages](https://developer.github.com/v3/repos/pages/)\n\nThe GitHub Pages API retrieves information about your GitHub Pages configuration, and the statuses of your builds. Information about the site and the builds can only be accessed by authenticated owners, even though the websites are public.\n\nIn JSON responses, ```status``` can be one of:\n-  ```null```, which means the site has yet to be built\n-  ```queued```, which means the build has been requested but not yet begun\n-  ```building```, which means the build is in progress\n-  ```built```, which means the site has been built\n-  ```errored```, which indicates an error occurred during the build\n\n# [Releases](https://developer.github.com/v3/repos/releases/)\n\n**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.jean-grey-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\n# [Repository Invitations](https://developer.github.com/v3/repos/invitations/)\n\nThe Repository Invitations API allows users or external services to invite other users to collaborate on a repo. The invited users (or external services on behalf of invited users) can choose to accept or decline the invitations.\n\nNote that the ```repo:invite``` [OAuth scope](https://developer.github.com/apps/building-integrations/setting-up-and-registering-oauth-apps/about-scopes-for-oauth-apps/) grants targeted access to invitations **without** also granting access to repository code, while the ```repo``` scope grants permission to code as well as invitations.\n\n# [Repository Webhooks](https://developer.github.com/v3/repos/hooks/)\n\nThe Repository Webhooks API allows repository admins to manage the post-receive hooks for a repository.  Webhooks can be managed using the JSON HTTP API, or the [PubSubHubbub API](https://developer.github.com/v3/repos/hooks/#pubsubhubbub).\n\nIf you would like to set up a single webhook to receive events from all of your organization's repositories, check out our [API documentation for Organization Webhooks](https://developer.github.com/v3/orgs/hooks/).\n\n# [Statistics](https://developer.github.com/v3/repos/statistics/)\n\nThe Repository Statistics API allows you to fetch the data that GitHub uses for visualizing different types of repository activity.\n\n####  A word about caching\n\nComputing repository statistics is an expensive operation, so we try to return cached data whenever possible.  If the data hasn't been cached when you query a repository's statistics, you'll receive a ```202``` response; a background job is also fired to start compiling these statistics. Give the job a few moments to complete, and then submit the request again. If the job has completed, that request will receive a ```200``` response with the statistics in the response body.\n\nRepository statistics are cached by the SHA of the repository's default branch, which is usually master; pushing to the default branch resets the statistics cache.\n\n####  Statistics exclude some types of commits\n\nThe statistics exposed by the API match the statistics shown by [different repository graphs](https://help.github.com/articles/about-repository-graphs/).\n\nTo summarize:\n- All statistics exclude merge commits.\n- Contributor statistics also exclude empty commits.\n\n# [Statuses](https://developer.github.com/v3/repos/statuses/)\n\nThe status API allows external services to mark commits with an ```error```, ```failure```, ```pending```, or ```success``` state, which is then reflected in pull requests involving those commits.\n\nStatuses can also include an optional ```description``` and ```target_url```, and we highly recommend providing them as they make statuses much more useful in the GitHub UI.\n\nAs an example, one common use is for continuous integration services to mark commits as passing or failing builds using status.  The ```target_url``` would be the full URL to the build output, and the ```description``` would be the high level summary of what happened with the build.\n\nStatuses can include a ```context``` to indicate what service is providing that status. For example, you may have your continuous integration service push statuses with a context of ```ci```, and a security audit tool push statuses with a context of ```security```.  You can then use the [combined status endpoint](https://developer.github.com/v3/repos/statuses/#get-the-combined-status-for-a-specific-ref) to retrieve the whole status for a commit.\n\nNote that the ```repo:status``` [OAuth scope](https://developer.github.com/apps/building-integrations/setting-up-and-registering-oauth-apps/about-scopes-for-oauth-apps/) grants targeted access to statuses **without** also granting access to repository code, while the ```repo``` scope grants permission to code as well as statuses.\n\n**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.jean-grey-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\n# [Traffic](https://developer.github.com/v3/repos/traffic/)\n\nFor repositories that you have push access to, the traffic API provides access to the information provided in the [graphs section](https://help.github.com/articles/about-repository-graphs/#traffic).","name":"github-repos","x-swgg-descriptionLineList":["# [Repositories](https://developer.github.com/v3/repos/)","","**Note:** The ```topics``` property for repositories on GitHub is currently available for developers to preview. To view the ```topics``` property in calls that return repository results, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.mercy-preview+json","```","","**Note:** The [Repository Transfer API](https://developer.github.com/changes/2017-11-09-repository-transfer-api-preview) is currently available for developers to preview. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.nightshade-preview+json","```","","**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.jean-grey-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","# [Branches](https://developer.github.com/v3/repos/branches/)","","no description","","# [Collaborators](https://developer.github.com/v3/repos/collaborators/)","","no description","","# [Comments](https://developer.github.com/v3/repos/comments/)","","Custom media types","","These are the supported media types for commit comments. You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).","```","application/vnd.github-commitcomment.raw+json","application/vnd.github-commitcomment.text+json","application/vnd.github-commitcomment.html+json","application/vnd.github-commitcomment.full+json","```","","# [Commits](https://developer.github.com/v3/repos/commits/)","","The Repo Commits API supports listing, viewing, and comparing commits in a repository.","","# [Community](https://developer.github.com/v3/repos/community/)","","We're currently offering a preview of the Community Profile API (also known as community health).","","To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.black-panther-preview+json","```","","# [Contents](https://developer.github.com/v3/repos/contents/)","","These API methods let you retrieve the contents of files within a repository as Base64 encoded content. See [media types](https://developer.github.com/v3/repos/contents/#custom-media-types) for requesting the raw format or rendered HTML (when supported).","","Custom media types","","[READMEs](https://developer.github.com/v3/repos/contents/#get-the-readme), [files](https://developer.github.com/v3/repos/contents/#get-contents), and [symlinks](https://developer.github.com/v3/repos/contents/#get-contents) support the following custom media types:","```","application/vnd.github.VERSION.raw","application/vnd.github.VERSION.html","```","","# [Deploy Keys](https://developer.github.com/v3/repos/keys/)","","no description","","# [Deployments](https://developer.github.com/v3/repos/deployments/)","","Deployments are a request for a specific ref (branch, SHA, tag) to be deployed. GitHub then dispatches deployment events that external services can listen for and act on. This enables developers and organizations to build loosely-coupled tooling around deployments, without having to worry about implementation details of delivering different types of applications (e.g., web, native).","","Deployment statuses allow external services to mark deployments with an ```error```, ```failure```, ```pending```, or ```success``` state, which can then be consumed by any system listening for ```deployment_status``` events.","","Deployment statuses can also include an optional ```description``` and ```target_url```, and we highly recommend providing them as they make deployment statuses much more useful. The ```target_url``` would be the full URL to the deployment output, and the ```description``` would be the high level summary of what happened with the deployment.","","Deployments and deployment statuses both have associated [repository events](https://developer.github.com/v3/activity/events/types/#deploymentevent) when they're created. This allows webhooks and 3rd party integrations to respond to deployment requests as well as update the status of a deployment as progress is made.","","Below is a simple sequence diagram for how these interactions would work.","```","+---------+             +--------+            +-----------+        +-------------+","| Tooling |             | GitHub |            | 3rd Party |        | Your Server |","+---------+             +--------+            +-----------+        +-------------+","     |                      |                       |                     |","     |  Create Deployment   |                       |                     |","     |---------------------&gt;|                       |                     |","     |                      |                       |                     |","     |  Deployment Created  |                       |                     |","     |&lt;---------------------|                       |                     |","     |                      |                       |                     |","     |                      |   Deployment Event    |                     |","     |                      |----------------------&gt;|                     |","     |                      |                       |     SSH+Deploys     |","     |                      |                       |--------------------&gt;|","     |                      |                       |                     |","     |                      |   Deployment Status   |                     |","     |                      |&lt;----------------------|                     |","     |                      |                       |                     |","     |                      |                       |   Deploy Completed  |","     |                      |                       |&lt;--------------------|","     |                      |                       |                     |","     |                      |   Deployment Status   |                     |","     |                      |&lt;----------------------|                     |","     |                      |                       |                     |","```","","","Keep in mind that GitHub is never actually accessing your servers. It's up to your 3rd party integration to interact with deployment events.  This allows for [GitHub integrations](https://github.com/integrations) as well as running your own systems depending on your use case. Multiple systems can listen for deployment events, and it's up to each of those systems to decide whether or not they're responsible for pushing the code out to your servers, building native code, etc.","","Note that the ```repo_deployment``` [OAuth scope](https://developer.github.com/apps/building-integrations/setting-up-and-registering-oauth-apps/about-scopes-for-oauth-apps/) grants targeted access to deployments and deployment statuses **without** granting access to repository code, while the ```repo``` scope grants permission to code as well.","","**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.jean-grey-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","# [Downloads](https://developer.github.com/v3/repos/downloads/)","","The Downloads API (described below) was [deprecated on December 11, 2012](https://github.com/blog/1302-goodbye-uploads). It will be removed at a future date.","","We recommend using [Releases](https://developer.github.com/v3/repos/releases/) instead.","","The downloads API is for package downloads only. If you want to get source tarballs you should use [this](https://developer.github.com/v3/repos/contents/#get-archive-link) instead.","","# [Forks](https://developer.github.com/v3/repos/forks/)","","no description","","# [Merging](https://developer.github.com/v3/repos/merging/)","","The Repo Merging API supports merging branches in a repository. This accomplishes essentially the same thing as merging one branch into another in a local repository and then pushing to GitHub. The benefit is that the merge is done on the server side and a local repository is not needed. This makes it more appropriate for automation and other tools where maintaining local repositories would be cumbersome and inefficient.","","The authenticated user will be the author of any merges done through this endpoint.","","# [Pages](https://developer.github.com/v3/repos/pages/)","","The GitHub Pages API retrieves information about your GitHub Pages configuration, and the statuses of your builds. Information about the site and the builds can only be accessed by authenticated owners, even though the websites are public.","","In JSON responses, ```status``` can be one of:","-  ```null```, which means the site has yet to be built","-  ```queued```, which means the build has been requested but not yet begun","-  ```building```, which means the build is in progress","-  ```built```, which means the site has been built","-  ```errored```, which indicates an error occurred during the build","","# [Releases](https://developer.github.com/v3/repos/releases/)","","**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.jean-grey-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","# [Repository Invitations](https://developer.github.com/v3/repos/invitations/)","","The Repository Invitations API allows users or external services to invite other users to collaborate on a repo. The invited users (or external services on behalf of invited users) can choose to accept or decline the invitations.","","Note that the ```repo:invite``` [OAuth scope](https://developer.github.com/apps/building-integrations/setting-up-and-registering-oauth-apps/about-scopes-for-oauth-apps/) grants targeted access to invitations **without** also granting access to repository code, while the ```repo``` scope grants permission to code as well as invitations.","","# [Repository Webhooks](https://developer.github.com/v3/repos/hooks/)","","The Repository Webhooks API allows repository admins to manage the post-receive hooks for a repository.  Webhooks can be managed using the JSON HTTP API, or the [PubSubHubbub API](https://developer.github.com/v3/repos/hooks/#pubsubhubbub).","","If you would like to set up a single webhook to receive events from all of your organization's repositories, check out our [API documentation for Organization Webhooks](https://developer.github.com/v3/orgs/hooks/).","","# [Statistics](https://developer.github.com/v3/repos/statistics/)","","The Repository Statistics API allows you to fetch the data that GitHub uses for visualizing different types of repository activity.","","####  A word about caching","","Computing repository statistics is an expensive operation, so we try to return cached data whenever possible.  If the data hasn't been cached when you query a repository's statistics, you'll receive a ```202``` response; a background job is also fired to start compiling these statistics. Give the job a few moments to complete, and then submit the request again. If the job has completed, that request will receive a ```200``` response with the statistics in the response body.","","Repository statistics are cached by the SHA of the repository's default branch, which is usually master; pushing to the default branch resets the statistics cache.","","####  Statistics exclude some types of commits","","The statistics exposed by the API match the statistics shown by [different repository graphs](https://help.github.com/articles/about-repository-graphs/).","","To summarize:","- All statistics exclude merge commits.","- Contributor statistics also exclude empty commits.","","# [Statuses](https://developer.github.com/v3/repos/statuses/)","","The status API allows external services to mark commits with an ```error```, ```failure```, ```pending```, or ```success``` state, which is then reflected in pull requests involving those commits.","","Statuses can also include an optional ```description``` and ```target_url```, and we highly recommend providing them as they make statuses much more useful in the GitHub UI.","","As an example, one common use is for continuous integration services to mark commits as passing or failing builds using status.  The ```target_url``` would be the full URL to the build output, and the ```description``` would be the high level summary of what happened with the build.","","Statuses can include a ```context``` to indicate what service is providing that status. For example, you may have your continuous integration service push statuses with a context of ```ci```, and a security audit tool push statuses with a context of ```security```.  You can then use the [combined status endpoint](https://developer.github.com/v3/repos/statuses/#get-the-combined-status-for-a-specific-ref) to retrieve the whole status for a commit.","","Note that the ```repo:status``` [OAuth scope](https://developer.github.com/apps/building-integrations/setting-up-and-registering-oauth-apps/about-scopes-for-oauth-apps/) grants targeted access to statuses **without** also granting access to repository code, while the ```repo``` scope grants permission to code as well as statuses.","","**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.jean-grey-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","# [Traffic](https://developer.github.com/v3/repos/traffic/)","","For repositories that you have push access to, the traffic API provides access to the information provided in the [graphs section](https://help.github.com/articles/about-repository-graphs/#traffic)."]},{"description":"# [SCIM](https://developer.github.com/v3/scim/)\n\nno description","name":"github-scim","x-swgg-descriptionLineList":["# [SCIM](https://developer.github.com/v3/scim/)","","no description"]},{"description":"# [Search](https://developer.github.com/v3/search/)\n\n**Note:** The ```topics``` property for repositories on GitHub is currently available for developers to preview. To view the ```topics``` property in calls that return repository results, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.mercy-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\n####  About the search API\n\nThe Search API is optimized to help you find the specific item you're looking for (e.g., a specific user, a specific file in a repository, etc.). Think of it the way you think of performing a search on Google. It's designed to help you find the one result you're looking for (or maybe the few results you're looking for). Just like searching on Google, you sometimes want to see a few pages of search results so that you can find the item that best meets your needs. To satisfy that need, the GitHub Search API provides **up to 1,000 results for each search**.\n\n####  Ranking search results\n\nUnless another sort option is provided as a query parameter, results are sorted by best match, as indicated by the ```score``` field for each item returned. This is a computed value representing the relevance of an item relative to the other items in the result set. Multiple factors are combined to boost the most relevant item to the top of the result list.\n\n####  Rate limit\n\nThe Search API has a custom rate limit. For requests using [Basic Authentication](https://developer.github.com/v3/#authentication), [OAuth](https://developer.github.com/v3/#authentication), or [client ID and secret](https://developer.github.com/v3/#increasing-the-unauthenticated-rate-limit-for-oauth-applications), you can make up to 30 requests per minute. For unauthenticated requests, the rate limit allows you to make up to 10 requests per minute.\n\nSee the [rate limit documentation](https://developer.github.com/v3/#rate-limiting) for details on determining your current rate limit status.\n\n####  Timeouts and incomplete results\n\nTo keep the Search API fast for everyone, we limit how long any individual query can run. For queries that [exceed the time limit](https://developer.github.com/changes/2014-04-07-understanding-search-results-and-potential-timeouts/), the API returns the matches that were already found prior to the timeout, and the response has the ```incomplete_results``` property set to ```true```.\n\nReaching a timeout does not necessarily mean that search results are incomplete. More results might have been found, but also might not.\n\n# [Legacy Search](https://developer.github.com/v3/search/legacy/)\n\nThis is a listing of the Legacy Search API features from API v2 that have been ported to API v3. There should be no changes, other than the new URL and JSON output format.\n\n####  Legacy Search API is Deprecated\n\nThe Legacy Search API (described below) is deprecated. We recommend using the [v3 Search API](https://developer.github.com/v3/search/) instead. It contains new endpoints and much more functionality.","name":"github-search","x-swgg-descriptionLineList":["# [Search](https://developer.github.com/v3/search/)","","**Note:** The ```topics``` property for repositories on GitHub is currently available for developers to preview. To view the ```topics``` property in calls that return repository results, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.mercy-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","####  About the search API","","The Search API is optimized to help you find the specific item you're looking for (e.g., a specific user, a specific file in a repository, etc.). Think of it the way you think of performing a search on Google. It's designed to help you find the one result you're looking for (or maybe the few results you're looking for). Just like searching on Google, you sometimes want to see a few pages of search results so that you can find the item that best meets your needs. To satisfy that need, the GitHub Search API provides **up to 1,000 results for each search**.","","####  Ranking search results","","Unless another sort option is provided as a query parameter, results are sorted by best match, as indicated by the ```score``` field for each item returned. This is a computed value representing the relevance of an item relative to the other items in the result set. Multiple factors are combined to boost the most relevant item to the top of the result list.","","####  Rate limit","","The Search API has a custom rate limit. For requests using [Basic Authentication](https://developer.github.com/v3/#authentication), [OAuth](https://developer.github.com/v3/#authentication), or [client ID and secret](https://developer.github.com/v3/#increasing-the-unauthenticated-rate-limit-for-oauth-applications), you can make up to 30 requests per minute. For unauthenticated requests, the rate limit allows you to make up to 10 requests per minute.","","See the [rate limit documentation](https://developer.github.com/v3/#rate-limiting) for details on determining your current rate limit status.","","####  Timeouts and incomplete results","","To keep the Search API fast for everyone, we limit how long any individual query can run. For queries that [exceed the time limit](https://developer.github.com/changes/2014-04-07-understanding-search-results-and-potential-timeouts/), the API returns the matches that were already found prior to the timeout, and the response has the ```incomplete_results``` property set to ```true```.","","Reaching a timeout does not necessarily mean that search results are incomplete. More results might have been found, but also might not.","","# [Legacy Search](https://developer.github.com/v3/search/legacy/)","","This is a listing of the Legacy Search API features from API v2 that have been ported to API v3. There should be no changes, other than the new URL and JSON output format.","","####  Legacy Search API is Deprecated","","The Legacy Search API (described below) is deprecated. We recommend using the [v3 Search API](https://developer.github.com/v3/search/) instead. It contains new endpoints and much more functionality."]},{"description":"# [Organization Teams](https://developer.github.com/v3/teams/)\n\nThis API is only available to authenticated members of the team's [organization](https://developer.github.com/v3/orgs). OAuth access tokens require the ```read:org``` [scope](https://developer.github.com/apps/building-integrations/setting-up-and-registering-oauth-apps/about-scopes-for-oauth-apps/).\n\n**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.jean-grey-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\n# [Team Discussion Comments](https://developer.github.com/v3/teams/discussion_comments/)\n\nThe team discussion comments API allows you to get, create, edit, and delete discussion comments on a [team discussion](https://developer.github.com/v3/teams/discussions) post. Any member of the team's [organization](https://developer.github.com/v3/orgs) can create and read comments on a public discussion. For more details, see \"[About team discussions](https://help.github.com/articles/about-team-discussions/).\" This API is only available to authenticated members of the team's organization.\n\n# [Team Discussions](https://developer.github.com/v3/teams/discussions/)\n\nThe team discussions API allows you to get, create, edit, and delete discussion posts on a team's page. You can use team discussions to have conversations that are not specific to a repository or project. Any member of the team's [organization](https://developer.github.com/v3/orgs) can create and read public discussion posts. For more details, see \"[About team discussions](https://help.github.com/articles/about-team-discussions/).\" To learn more about commenting on a discussion post, see the [team discussion comments API](https://developer.github.com/v3/teams/discussion_comments). This API is only available to authenticated members of the team's organization.\n\n# [Team Members](https://developer.github.com/v3/teams/members/)\n\nThis API is only available to authenticated members of the team's organization. OAuth access tokens require the ```read:org``` [scope](https://developer.github.com/apps/building-integrations/setting-up-and-registering-oauth-apps/about-scopes-for-oauth-apps/).\n\n**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.jean-grey-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","name":"github-teams","x-swgg-descriptionLineList":["# [Organization Teams](https://developer.github.com/v3/teams/)","","This API is only available to authenticated members of the team's [organization](https://developer.github.com/v3/orgs). OAuth access tokens require the ```read:org``` [scope](https://developer.github.com/apps/building-integrations/setting-up-and-registering-oauth-apps/about-scopes-for-oauth-apps/).","","**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.jean-grey-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","# [Team Discussion Comments](https://developer.github.com/v3/teams/discussion_comments/)","","The team discussion comments API allows you to get, create, edit, and delete discussion comments on a [team discussion](https://developer.github.com/v3/teams/discussions) post. Any member of the team's [organization](https://developer.github.com/v3/orgs) can create and read comments on a public discussion. For more details, see \"[About team discussions](https://help.github.com/articles/about-team-discussions/).\" This API is only available to authenticated members of the team's organization.","","# [Team Discussions](https://developer.github.com/v3/teams/discussions/)","","The team discussions API allows you to get, create, edit, and delete discussion posts on a team's page. You can use team discussions to have conversations that are not specific to a repository or project. Any member of the team's [organization](https://developer.github.com/v3/orgs) can create and read public discussion posts. For more details, see \"[About team discussions](https://help.github.com/articles/about-team-discussions/).\" To learn more about commenting on a discussion post, see the [team discussion comments API](https://developer.github.com/v3/teams/discussion_comments). This API is only available to authenticated members of the team's organization.","","# [Team Members](https://developer.github.com/v3/teams/members/)","","This API is only available to authenticated members of the team's organization. OAuth access tokens require the ```read:org``` [scope](https://developer.github.com/apps/building-integrations/setting-up-and-registering-oauth-apps/about-scopes-for-oauth-apps/).","","**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.jean-grey-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact)."]},{"description":"# [Users](https://developer.github.com/v3/users/)\n\nMany of the resources on the users API provide a shortcut for getting information about the currently authenticated user. If a request URL does not include a ```:username``` parameter then the response will be for the logged in user (and you must pass [authentication information](https://developer.github.com/v3/#authentication) with your request). Additional private information, such as whether a user has two-factor authentication enabled, is included when authenticated through basic auth or OAuth with the ```user``` scope.\n\n**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.jean-grey-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\n# [Block Another User](https://developer.github.com/v3/users/blocking/)\n\n**Note:** The User Blocking API on GitHub is currently available for developers to preview. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.giant-sentry-fist-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\n# [User Emails](https://developer.github.com/v3/users/emails/)\n\nManagement of email addresses via the API requires that you are authenticated through basic auth or OAuth with the user scope.\n\n# [User Followers](https://developer.github.com/v3/users/followers/)\n\nno description\n\n# [User GPG Keys](https://developer.github.com/v3/users/gpg_keys/)\n\nThe data returned in the ```public_key``` response field is not a GPG formatted key. When a user uploads a GPG key, it is parsed and the cryptographic public key is extracted and stored. This cryptographic key is what is returned by the APIs on this page. This key is not suitable to be used directly by programs like GPG.\n\n# [User Public Keys](https://developer.github.com/v3/users/keys/)\n\nno description","name":"github-users","x-swgg-descriptionLineList":["# [Users](https://developer.github.com/v3/users/)","","Many of the resources on the users API provide a shortcut for getting information about the currently authenticated user. If a request URL does not include a ```:username``` parameter then the response will be for the logged in user (and you must pass [authentication information](https://developer.github.com/v3/#authentication) with your request). Additional private information, such as whether a user has two-factor authentication enabled, is included when authenticated through basic auth or OAuth with the ```user``` scope.","","**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.jean-grey-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","# [Block Another User](https://developer.github.com/v3/users/blocking/)","","**Note:** The User Blocking API on GitHub is currently available for developers to preview. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.giant-sentry-fist-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","# [User Emails](https://developer.github.com/v3/users/emails/)","","Management of email addresses via the API requires that you are authenticated through basic auth or OAuth with the user scope.","","# [User Followers](https://developer.github.com/v3/users/followers/)","","no description","","# [User GPG Keys](https://developer.github.com/v3/users/gpg_keys/)","","The data returned in the ```public_key``` response field is not a GPG formatted key. When a user uploads a GPG key, it is parsed and the cryptographic public key is extracted and stored. This cryptographic key is what is returned by the APIs on this page. This key is not suitable to be used directly by programs like GPG.","","# [User Public Keys](https://developer.github.com/v3/users/keys/)","","no description"]}],"x-swgg-corsForwardProxyHost":"disabled","x-swgg-downloadStandaloneApp":"https://kaizhu256.github.io/node-swgg-github-all/build..beta..travis-ci.org/app/assets.app.js","x-swgg-fixErrorSemanticUniquePath":true,"x-swgg-operationIdFromPath":true,"x-swgg-tags0-override":{"github-activity":{"description":"# [Activity](https://developer.github.com/v3/activity/)\n\nServing up the 'social' in Social Coding, the Activity APIs provide access to notifications, subscriptions, and timelines.\n\n# [Event Types & Payloads](https://developer.github.com/v3/activity/events/types/)\n\nEach event has a similar JSON schema, but a unique ```payload``` object that is determined by its event type.\n\nEvent names are used by [repository webhooks](https://developer.github.com/v3/repos/hooks/) to specify which events the webhook should receive. The included payloads below are from webhook deliveries but match events returned by the [Events API](https://developer.github.com/v3/activity/events/) (except where noted). The Events API uses the CamelCased name (e.g. ```CommitCommentEvent```) in the ```type``` field of an event object and does not include the ```repository``` or ```sender``` fields in the event payload object.\n\n**Note:** Some of these events may not be rendered in timelines, they're only created for various internal and webhook purposes.\n- [CommitCommentEvent](https://developer.github.com/v3/activity/events/types/#commitcommentevent)\n- [CreateEvent](https://developer.github.com/v3/activity/events/types/#createevent)\n- [DeleteEvent](https://developer.github.com/v3/activity/events/types/#deleteevent)\n- [DeploymentEvent](https://developer.github.com/v3/activity/events/types/#deploymentevent)\n- [DeploymentStatusEvent](https://developer.github.com/v3/activity/events/types/#deploymentstatusevent)\n- [DownloadEvent](https://developer.github.com/v3/activity/events/types/#downloadevent)\n- [FollowEvent](https://developer.github.com/v3/activity/events/types/#followevent)\n- [ForkEvent](https://developer.github.com/v3/activity/events/types/#forkevent)\n- [ForkApplyEvent](https://developer.github.com/v3/activity/events/types/#forkapplyevent)\n- [GistEvent](https://developer.github.com/v3/activity/events/types/#gistevent)\n- [GollumEvent](https://developer.github.com/v3/activity/events/types/#gollumevent)\n- [InstallationEvent](https://developer.github.com/v3/activity/events/types/#installationevent)\n- [InstallationRepositoriesEvent](https://developer.github.com/v3/activity/events/types/#installationrepositoriesevent)\n- [IssueCommentEvent](https://developer.github.com/v3/activity/events/types/#issuecommentevent)\n- [IssuesEvent](https://developer.github.com/v3/activity/events/types/#issuesevent)\n- [LabelEvent](https://developer.github.com/v3/activity/events/types/#labelevent)\n- [MarketplacePurchaseEvent](https://developer.github.com/v3/activity/events/types/#marketplacepurchaseevent)\n- [MemberEvent](https://developer.github.com/v3/activity/events/types/#memberevent)\n- [MembershipEvent](https://developer.github.com/v3/activity/events/types/#membershipevent)\n- [MilestoneEvent](https://developer.github.com/v3/activity/events/types/#milestoneevent)\n- [OrganizationEvent](https://developer.github.com/v3/activity/events/types/#organizationevent)\n- [OrgBlockEvent](https://developer.github.com/v3/activity/events/types/#orgblockevent)\n- [PageBuildEvent](https://developer.github.com/v3/activity/events/types/#pagebuildevent)\n- [ProjectCardEvent](https://developer.github.com/v3/activity/events/types/#projectcardevent)\n- [ProjectColumnEvent](https://developer.github.com/v3/activity/events/types/#projectcolumnevent)\n- [ProjectEvent](https://developer.github.com/v3/activity/events/types/#projectevent)\n- [PublicEvent](https://developer.github.com/v3/activity/events/types/#publicevent)\n- [PullRequestEvent](https://developer.github.com/v3/activity/events/types/#pullrequestevent)\n- [PullRequestReviewEvent](https://developer.github.com/v3/activity/events/types/#pullrequestreviewevent)\n- [PullRequestReviewCommentEvent](https://developer.github.com/v3/activity/events/types/#pullrequestreviewcommentevent)\n- [PushEvent](https://developer.github.com/v3/activity/events/types/#pushevent)\n- [ReleaseEvent](https://developer.github.com/v3/activity/events/types/#releaseevent)\n- [RepositoryEvent](https://developer.github.com/v3/activity/events/types/#repositoryevent)\n- [StatusEvent](https://developer.github.com/v3/activity/events/types/#statusevent)\n- [TeamEvent](https://developer.github.com/v3/activity/events/types/#teamevent)\n- [TeamAddEvent](https://developer.github.com/v3/activity/events/types/#teamaddevent)\n- [WatchEvent](https://developer.github.com/v3/activity/events/types/#watchevent)\n\n# [Events](https://developer.github.com/v3/activity/events/)\n\nThis is a read-only API to the GitHub events. These events power the various activity streams on the site.\n- [List public events](https://developer.github.com/v3/activity/events/#list-public-events)\n- [List repository events](https://developer.github.com/v3/activity/events/#list-repository-events)\n- [List issue events for a repository](https://developer.github.com/v3/activity/events/#list-issue-events-for-a-repository)\n- [List public events for a network of repositories](https://developer.github.com/v3/activity/events/#list-public-events-for-a-network-of-repositories)\n- [List public events for an organization](https://developer.github.com/v3/activity/events/#list-public-events-for-an-organization)\n- [List events that a user has received](https://developer.github.com/v3/activity/events/#list-events-that-a-user-has-received)\n- [List public events that a user has received](https://developer.github.com/v3/activity/events/#list-public-events-that-a-user-has-received)\n- [List events performed by a user](https://developer.github.com/v3/activity/events/#list-events-performed-by-a-user)\n- [List public events performed by a user](https://developer.github.com/v3/activity/events/#list-public-events-performed-by-a-user)\n- [List events for an organization](https://developer.github.com/v3/activity/events/#list-events-for-an-organization)\n\nEvents are optimized for polling with the \"ETag\" header.  If no new events have been triggered, you will see a \"304 Not Modified\" response, and your current rate limit will be untouched.  There is also an \"X-Poll-Interval\" header that specifies how often (in seconds) you are allowed to poll.  In times of high server load, the time may increase.  Please obey the header.\n```\ncurl -I https://api.github.com/users/tater/events\nHTTP/1.1 200 OK\nX-Poll-Interval: 60\nETag: \"a18c3bded88eb5dbb5c849a489412bf3\"\n# The quotes around the ETag value are important\ncurl -I https://api.github.com/users/tater/events \\\n   -H 'If-None-Match: \"a18c3bded88eb5dbb5c849a489412bf3\"'\nHTTP/1.1 304 Not Modified\nX-Poll-Interval: 60\n```\n\n\nEvents support [pagination](https://developer.github.com/v3/#pagination), however the ```per_page``` option is unsupported. The fixed page size is 30 items. Fetching up to ten pages is supported, for a total of 300 events.\n\nOnly events created within the past 90 days will be included in timelines. Events older than 90 days will not be included (even if the total number of events in the timeline is less than 300).\n\nAll Events have the same response format:\n```\nStatus: 200 OK\nLink: &lt;https://api.github.com/resource?page=2&gt;; rel=\"next\",\n      &lt;https://api.github.com/resource?page=5&gt;; rel=\"last\"\n```\n\n```\n[\n  {\n    \"type\": \"Event\",\n    \"public\": true,\n    \"payload\": {\n    },\n    \"repo\": {\n      \"id\": 3,\n      \"name\": \"octocat/Hello-World\",\n      \"url\": \"https://api.github.com/repos/octocat/Hello-World\"\n    },\n    \"actor\": {\n      \"id\": 1,\n      \"login\": \"octocat\",\n      \"gravatar_id\": \"\",\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"url\": \"https://api.github.com/users/octocat\"\n    },\n    \"org\": {\n      \"id\": 1,\n      \"login\": \"github\",\n      \"gravatar_id\": \"\",\n      \"url\": \"https://api.github.com/orgs/github\",\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\"\n    },\n    \"created_at\": \"2011-09-06T17:26:27Z\",\n    \"id\": \"12345\"\n  }\n]\n```\n\n# [Feeds](https://developer.github.com/v3/activity/feeds/)\n\nno description\n\n# [Notifications](https://developer.github.com/v3/activity/notifications/)\n\nUsers receive notifications for conversations in repositories they watch including:\n- Issues and their comments\n- Pull Requests and their comments\n- Comments on any commits\n\nNotifications are also sent for conversations in unwatched repositories when the user is involved including:\n- **@mentions**\n- Issue assignments\n- Commits the user authors or commits\n- Any discussion in which the user actively participates\n\nAll Notification API calls require the ```notifications``` or ```repo``` API scopes.  Doing this will give read-only access to some Issue/Commit content. You will still need the \"repo\" scope to access Issues and Commits from their respective endpoints.\n\nNotifications come back as \"threads\".  A Thread contains information about the current discussion of an Issue/PullRequest/Commit.\n\nNotifications are optimized for polling with the \"Last-Modified\" header.  If there are no new notifications, you will see a \"304 Not Modified\" response, leaving your current rate limit untouched.  There is an \"X-Poll-Interval\" header that specifies how often (in seconds) you are allowed to poll.  In times of high server load, the time may increase.  Please obey the header.\n```\n# Add authentication to your requests\ncurl -I https://api.github.com/notifications\nHTTP/1.1 200 OK\nLast-Modified: Thu, 25 Oct 2012 15:16:27 GMT\nX-Poll-Interval: 60\n# Pass the Last-Modified header exactly\ncurl -I https://api.github.com/notifications\n   -H \"If-Modified-Since: Thu, 25 Oct 2012 15:16:27 GMT\"\nHTTP/1.1 304 Not Modified\nX-Poll-Interval: 60\n```\n\n# [Starring](https://developer.github.com/v3/activity/starring/)\n\nRepository Starring is a feature that lets users bookmark repositories.  Stars are shown next to repositories to show an approximate level of interest.  Stars have no effect on notifications or the activity feed.  For that, see [Repository Watching](https://developer.github.com/v3/activity/watching).\n\n####  Starring vs. Watching\n\nIn August 2012, we [changed the way watching works](https://github.com/blog/1204-notifications-stars) on GitHub.  Many API client applications may be using the original \"watcher\" endpoints for accessing this data. You can now start using the \"star\" endpoints instead (described below). Check out the [Watcher API Change post](https://developer.github.com/changes/2012-09-05-watcher-api/) for more details.\n\n# [Watching](https://developer.github.com/v3/activity/watching/)\n\nWatching a Repository registers the user to receive notifications on new discussions, as well as events in the user's activity feed.  See [Repository Starring](https://developer.github.com/v3/activity/starring) for simple repository bookmarks.\n\n####  Watching vs. Starring\n\nIn August 2012, we [changed the way watching works](https://github.com/blog/1204-notifications-stars) on GitHub.  At the time of that change, many API clients were already using the existing \"watcher\" endpoints to access starring data. To avoid breaking those applications, the legacy \"watcher\" endpoints continue to provide starring data.\n\nTo provide access to watching data, the v3 Watcher API uses the \"subscription\" endpoints described below. Check out the [Watcher API Change post](https://developer.github.com/changes/2012-09-05-watcher-api/) for more details.","x-swgg-descriptionLineList":["# [Activity](https://developer.github.com/v3/activity/)","","Serving up the 'social' in Social Coding, the Activity APIs provide access to notifications, subscriptions, and timelines.","","# [Event Types & Payloads](https://developer.github.com/v3/activity/events/types/)","","Each event has a similar JSON schema, but a unique ```payload``` object that is determined by its event type.","","Event names are used by [repository webhooks](https://developer.github.com/v3/repos/hooks/) to specify which events the webhook should receive. The included payloads below are from webhook deliveries but match events returned by the [Events API](https://developer.github.com/v3/activity/events/) (except where noted). The Events API uses the CamelCased name (e.g. ```CommitCommentEvent```) in the ```type``` field of an event object and does not include the ```repository``` or ```sender``` fields in the event payload object.","","**Note:** Some of these events may not be rendered in timelines, they're only created for various internal and webhook purposes.","- [CommitCommentEvent](https://developer.github.com/v3/activity/events/types/#commitcommentevent)","- [CreateEvent](https://developer.github.com/v3/activity/events/types/#createevent)","- [DeleteEvent](https://developer.github.com/v3/activity/events/types/#deleteevent)","- [DeploymentEvent](https://developer.github.com/v3/activity/events/types/#deploymentevent)","- [DeploymentStatusEvent](https://developer.github.com/v3/activity/events/types/#deploymentstatusevent)","- [DownloadEvent](https://developer.github.com/v3/activity/events/types/#downloadevent)","- [FollowEvent](https://developer.github.com/v3/activity/events/types/#followevent)","- [ForkEvent](https://developer.github.com/v3/activity/events/types/#forkevent)","- [ForkApplyEvent](https://developer.github.com/v3/activity/events/types/#forkapplyevent)","- [GistEvent](https://developer.github.com/v3/activity/events/types/#gistevent)","- [GollumEvent](https://developer.github.com/v3/activity/events/types/#gollumevent)","- [InstallationEvent](https://developer.github.com/v3/activity/events/types/#installationevent)","- [InstallationRepositoriesEvent](https://developer.github.com/v3/activity/events/types/#installationrepositoriesevent)","- [IssueCommentEvent](https://developer.github.com/v3/activity/events/types/#issuecommentevent)","- [IssuesEvent](https://developer.github.com/v3/activity/events/types/#issuesevent)","- [LabelEvent](https://developer.github.com/v3/activity/events/types/#labelevent)","- [MarketplacePurchaseEvent](https://developer.github.com/v3/activity/events/types/#marketplacepurchaseevent)","- [MemberEvent](https://developer.github.com/v3/activity/events/types/#memberevent)","- [MembershipEvent](https://developer.github.com/v3/activity/events/types/#membershipevent)","- [MilestoneEvent](https://developer.github.com/v3/activity/events/types/#milestoneevent)","- [OrganizationEvent](https://developer.github.com/v3/activity/events/types/#organizationevent)","- [OrgBlockEvent](https://developer.github.com/v3/activity/events/types/#orgblockevent)","- [PageBuildEvent](https://developer.github.com/v3/activity/events/types/#pagebuildevent)","- [ProjectCardEvent](https://developer.github.com/v3/activity/events/types/#projectcardevent)","- [ProjectColumnEvent](https://developer.github.com/v3/activity/events/types/#projectcolumnevent)","- [ProjectEvent](https://developer.github.com/v3/activity/events/types/#projectevent)","- [PublicEvent](https://developer.github.com/v3/activity/events/types/#publicevent)","- [PullRequestEvent](https://developer.github.com/v3/activity/events/types/#pullrequestevent)","- [PullRequestReviewEvent](https://developer.github.com/v3/activity/events/types/#pullrequestreviewevent)","- [PullRequestReviewCommentEvent](https://developer.github.com/v3/activity/events/types/#pullrequestreviewcommentevent)","- [PushEvent](https://developer.github.com/v3/activity/events/types/#pushevent)","- [ReleaseEvent](https://developer.github.com/v3/activity/events/types/#releaseevent)","- [RepositoryEvent](https://developer.github.com/v3/activity/events/types/#repositoryevent)","- [StatusEvent](https://developer.github.com/v3/activity/events/types/#statusevent)","- [TeamEvent](https://developer.github.com/v3/activity/events/types/#teamevent)","- [TeamAddEvent](https://developer.github.com/v3/activity/events/types/#teamaddevent)","- [WatchEvent](https://developer.github.com/v3/activity/events/types/#watchevent)","","# [Events](https://developer.github.com/v3/activity/events/)","","This is a read-only API to the GitHub events. These events power the various activity streams on the site.","- [List public events](https://developer.github.com/v3/activity/events/#list-public-events)","- [List repository events](https://developer.github.com/v3/activity/events/#list-repository-events)","- [List issue events for a repository](https://developer.github.com/v3/activity/events/#list-issue-events-for-a-repository)","- [List public events for a network of repositories](https://developer.github.com/v3/activity/events/#list-public-events-for-a-network-of-repositories)","- [List public events for an organization](https://developer.github.com/v3/activity/events/#list-public-events-for-an-organization)","- [List events that a user has received](https://developer.github.com/v3/activity/events/#list-events-that-a-user-has-received)","- [List public events that a user has received](https://developer.github.com/v3/activity/events/#list-public-events-that-a-user-has-received)","- [List events performed by a user](https://developer.github.com/v3/activity/events/#list-events-performed-by-a-user)","- [List public events performed by a user](https://developer.github.com/v3/activity/events/#list-public-events-performed-by-a-user)","- [List events for an organization](https://developer.github.com/v3/activity/events/#list-events-for-an-organization)","","Events are optimized for polling with the \"ETag\" header.  If no new events have been triggered, you will see a \"304 Not Modified\" response, and your current rate limit will be untouched.  There is also an \"X-Poll-Interval\" header that specifies how often (in seconds) you are allowed to poll.  In times of high server load, the time may increase.  Please obey the header.","```","curl -I https://api.github.com/users/tater/events","HTTP/1.1 200 OK","X-Poll-Interval: 60","ETag: \"a18c3bded88eb5dbb5c849a489412bf3\"","# The quotes around the ETag value are important","curl -I https://api.github.com/users/tater/events \\","   -H 'If-None-Match: \"a18c3bded88eb5dbb5c849a489412bf3\"'","HTTP/1.1 304 Not Modified","X-Poll-Interval: 60","```","","","Events support [pagination](https://developer.github.com/v3/#pagination), however the ```per_page``` option is unsupported. The fixed page size is 30 items. Fetching up to ten pages is supported, for a total of 300 events.","","Only events created within the past 90 days will be included in timelines. Events older than 90 days will not be included (even if the total number of events in the timeline is less than 300).","","All Events have the same response format:","```","Status: 200 OK","Link: &lt;https://api.github.com/resource?page=2&gt;; rel=\"next\",","      &lt;https://api.github.com/resource?page=5&gt;; rel=\"last\"","```","","```","[","  {","    \"type\": \"Event\",","    \"public\": true,","    \"payload\": {","    },","    \"repo\": {","      \"id\": 3,","      \"name\": \"octocat/Hello-World\",","      \"url\": \"https://api.github.com/repos/octocat/Hello-World\"","    },","    \"actor\": {","      \"id\": 1,","      \"login\": \"octocat\",","      \"gravatar_id\": \"\",","      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",","      \"url\": \"https://api.github.com/users/octocat\"","    },","    \"org\": {","      \"id\": 1,","      \"login\": \"github\",","      \"gravatar_id\": \"\",","      \"url\": \"https://api.github.com/orgs/github\",","      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\"","    },","    \"created_at\": \"2011-09-06T17:26:27Z\",","    \"id\": \"12345\"","  }","]","```","","# [Feeds](https://developer.github.com/v3/activity/feeds/)","","no description","","# [Notifications](https://developer.github.com/v3/activity/notifications/)","","Users receive notifications for conversations in repositories they watch including:","- Issues and their comments","- Pull Requests and their comments","- Comments on any commits","","Notifications are also sent for conversations in unwatched repositories when the user is involved including:","- **@mentions**","- Issue assignments","- Commits the user authors or commits","- Any discussion in which the user actively participates","","All Notification API calls require the ```notifications``` or ```repo``` API scopes.  Doing this will give read-only access to some Issue/Commit content. You will still need the \"repo\" scope to access Issues and Commits from their respective endpoints.","","Notifications come back as \"threads\".  A Thread contains information about the current discussion of an Issue/PullRequest/Commit.","","Notifications are optimized for polling with the \"Last-Modified\" header.  If there are no new notifications, you will see a \"304 Not Modified\" response, leaving your current rate limit untouched.  There is an \"X-Poll-Interval\" header that specifies how often (in seconds) you are allowed to poll.  In times of high server load, the time may increase.  Please obey the header.","```","# Add authentication to your requests","curl -I https://api.github.com/notifications","HTTP/1.1 200 OK","Last-Modified: Thu, 25 Oct 2012 15:16:27 GMT","X-Poll-Interval: 60","# Pass the Last-Modified header exactly","curl -I https://api.github.com/notifications","   -H \"If-Modified-Since: Thu, 25 Oct 2012 15:16:27 GMT\"","HTTP/1.1 304 Not Modified","X-Poll-Interval: 60","```","","# [Starring](https://developer.github.com/v3/activity/starring/)","","Repository Starring is a feature that lets users bookmark repositories.  Stars are shown next to repositories to show an approximate level of interest.  Stars have no effect on notifications or the activity feed.  For that, see [Repository Watching](https://developer.github.com/v3/activity/watching).","","####  Starring vs. Watching","","In August 2012, we [changed the way watching works](https://github.com/blog/1204-notifications-stars) on GitHub.  Many API client applications may be using the original \"watcher\" endpoints for accessing this data. You can now start using the \"star\" endpoints instead (described below). Check out the [Watcher API Change post](https://developer.github.com/changes/2012-09-05-watcher-api/) for more details.","","# [Watching](https://developer.github.com/v3/activity/watching/)","","Watching a Repository registers the user to receive notifications on new discussions, as well as events in the user's activity feed.  See [Repository Starring](https://developer.github.com/v3/activity/starring) for simple repository bookmarks.","","####  Watching vs. Starring","","In August 2012, we [changed the way watching works](https://github.com/blog/1204-notifications-stars) on GitHub.  At the time of that change, many API clients were already using the existing \"watcher\" endpoints to access starring data. To avoid breaking those applications, the legacy \"watcher\" endpoints continue to provide starring data.","","To provide access to watching data, the v3 Watcher API uses the \"subscription\" endpoints described below. Check out the [Watcher API Change post](https://developer.github.com/changes/2012-09-05-watcher-api/) for more details."]},"github-apps":{"description":"# [GitHub Apps](https://developer.github.com/v3/apps/)\n\nFor information on how to authenticate as a GitHub App, see \"[Authentication Options for GitHub Apps](https://developer.github.com/apps/building-github-apps/authentication-options-for-github-apps#authenticating-as-a-github-app).\"\n\n**Note:** To access the API with your integration, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` Header for your requests.\n\n```\napplication/vnd.github.machine-man-preview+json\n```\n\n# [GitHub App Permissions](https://developer.github.com/v3/apps/permissions/)\n\n**Note:** To access the API with your integration, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` Header for your requests.\n\n```\napplication/vnd.github.machine-man-preview+json\n```\n\nGitHub Apps are created with a set of permissions. These define what resources the GitHub App can access via the API. For more information, see \"[Permissions for GitHub Apps](https://developer.github.com/apps/building-github-apps/permissions-for-github-apps/).\"\n\n# [GitHub Apps: Available Endpoints](https://developer.github.com/v3/apps/available-endpoints/)\n\n**Note:** To access the API with your integration, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` Header for your requests.\n\n```\napplication/vnd.github.machine-man-preview+json\n```\n\nThe following endpoints are available for use by GitHub Apps. For more information, see \"[GitHub Apps](https://developer.github.com/apps/building-github-apps/).\"\n\n#### Review Comments\n- [List comments on a pull request](https://developer.github.com/v3/pulls/comments/#list-comments-on-a-pull-request)\n- [List comments in a repository](https://developer.github.com/v3/pulls/comments/#list-comments-in-a-repository)\n- [Get a single comment](https://developer.github.com/v3/pulls/comments/#get-a-single-comment)\n- [Create a comment](https://developer.github.com/v3/pulls/comments/#create-a-comment)\n- [Edit a comment](https://developer.github.com/v3/pulls/comments/#edit-a-comment)\n- [Delete a comment](https://developer.github.com/v3/pulls/comments/#delete-a-comment)\n\n#### Reviews\n- [Get a single review](https://developer.github.com/v3/pulls/reviews/#get-a-single-review)\n- [Get comments for a single review](https://developer.github.com/v3/pulls/reviews/#get-comments-for-a-single-review)\n- [Create a pull request review](https://developer.github.com/v3/pulls/reviews/#create-a-pull-request-review)\n\n#### Teams\n- [List teams](https://developer.github.com/v3/teams/#list-teams)\n- [Get team](https://developer.github.com/v3/teams/#get-team)\n- [Edit team](https://developer.github.com/v3/teams/#edit-team)\n- [Delete team](https://developer.github.com/v3/teams/#delete-team)\n- [List child teams](https://developer.github.com/v3/teams/#list-child-teams)\n- [List team repos](https://developer.github.com/v3/teams/#list-team-repos)\n\n#### Commits\n- [Get a Commit](https://developer.github.com/v3/git/commits/#get-a-commit)\n- [Create a Commit](https://developer.github.com/v3/git/commits/#create-a-commit)\n- [List commits on a repository](https://developer.github.com/v3/repos/commits/#list-commits-on-a-repository)\n- [Get a single commit](https://developer.github.com/v3/repos/commits/#get-a-single-commit)\n- [Get the SHA-1 of a commit reference](https://developer.github.com/v3/repos/commits/#get-the-sha-1-of-a-commit-reference)\n\n#### Tags\n- [Get a Tag](https://developer.github.com/v3/git/tags/#get-a-tag)\n- [Create a Tag Object](https://developer.github.com/v3/git/tags/#create-a-tag-object)\n\n#### Blobs\n- [Get a Blob](https://developer.github.com/v3/git/blobs/#get-a-blob)\n- [Create a Blob](https://developer.github.com/v3/git/blobs/#create-a-blob)\n\n#### Trees\n- [Get a Tree](https://developer.github.com/v3/git/trees/#get-a-tree)\n- [Create a Tree](https://developer.github.com/v3/git/trees/#create-a-tree)\n\n#### References\n- [Get a Reference](https://developer.github.com/v3/git/refs/#get-a-reference)\n- [Get all References](https://developer.github.com/v3/git/refs/#get-all-references)\n- [Create a Reference](https://developer.github.com/v3/git/refs/#create-a-reference)\n- [Update a Reference](https://developer.github.com/v3/git/refs/#update-a-reference)\n- [Delete a Reference](https://developer.github.com/v3/git/refs/#delete-a-reference)\n\n#### Issues\n- [List issues for a repository](https://developer.github.com/v3/issues/#list-issues-for-a-repository)\n- [Get a single issue](https://developer.github.com/v3/issues/#get-a-single-issue)\n- [Create an issue](https://developer.github.com/v3/issues/#create-an-issue)\n- [Edit an issue](https://developer.github.com/v3/issues/#edit-an-issue)\n- [Lock an issue](https://developer.github.com/v3/issues/#lock-an-issue)\n- [Unlock an issue](https://developer.github.com/v3/issues/#unlock-an-issue)\n\n#### Source Imports\n- [Start an import](https://developer.github.com/v3/migration/source_imports/#start-an-import)\n- [Get import progress](https://developer.github.com/v3/migration/source_imports/#get-import-progress)\n- [Update existing import](https://developer.github.com/v3/migration/source_imports/#update-existing-import)\n- [Get commit authors](https://developer.github.com/v3/migration/source_imports/#get-commit-authors)\n- [Map a commit author](https://developer.github.com/v3/migration/source_imports/#map-a-commit-author)\n- [Set Git LFS preference](https://developer.github.com/v3/migration/source_imports/#set-git-lfs-preference)\n- [Get large files](https://developer.github.com/v3/migration/source_imports/#get-large-files)\n- [Cancel an import](https://developer.github.com/v3/migration/source_imports/#cancel-an-import)\n\n#### Organizations\n- [List all organizations](https://developer.github.com/v3/orgs/#list-all-organizations)\n- [List user organizations](https://developer.github.com/v3/orgs/#list-user-organizations)\n\n#### Watching\n- [List watchers](https://developer.github.com/v3/activity/watching/#list-watchers)\n\n#### Starring\n- [List Stargazers](https://developer.github.com/v3/activity/starring/#list-stargazers)\n\n#### Events\n- [List public events](https://developer.github.com/v3/activity/events/#list-public-events)\n- [List repository events](https://developer.github.com/v3/activity/events/#list-repository-events)\n- [List public events for a network of repositories](https://developer.github.com/v3/activity/events/#list-public-events-for-a-network-of-repositories)\n- [List public events for an organization](https://developer.github.com/v3/activity/events/#list-public-events-for-an-organization)\n- [List events that a user has received](https://developer.github.com/v3/activity/events/#list-events-that-a-user-has-received)\n- [List public events that a user has received](https://developer.github.com/v3/activity/events/#list-public-events-that-a-user-has-received)\n- [List events performed by a user](https://developer.github.com/v3/activity/events/#list-events-performed-by-a-user)\n- [List public events performed by a user](https://developer.github.com/v3/activity/events/#list-public-events-performed-by-a-user)\n- [List events for an issue](https://developer.github.com/v3/issues/events/#list-events-for-an-issue)\n- [List events for a repository](https://developer.github.com/v3/issues/events/#list-events-for-a-repository)\n- [Get a single event](https://developer.github.com/v3/issues/events/#get-a-single-event)\n\n#### Feeds\n- [List Feeds](https://developer.github.com/v3/activity/feeds/#list-feeds)\n\n#### Meta\n- [Meta](https://developer.github.com/v3/meta/#meta)\n\n#### Codes of Conduct\n- [List all codes of conduct](https://developer.github.com/v3/codes_of_conduct/#list-all-codes-of-conduct)\n- [Get an individual code of conduct](https://developer.github.com/v3/codes_of_conduct/#get-an-individual-code-of-conduct)\n- [Get a repository's code of conduct](https://developer.github.com/v3/codes_of_conduct/#get-a-repositorys-code-of-conduct)\n\n#### Labels\n- [List all labels for this repository](https://developer.github.com/v3/issues/labels/#list-all-labels-for-this-repository)\n- [Get a single label](https://developer.github.com/v3/issues/labels/#get-a-single-label)\n- [Create a label](https://developer.github.com/v3/issues/labels/#create-a-label)\n- [Update a label](https://developer.github.com/v3/issues/labels/#update-a-label)\n- [Delete a label](https://developer.github.com/v3/issues/labels/#delete-a-label)\n- [List labels on an issue](https://developer.github.com/v3/issues/labels/#list-labels-on-an-issue)\n- [Add labels to an issue](https://developer.github.com/v3/issues/labels/#add-labels-to-an-issue)\n- [Remove a label from an issue](https://developer.github.com/v3/issues/labels/#remove-a-label-from-an-issue)\n- [Replace all labels for an issue](https://developer.github.com/v3/issues/labels/#replace-all-labels-for-an-issue)\n- [Remove all labels from an issue](https://developer.github.com/v3/issues/labels/#remove-all-labels-from-an-issue)\n- [Get labels for every issue in a milestone](https://developer.github.com/v3/issues/labels/#get-labels-for-every-issue-in-a-milestone)\n\n#### Comments\n- [List comments on an issue](https://developer.github.com/v3/issues/comments/#list-comments-on-an-issue)\n- [List comments in a repository](https://developer.github.com/v3/issues/comments/#list-comments-in-a-repository)\n- [Get a single comment](https://developer.github.com/v3/issues/comments/#get-a-single-comment)\n- [Create a comment](https://developer.github.com/v3/issues/comments/#create-a-comment)\n- [Edit a comment](https://developer.github.com/v3/issues/comments/#edit-a-comment)\n- [Delete a comment](https://developer.github.com/v3/issues/comments/#delete-a-comment)\n- [List commit comments for a repository](https://developer.github.com/v3/repos/comments/#list-commit-comments-for-a-repository)\n- [List comments for a single commit](https://developer.github.com/v3/repos/comments/#list-comments-for-a-single-commit)\n- [Create a commit comment](https://developer.github.com/v3/repos/comments/#create-a-commit-comment)\n- [Get a single commit comment](https://developer.github.com/v3/repos/comments/#get-a-single-commit-comment)\n- [Update a commit comment](https://developer.github.com/v3/repos/comments/#update-a-commit-comment)\n- [Delete a commit comment](https://developer.github.com/v3/repos/comments/#delete-a-commit-comment)\n\n#### Assignees\n- [List assignees](https://developer.github.com/v3/issues/assignees/#list-assignees)\n- [Check assignee](https://developer.github.com/v3/issues/assignees/#check-assignee)\n- [Add assignees to an issue](https://developer.github.com/v3/issues/assignees/#add-assignees-to-an-issue)\n- [Remove assignees from an issue](https://developer.github.com/v3/issues/assignees/#remove-assignees-from-an-issue)\n\n#### Milestones\n- [List milestones for a repository](https://developer.github.com/v3/issues/milestones/#list-milestones-for-a-repository)\n- [Get a single milestone](https://developer.github.com/v3/issues/milestones/#get-a-single-milestone)\n- [Create a milestone](https://developer.github.com/v3/issues/milestones/#create-a-milestone)\n- [Update a milestone](https://developer.github.com/v3/issues/milestones/#update-a-milestone)\n- [Delete a milestone](https://developer.github.com/v3/issues/milestones/#delete-a-milestone)\n\n#### Timeline\n- [List events for an issue](https://developer.github.com/v3/issues/timeline/#list-events-for-an-issue)\n\n#### Pull Requests\n- [List pull requests](https://developer.github.com/v3/pulls/#list-pull-requests)\n- [Get a single pull request](https://developer.github.com/v3/pulls/#get-a-single-pull-request)\n- [Create a pull request](https://developer.github.com/v3/pulls/#create-a-pull-request)\n- [Update a pull request](https://developer.github.com/v3/pulls/#update-a-pull-request)\n- [List commits on a pull request](https://developer.github.com/v3/pulls/#list-commits-on-a-pull-request)\n- [List pull requests files](https://developer.github.com/v3/pulls/#list-pull-requests-files)\n- [Get if a pull request has been merged](https://developer.github.com/v3/pulls/#get-if-a-pull-request-has-been-merged)\n\n#### Miscellaneous\n- [Emojis](https://developer.github.com/v3/misc/#emojis)\n\n#### Installations\n- [List repositories](https://developer.github.com/v3/apps/installations/#list-repositories)\n\n#### GitHub Apps\n- [Get a single GitHub App](https://developer.github.com/v3/apps/#get-a-single-github-app)\n- [Get the authenticated GitHub App](https://developer.github.com/v3/apps/#get-the-authenticated-github-app)\n- [Find installations](https://developer.github.com/v3/apps/#find-installations)\n- [Get a single installation](https://developer.github.com/v3/apps/#get-a-single-installation)\n- [Create a new installation token](https://developer.github.com/v3/apps/#create-a-new-installation-token)\n\n#### Users\n- [Get a single user](https://developer.github.com/v3/users/#get-a-single-user)\n- [Get all users](https://developer.github.com/v3/users/#get-all-users)\n\n#### Projects\n- [List repository projects](https://developer.github.com/v3/projects/#list-repository-projects)\n- [List organization projects](https://developer.github.com/v3/projects/#list-organization-projects)\n- [Get a project](https://developer.github.com/v3/projects/#get-a-project)\n- [Create a repository project](https://developer.github.com/v3/projects/#create-a-repository-project)\n- [Create an organization project](https://developer.github.com/v3/projects/#create-an-organization-project)\n- [Update a project](https://developer.github.com/v3/projects/#update-a-project)\n- [Delete a project](https://developer.github.com/v3/projects/#delete-a-project)\n\n#### Rate Limit\n- [Get your current rate limit status](https://developer.github.com/v3/rate_limit/#get-your-current-rate-limit-status)\n\n#### Markdown\n- [Render an arbitrary Markdown document](https://developer.github.com/v3/markdown/#render-an-arbitrary-markdown-document)\n- [Render a Markdown document in raw mode](https://developer.github.com/v3/markdown/#render-a-markdown-document-in-raw-mode)\n\n#### Forks\n- [List forks](https://developer.github.com/v3/repos/forks/#list-forks)\n- [Create a fork](https://developer.github.com/v3/repos/forks/#create-a-fork)\n\n#### Statuses\n- [Create a status](https://developer.github.com/v3/repos/statuses/#create-a-status)\n- [List statuses for a specific ref](https://developer.github.com/v3/repos/statuses/#list-statuses-for-a-specific-ref)\n- [Get the combined status for a specific ref](https://developer.github.com/v3/repos/statuses/#get-the-combined-status-for-a-specific-ref)\n\n#### Branches\n- [List branches](https://developer.github.com/v3/repos/branches/#list-branches)\n- [Get branch](https://developer.github.com/v3/repos/branches/#get-branch)\n- [Get branch protection](https://developer.github.com/v3/repos/branches/#get-branch-protection)\n- [Update branch protection](https://developer.github.com/v3/repos/branches/#update-branch-protection)\n- [Remove branch protection](https://developer.github.com/v3/repos/branches/#remove-branch-protection)\n- [Get required status checks of protected branch](https://developer.github.com/v3/repos/branches/#get-required-status-checks-of-protected-branch)\n- [Update required status checks of protected branch](https://developer.github.com/v3/repos/branches/#update-required-status-checks-of-protected-branch)\n- [Remove required status checks of protected branch](https://developer.github.com/v3/repos/branches/#remove-required-status-checks-of-protected-branch)\n- [List required status checks contexts of protected branch](https://developer.github.com/v3/repos/branches/#list-required-status-checks-contexts-of-protected-branch)\n- [Replace required status checks contexts of protected branch](https://developer.github.com/v3/repos/branches/#replace-required-status-checks-contexts-of-protected-branch)\n- [Add required status checks contexts of protected branch](https://developer.github.com/v3/repos/branches/#add-required-status-checks-contexts-of-protected-branch)\n- [Remove required status checks contexts of protected branch](https://developer.github.com/v3/repos/branches/#remove-required-status-checks-contexts-of-protected-branch)\n- [Get pull request review enforcement of protected branch](https://developer.github.com/v3/repos/branches/#get-pull-request-review-enforcement-of-protected-branch)\n- [Update pull request review enforcement of protected branch](https://developer.github.com/v3/repos/branches/#update-pull-request-review-enforcement-of-protected-branch)\n- [Remove pull request review enforcement of protected branch](https://developer.github.com/v3/repos/branches/#remove-pull-request-review-enforcement-of-protected-branch)\n- [Get required signatures of protected branch](https://developer.github.com/v3/repos/branches/#get-required-signatures-of-protected-branch)\n- [Add required signatures of protected branch](https://developer.github.com/v3/repos/branches/#add-required-signatures-of-protected-branch)\n- [Remove required signatures of protected branch](https://developer.github.com/v3/repos/branches/#remove-required-signatures-of-protected-branch)\n- [Get admin enforcement of protected branch](https://developer.github.com/v3/repos/branches/#get-admin-enforcement-of-protected-branch)\n- [Add admin enforcement of protected branch](https://developer.github.com/v3/repos/branches/#add-admin-enforcement-of-protected-branch)\n- [Remove admin enforcement of protected branch](https://developer.github.com/v3/repos/branches/#remove-admin-enforcement-of-protected-branch)\n- [Get restrictions of protected branch](https://developer.github.com/v3/repos/branches/#get-restrictions-of-protected-branch)\n- [Remove restrictions of protected branch](https://developer.github.com/v3/repos/branches/#remove-restrictions-of-protected-branch)\n- [List team restrictions of protected branch](https://developer.github.com/v3/repos/branches/#list-team-restrictions-of-protected-branch)\n- [Replace team restrictions of protected branch](https://developer.github.com/v3/repos/branches/#replace-team-restrictions-of-protected-branch)\n- [Add team restrictions of protected branch](https://developer.github.com/v3/repos/branches/#add-team-restrictions-of-protected-branch)\n- [Remove team restrictions of protected branch](https://developer.github.com/v3/repos/branches/#remove-team-restrictions-of-protected-branch)\n- [List user restrictions of protected branch](https://developer.github.com/v3/repos/branches/#list-user-restrictions-of-protected-branch)\n- [Replace user restrictions of protected branch](https://developer.github.com/v3/repos/branches/#replace-user-restrictions-of-protected-branch)\n- [Add user restrictions of protected branch](https://developer.github.com/v3/repos/branches/#add-user-restrictions-of-protected-branch)\n- [Remove user restrictions of protected branch](https://developer.github.com/v3/repos/branches/#remove-user-restrictions-of-protected-branch)\n\n#### Deploy Keys\n- [List deploy keys](https://developer.github.com/v3/repos/keys/#list-deploy-keys)\n- [Get a deploy key](https://developer.github.com/v3/repos/keys/#get-a-deploy-key)\n- [Add a new deploy key](https://developer.github.com/v3/repos/keys/#add-a-new-deploy-key)\n- [Remove a deploy key](https://developer.github.com/v3/repos/keys/#remove-a-deploy-key)\n\n#### Community Profile\n- [Retrieve community profile metrics](https://developer.github.com/v3/repos/community/#retrieve-community-profile-metrics)\n\n#### Deployments\n- [List deployments](https://developer.github.com/v3/repos/deployments/#list-deployments)\n- [Get a single deployment](https://developer.github.com/v3/repos/deployments/#get-a-single-deployment)\n- [Create a deployment](https://developer.github.com/v3/repos/deployments/#create-a-deployment)\n- [List deployment statuses](https://developer.github.com/v3/repos/deployments/#list-deployment-statuses)\n- [Get a single deployment status](https://developer.github.com/v3/repos/deployments/#get-a-single-deployment-status)\n- [Create a deployment status](https://developer.github.com/v3/repos/deployments/#create-a-deployment-status)\n\n#### Contents\n- [Get the README](https://developer.github.com/v3/repos/contents/#get-the-readme)\n- [Get contents](https://developer.github.com/v3/repos/contents/#get-contents)\n- [Create a file](https://developer.github.com/v3/repos/contents/#create-a-file)\n- [Update a file](https://developer.github.com/v3/repos/contents/#update-a-file)\n- [Delete a file](https://developer.github.com/v3/repos/contents/#delete-a-file)\n- [Get archive link](https://developer.github.com/v3/repos/contents/#get-archive-link)\n\n#### Releases\n- [List releases for a repository](https://developer.github.com/v3/repos/releases/#list-releases-for-a-repository)\n- [Get a single release](https://developer.github.com/v3/repos/releases/#get-a-single-release)\n- [Get the latest release](https://developer.github.com/v3/repos/releases/#get-the-latest-release)\n- [Get a release by tag name](https://developer.github.com/v3/repos/releases/#get-a-release-by-tag-name)\n- [Create a release](https://developer.github.com/v3/repos/releases/#create-a-release)\n- [Edit a release](https://developer.github.com/v3/repos/releases/#edit-a-release)\n- [Delete a release](https://developer.github.com/v3/repos/releases/#delete-a-release)\n- [List assets for a release](https://developer.github.com/v3/repos/releases/#list-assets-for-a-release)\n- [Upload a release asset](https://developer.github.com/v3/repos/releases/#upload-a-release-asset)\n- [Get a single release asset](https://developer.github.com/v3/repos/releases/#get-a-single-release-asset)\n- [Edit a release asset](https://developer.github.com/v3/repos/releases/#edit-a-release-asset)\n- [Delete a release asset](https://developer.github.com/v3/repos/releases/#delete-a-release-asset)\n\n#### Collaborators\n- [List collaborators](https://developer.github.com/v3/repos/collaborators/#list-collaborators)\n- [Check if a user is a collaborator](https://developer.github.com/v3/repos/collaborators/#check-if-a-user-is-a-collaborator)\n- [Review a user's permission level](https://developer.github.com/v3/repos/collaborators/#review-a-users-permission-level)\n- [Add user as a collaborator](https://developer.github.com/v3/repos/collaborators/#add-user-as-a-collaborator)\n- [Remove user as a collaborator](https://developer.github.com/v3/repos/collaborators/#remove-user-as-a-collaborator)\n\n#### Statistics\n- [Get contributors list with additions, deletions, and commit counts](https://developer.github.com/v3/repos/statistics/#get-contributors-list-with-additions-deletions-and-commit-counts)\n- [Get the last year of commit activity data](https://developer.github.com/v3/repos/statistics/#get-the-last-year-of-commit-activity-data)\n- [Get the number of additions and deletions per week](https://developer.github.com/v3/repos/statistics/#get-the-number-of-additions-and-deletions-per-week)\n- [Get the weekly commit count for the repository owner and everyone else](https://developer.github.com/v3/repos/statistics/#get-the-weekly-commit-count-for-the-repository-owner-and-everyone-else)\n- [Get the number of commits per hour in each day](https://developer.github.com/v3/repos/statistics/#get-the-number-of-commits-per-hour-in-each-day)\n\n#### Merging\n- [Perform a merge](https://developer.github.com/v3/repos/merging/#perform-a-merge)\n\n#### Pages\n- [Get information about a Pages site](https://developer.github.com/v3/repos/pages/#get-information-about-a-pages-site)\n- [Request a page build](https://developer.github.com/v3/repos/pages/#request-a-page-build)\n- [List Pages builds](https://developer.github.com/v3/repos/pages/#list-pages-builds)\n- [List latest Pages build](https://developer.github.com/v3/repos/pages/#list-latest-pages-build)\n- [List a specific Pages build](https://developer.github.com/v3/repos/pages/#list-a-specific-pages-build)\n\n#### Members\n- [Members list](https://developer.github.com/v3/orgs/members/#members-list)\n- [Check membership](https://developer.github.com/v3/orgs/members/#check-membership)\n- [Remove a member](https://developer.github.com/v3/orgs/members/#remove-a-member)\n- [Get organization membership](https://developer.github.com/v3/orgs/members/#get-organization-membership)\n- [Add or update organization membership](https://developer.github.com/v3/orgs/members/#add-or-update-organization-membership)\n- [Remove organization membership](https://developer.github.com/v3/orgs/members/#remove-organization-membership)\n\n#### Outside Collaborators\n- [List outside collaborators](https://developer.github.com/v3/orgs/outside_collaborators/#list-outside-collaborators)\n- [Remove outside collaborator](https://developer.github.com/v3/orgs/outside_collaborators/#remove-outside-collaborator)\n- [Convert member to outside collaborator](https://developer.github.com/v3/orgs/outside_collaborators/#convert-member-to-outside-collaborator)\n\n#### Licenses\n- [List all licenses](https://developer.github.com/v3/licenses/#list-all-licenses)\n- [Get an individual license](https://developer.github.com/v3/licenses/#get-an-individual-license)\n\n#### Reactions\n- [List reactions for a commit comment](https://developer.github.com/v3/reactions/#list-reactions-for-a-commit-comment)\n- [List reactions for an issue](https://developer.github.com/v3/reactions/#list-reactions-for-an-issue)\n- [List reactions for an issue comment](https://developer.github.com/v3/reactions/#list-reactions-for-an-issue-comment)\n- [List reactions for a pull request review comment](https://developer.github.com/v3/reactions/#list-reactions-for-a-pull-request-review-comment)\n- [List reactions for a team discussion](https://developer.github.com/v3/reactions/#list-reactions-for-a-team-discussion)\n- [List reactions for a team discussion comment](https://developer.github.com/v3/reactions/#list-reactions-for-a-team-discussion-comment)\n\n#### Public Keys\n- [List public keys for a user](https://developer.github.com/v3/users/keys/#list-public-keys-for-a-user)\n\n#### Team Members\n- [List team members](https://developer.github.com/v3/teams/members/#list-team-members)\n- [Get team member](https://developer.github.com/v3/teams/members/#get-team-member)\n- [Get team membership](https://developer.github.com/v3/teams/members/#get-team-membership)\n- [Add or update team membership](https://developer.github.com/v3/teams/members/#add-or-update-team-membership)\n- [Remove team membership](https://developer.github.com/v3/teams/members/#remove-team-membership)\n- [List pending team invitations](https://developer.github.com/v3/teams/members/#list-pending-team-invitations)\n\n#### Team Discussion Comments\n- [List comments](https://developer.github.com/v3/teams/discussion_comments/#list-comments)\n- [Get a single comment](https://developer.github.com/v3/teams/discussion_comments/#get-a-single-comment)\n- [Create a comment](https://developer.github.com/v3/teams/discussion_comments/#create-a-comment)\n- [Edit a comment](https://developer.github.com/v3/teams/discussion_comments/#edit-a-comment)\n- [Delete a comment](https://developer.github.com/v3/teams/discussion_comments/#delete-a-comment)\n\n#### Team Discussions\n- [List discussions](https://developer.github.com/v3/teams/discussions/#list-discussions)\n- [Get a single discussion](https://developer.github.com/v3/teams/discussions/#get-a-single-discussion)\n- [Create a discussion](https://developer.github.com/v3/teams/discussions/#create-a-discussion)\n- [Edit a discussion](https://developer.github.com/v3/teams/discussions/#edit-a-discussion)\n- [Delete a discussion](https://developer.github.com/v3/teams/discussions/#delete-a-discussion)\n\n#### Overview\n- [Root endpoint](https://developer.github.com/v3/#root-endpoint)\n\n#### Repositories\n- [List user repositories](https://developer.github.com/v3/repos/#list-user-repositories)\n- [List all public repositories](https://developer.github.com/v3/repos/#list-all-public-repositories)\n- [Create](https://developer.github.com/v3/repos/#create)\n- [Get](https://developer.github.com/v3/repos/#get)\n- [Edit](https://developer.github.com/v3/repos/#edit)\n- [List all topics for a repository](https://developer.github.com/v3/repos/#list-all-topics-for-a-repository)\n- [Replace all topics for a repository](https://developer.github.com/v3/repos/#replace-all-topics-for-a-repository)\n- [List contributors](https://developer.github.com/v3/repos/#list-contributors)\n- [List languages](https://developer.github.com/v3/repos/#list-languages)\n- [List teams](https://developer.github.com/v3/repos/#list-teams)\n- [List tags](https://developer.github.com/v3/repos/#list-tags)\n- [Delete a repository](https://developer.github.com/v3/repos/#delete-a-repository)\n\n#### Project columns\n- [Get a project column](https://developer.github.com/v3/projects/columns/#get-a-project-column)\n- [Create a project column](https://developer.github.com/v3/projects/columns/#create-a-project-column)\n- [Update a project column](https://developer.github.com/v3/projects/columns/#update-a-project-column)\n- [Delete a project column](https://developer.github.com/v3/projects/columns/#delete-a-project-column)\n- [Move a project column](https://developer.github.com/v3/projects/columns/#move-a-project-column)\n\n#### Project cards\n- [List project cards](https://developer.github.com/v3/projects/cards/#list-project-cards)\n- [Get a project card](https://developer.github.com/v3/projects/cards/#get-a-project-card)\n- [Create a project card](https://developer.github.com/v3/projects/cards/#create-a-project-card)\n- [Update a project card](https://developer.github.com/v3/projects/cards/#update-a-project-card)\n- [Delete a project card](https://developer.github.com/v3/projects/cards/#delete-a-project-card)\n- [Move a project card](https://developer.github.com/v3/projects/cards/#move-a-project-card)\n\n#### Search\n- [Search repositories](https://developer.github.com/v3/search/#search-repositories)\n- [Search commits](https://developer.github.com/v3/search/#search-commits)\n- [Search code](https://developer.github.com/v3/search/#search-code)\n- [Search issues](https://developer.github.com/v3/search/#search-issues)\n- [Search users](https://developer.github.com/v3/search/#search-users)\n- [Search topics](https://developer.github.com/v3/search/#search-topics)\n- [Search labels](https://developer.github.com/v3/search/#search-labels)\n\n# [GitHub Marketplace](https://developer.github.com/v3/apps/marketplace/)\n\n**Note:** The The GitHub Marketplace API on GitHub is currently available for developers to preview. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.valkyrie-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nFor more information about GitHub Marketplace, see \"[GitHub Marketplace](https://developer.github.com/apps/marketplace/).\"\n\n**Note:** This preview includes methods for testing with **stubbed data**. Stubbed data is fake data that's useful for testing your GitHub Apps. Stubbed data is hard-coded and will not change based on actual subscriptions.\n\nTo test with stubbed data, use a stubbed endpoint in place of its production counterpart. This allows you to test whether API logic succeeds before listing GitHub Apps on GitHub Marketplace.\n\nBe sure to replace stubbed endpoints with production endpoints before deploying your GitHub App.\n\nEndpoints for ```/marketplace_listing/*``` and ```/user/marketplace_purchases``` are only accessible by OAuth Apps using ```client_id``` and ```secret``` basic authentication or by [GitHub Apps using a JWT](https://developer.github.com/apps/building-github-apps/authentication-options-for-github-apps/#authenticating-as-a-github-app).\n-\n\nFor API authentication for GitHub Marketplace listings associated with an OAuth App, see \"[Authorization options for OAuth Apps](https://developer.github.com/apps/building-oauth-apps/authorization-options-for-oauth-apps/).\"\n-\n\nFor API authentication for GitHub Marketplace listings associated with a GitHub App, see \"[Authentication options for GitHub Apps](https://developer.github.com/apps/building-github-apps/authentication-options-for-github-apps/).\"\n\n# [Installations](https://developer.github.com/v3/apps/installations/)\n\nFor information on how to authenticate as an installation, see \"[Authentication Options for GitHub Apps](https://developer.github.com/apps/building-github-apps/authentication-options-for-github-apps#authenticating-as-an-installation).\"\n\n**Note:** To access the API with your integration, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` Header for your requests.\n\n```\napplication/vnd.github.machine-man-preview+json\n```","x-swgg-descriptionLineList":["# [GitHub Apps](https://developer.github.com/v3/apps/)","","For information on how to authenticate as a GitHub App, see \"[Authentication Options for GitHub Apps](https://developer.github.com/apps/building-github-apps/authentication-options-for-github-apps#authenticating-as-a-github-app).\"","","**Note:** To access the API with your integration, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` Header for your requests.","","```","application/vnd.github.machine-man-preview+json","```","","# [GitHub App Permissions](https://developer.github.com/v3/apps/permissions/)","","**Note:** To access the API with your integration, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` Header for your requests.","","```","application/vnd.github.machine-man-preview+json","```","","GitHub Apps are created with a set of permissions. These define what resources the GitHub App can access via the API. For more information, see \"[Permissions for GitHub Apps](https://developer.github.com/apps/building-github-apps/permissions-for-github-apps/).\"","","# [GitHub Apps: Available Endpoints](https://developer.github.com/v3/apps/available-endpoints/)","","**Note:** To access the API with your integration, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` Header for your requests.","","```","application/vnd.github.machine-man-preview+json","```","","The following endpoints are available for use by GitHub Apps. For more information, see \"[GitHub Apps](https://developer.github.com/apps/building-github-apps/).\"","","#### Review Comments","- [List comments on a pull request](https://developer.github.com/v3/pulls/comments/#list-comments-on-a-pull-request)","- [List comments in a repository](https://developer.github.com/v3/pulls/comments/#list-comments-in-a-repository)","- [Get a single comment](https://developer.github.com/v3/pulls/comments/#get-a-single-comment)","- [Create a comment](https://developer.github.com/v3/pulls/comments/#create-a-comment)","- [Edit a comment](https://developer.github.com/v3/pulls/comments/#edit-a-comment)","- [Delete a comment](https://developer.github.com/v3/pulls/comments/#delete-a-comment)","","#### Reviews","- [Get a single review](https://developer.github.com/v3/pulls/reviews/#get-a-single-review)","- [Get comments for a single review](https://developer.github.com/v3/pulls/reviews/#get-comments-for-a-single-review)","- [Create a pull request review](https://developer.github.com/v3/pulls/reviews/#create-a-pull-request-review)","","#### Teams","- [List teams](https://developer.github.com/v3/teams/#list-teams)","- [Get team](https://developer.github.com/v3/teams/#get-team)","- [Edit team](https://developer.github.com/v3/teams/#edit-team)","- [Delete team](https://developer.github.com/v3/teams/#delete-team)","- [List child teams](https://developer.github.com/v3/teams/#list-child-teams)","- [List team repos](https://developer.github.com/v3/teams/#list-team-repos)","","#### Commits","- [Get a Commit](https://developer.github.com/v3/git/commits/#get-a-commit)","- [Create a Commit](https://developer.github.com/v3/git/commits/#create-a-commit)","- [List commits on a repository](https://developer.github.com/v3/repos/commits/#list-commits-on-a-repository)","- [Get a single commit](https://developer.github.com/v3/repos/commits/#get-a-single-commit)","- [Get the SHA-1 of a commit reference](https://developer.github.com/v3/repos/commits/#get-the-sha-1-of-a-commit-reference)","","#### Tags","- [Get a Tag](https://developer.github.com/v3/git/tags/#get-a-tag)","- [Create a Tag Object](https://developer.github.com/v3/git/tags/#create-a-tag-object)","","#### Blobs","- [Get a Blob](https://developer.github.com/v3/git/blobs/#get-a-blob)","- [Create a Blob](https://developer.github.com/v3/git/blobs/#create-a-blob)","","#### Trees","- [Get a Tree](https://developer.github.com/v3/git/trees/#get-a-tree)","- [Create a Tree](https://developer.github.com/v3/git/trees/#create-a-tree)","","#### References","- [Get a Reference](https://developer.github.com/v3/git/refs/#get-a-reference)","- [Get all References](https://developer.github.com/v3/git/refs/#get-all-references)","- [Create a Reference](https://developer.github.com/v3/git/refs/#create-a-reference)","- [Update a Reference](https://developer.github.com/v3/git/refs/#update-a-reference)","- [Delete a Reference](https://developer.github.com/v3/git/refs/#delete-a-reference)","","#### Issues","- [List issues for a repository](https://developer.github.com/v3/issues/#list-issues-for-a-repository)","- [Get a single issue](https://developer.github.com/v3/issues/#get-a-single-issue)","- [Create an issue](https://developer.github.com/v3/issues/#create-an-issue)","- [Edit an issue](https://developer.github.com/v3/issues/#edit-an-issue)","- [Lock an issue](https://developer.github.com/v3/issues/#lock-an-issue)","- [Unlock an issue](https://developer.github.com/v3/issues/#unlock-an-issue)","","#### Source Imports","- [Start an import](https://developer.github.com/v3/migration/source_imports/#start-an-import)","- [Get import progress](https://developer.github.com/v3/migration/source_imports/#get-import-progress)","- [Update existing import](https://developer.github.com/v3/migration/source_imports/#update-existing-import)","- [Get commit authors](https://developer.github.com/v3/migration/source_imports/#get-commit-authors)","- [Map a commit author](https://developer.github.com/v3/migration/source_imports/#map-a-commit-author)","- [Set Git LFS preference](https://developer.github.com/v3/migration/source_imports/#set-git-lfs-preference)","- [Get large files](https://developer.github.com/v3/migration/source_imports/#get-large-files)","- [Cancel an import](https://developer.github.com/v3/migration/source_imports/#cancel-an-import)","","#### Organizations","- [List all organizations](https://developer.github.com/v3/orgs/#list-all-organizations)","- [List user organizations](https://developer.github.com/v3/orgs/#list-user-organizations)","","#### Watching","- [List watchers](https://developer.github.com/v3/activity/watching/#list-watchers)","","#### Starring","- [List Stargazers](https://developer.github.com/v3/activity/starring/#list-stargazers)","","#### Events","- [List public events](https://developer.github.com/v3/activity/events/#list-public-events)","- [List repository events](https://developer.github.com/v3/activity/events/#list-repository-events)","- [List public events for a network of repositories](https://developer.github.com/v3/activity/events/#list-public-events-for-a-network-of-repositories)","- [List public events for an organization](https://developer.github.com/v3/activity/events/#list-public-events-for-an-organization)","- [List events that a user has received](https://developer.github.com/v3/activity/events/#list-events-that-a-user-has-received)","- [List public events that a user has received](https://developer.github.com/v3/activity/events/#list-public-events-that-a-user-has-received)","- [List events performed by a user](https://developer.github.com/v3/activity/events/#list-events-performed-by-a-user)","- [List public events performed by a user](https://developer.github.com/v3/activity/events/#list-public-events-performed-by-a-user)","- [List events for an issue](https://developer.github.com/v3/issues/events/#list-events-for-an-issue)","- [List events for a repository](https://developer.github.com/v3/issues/events/#list-events-for-a-repository)","- [Get a single event](https://developer.github.com/v3/issues/events/#get-a-single-event)","","#### Feeds","- [List Feeds](https://developer.github.com/v3/activity/feeds/#list-feeds)","","#### Meta","- [Meta](https://developer.github.com/v3/meta/#meta)","","#### Codes of Conduct","- [List all codes of conduct](https://developer.github.com/v3/codes_of_conduct/#list-all-codes-of-conduct)","- [Get an individual code of conduct](https://developer.github.com/v3/codes_of_conduct/#get-an-individual-code-of-conduct)","- [Get a repository's code of conduct](https://developer.github.com/v3/codes_of_conduct/#get-a-repositorys-code-of-conduct)","","#### Labels","- [List all labels for this repository](https://developer.github.com/v3/issues/labels/#list-all-labels-for-this-repository)","- [Get a single label](https://developer.github.com/v3/issues/labels/#get-a-single-label)","- [Create a label](https://developer.github.com/v3/issues/labels/#create-a-label)","- [Update a label](https://developer.github.com/v3/issues/labels/#update-a-label)","- [Delete a label](https://developer.github.com/v3/issues/labels/#delete-a-label)","- [List labels on an issue](https://developer.github.com/v3/issues/labels/#list-labels-on-an-issue)","- [Add labels to an issue](https://developer.github.com/v3/issues/labels/#add-labels-to-an-issue)","- [Remove a label from an issue](https://developer.github.com/v3/issues/labels/#remove-a-label-from-an-issue)","- [Replace all labels for an issue](https://developer.github.com/v3/issues/labels/#replace-all-labels-for-an-issue)","- [Remove all labels from an issue](https://developer.github.com/v3/issues/labels/#remove-all-labels-from-an-issue)","- [Get labels for every issue in a milestone](https://developer.github.com/v3/issues/labels/#get-labels-for-every-issue-in-a-milestone)","","#### Comments","- [List comments on an issue](https://developer.github.com/v3/issues/comments/#list-comments-on-an-issue)","- [List comments in a repository](https://developer.github.com/v3/issues/comments/#list-comments-in-a-repository)","- [Get a single comment](https://developer.github.com/v3/issues/comments/#get-a-single-comment)","- [Create a comment](https://developer.github.com/v3/issues/comments/#create-a-comment)","- [Edit a comment](https://developer.github.com/v3/issues/comments/#edit-a-comment)","- [Delete a comment](https://developer.github.com/v3/issues/comments/#delete-a-comment)","- [List commit comments for a repository](https://developer.github.com/v3/repos/comments/#list-commit-comments-for-a-repository)","- [List comments for a single commit](https://developer.github.com/v3/repos/comments/#list-comments-for-a-single-commit)","- [Create a commit comment](https://developer.github.com/v3/repos/comments/#create-a-commit-comment)","- [Get a single commit comment](https://developer.github.com/v3/repos/comments/#get-a-single-commit-comment)","- [Update a commit comment](https://developer.github.com/v3/repos/comments/#update-a-commit-comment)","- [Delete a commit comment](https://developer.github.com/v3/repos/comments/#delete-a-commit-comment)","","#### Assignees","- [List assignees](https://developer.github.com/v3/issues/assignees/#list-assignees)","- [Check assignee](https://developer.github.com/v3/issues/assignees/#check-assignee)","- [Add assignees to an issue](https://developer.github.com/v3/issues/assignees/#add-assignees-to-an-issue)","- [Remove assignees from an issue](https://developer.github.com/v3/issues/assignees/#remove-assignees-from-an-issue)","","#### Milestones","- [List milestones for a repository](https://developer.github.com/v3/issues/milestones/#list-milestones-for-a-repository)","- [Get a single milestone](https://developer.github.com/v3/issues/milestones/#get-a-single-milestone)","- [Create a milestone](https://developer.github.com/v3/issues/milestones/#create-a-milestone)","- [Update a milestone](https://developer.github.com/v3/issues/milestones/#update-a-milestone)","- [Delete a milestone](https://developer.github.com/v3/issues/milestones/#delete-a-milestone)","","#### Timeline","- [List events for an issue](https://developer.github.com/v3/issues/timeline/#list-events-for-an-issue)","","#### Pull Requests","- [List pull requests](https://developer.github.com/v3/pulls/#list-pull-requests)","- [Get a single pull request](https://developer.github.com/v3/pulls/#get-a-single-pull-request)","- [Create a pull request](https://developer.github.com/v3/pulls/#create-a-pull-request)","- [Update a pull request](https://developer.github.com/v3/pulls/#update-a-pull-request)","- [List commits on a pull request](https://developer.github.com/v3/pulls/#list-commits-on-a-pull-request)","- [List pull requests files](https://developer.github.com/v3/pulls/#list-pull-requests-files)","- [Get if a pull request has been merged](https://developer.github.com/v3/pulls/#get-if-a-pull-request-has-been-merged)","","#### Miscellaneous","- [Emojis](https://developer.github.com/v3/misc/#emojis)","","#### Installations","- [List repositories](https://developer.github.com/v3/apps/installations/#list-repositories)","","#### GitHub Apps","- [Get a single GitHub App](https://developer.github.com/v3/apps/#get-a-single-github-app)","- [Get the authenticated GitHub App](https://developer.github.com/v3/apps/#get-the-authenticated-github-app)","- [Find installations](https://developer.github.com/v3/apps/#find-installations)","- [Get a single installation](https://developer.github.com/v3/apps/#get-a-single-installation)","- [Create a new installation token](https://developer.github.com/v3/apps/#create-a-new-installation-token)","","#### Users","- [Get a single user](https://developer.github.com/v3/users/#get-a-single-user)","- [Get all users](https://developer.github.com/v3/users/#get-all-users)","","#### Projects","- [List repository projects](https://developer.github.com/v3/projects/#list-repository-projects)","- [List organization projects](https://developer.github.com/v3/projects/#list-organization-projects)","- [Get a project](https://developer.github.com/v3/projects/#get-a-project)","- [Create a repository project](https://developer.github.com/v3/projects/#create-a-repository-project)","- [Create an organization project](https://developer.github.com/v3/projects/#create-an-organization-project)","- [Update a project](https://developer.github.com/v3/projects/#update-a-project)","- [Delete a project](https://developer.github.com/v3/projects/#delete-a-project)","","#### Rate Limit","- [Get your current rate limit status](https://developer.github.com/v3/rate_limit/#get-your-current-rate-limit-status)","","#### Markdown","- [Render an arbitrary Markdown document](https://developer.github.com/v3/markdown/#render-an-arbitrary-markdown-document)","- [Render a Markdown document in raw mode](https://developer.github.com/v3/markdown/#render-a-markdown-document-in-raw-mode)","","#### Forks","- [List forks](https://developer.github.com/v3/repos/forks/#list-forks)","- [Create a fork](https://developer.github.com/v3/repos/forks/#create-a-fork)","","#### Statuses","- [Create a status](https://developer.github.com/v3/repos/statuses/#create-a-status)","- [List statuses for a specific ref](https://developer.github.com/v3/repos/statuses/#list-statuses-for-a-specific-ref)","- [Get the combined status for a specific ref](https://developer.github.com/v3/repos/statuses/#get-the-combined-status-for-a-specific-ref)","","#### Branches","- [List branches](https://developer.github.com/v3/repos/branches/#list-branches)","- [Get branch](https://developer.github.com/v3/repos/branches/#get-branch)","- [Get branch protection](https://developer.github.com/v3/repos/branches/#get-branch-protection)","- [Update branch protection](https://developer.github.com/v3/repos/branches/#update-branch-protection)","- [Remove branch protection](https://developer.github.com/v3/repos/branches/#remove-branch-protection)","- [Get required status checks of protected branch](https://developer.github.com/v3/repos/branches/#get-required-status-checks-of-protected-branch)","- [Update required status checks of protected branch](https://developer.github.com/v3/repos/branches/#update-required-status-checks-of-protected-branch)","- [Remove required status checks of protected branch](https://developer.github.com/v3/repos/branches/#remove-required-status-checks-of-protected-branch)","- [List required status checks contexts of protected branch](https://developer.github.com/v3/repos/branches/#list-required-status-checks-contexts-of-protected-branch)","- [Replace required status checks contexts of protected branch](https://developer.github.com/v3/repos/branches/#replace-required-status-checks-contexts-of-protected-branch)","- [Add required status checks contexts of protected branch](https://developer.github.com/v3/repos/branches/#add-required-status-checks-contexts-of-protected-branch)","- [Remove required status checks contexts of protected branch](https://developer.github.com/v3/repos/branches/#remove-required-status-checks-contexts-of-protected-branch)","- [Get pull request review enforcement of protected branch](https://developer.github.com/v3/repos/branches/#get-pull-request-review-enforcement-of-protected-branch)","- [Update pull request review enforcement of protected branch](https://developer.github.com/v3/repos/branches/#update-pull-request-review-enforcement-of-protected-branch)","- [Remove pull request review enforcement of protected branch](https://developer.github.com/v3/repos/branches/#remove-pull-request-review-enforcement-of-protected-branch)","- [Get required signatures of protected branch](https://developer.github.com/v3/repos/branches/#get-required-signatures-of-protected-branch)","- [Add required signatures of protected branch](https://developer.github.com/v3/repos/branches/#add-required-signatures-of-protected-branch)","- [Remove required signatures of protected branch](https://developer.github.com/v3/repos/branches/#remove-required-signatures-of-protected-branch)","- [Get admin enforcement of protected branch](https://developer.github.com/v3/repos/branches/#get-admin-enforcement-of-protected-branch)","- [Add admin enforcement of protected branch](https://developer.github.com/v3/repos/branches/#add-admin-enforcement-of-protected-branch)","- [Remove admin enforcement of protected branch](https://developer.github.com/v3/repos/branches/#remove-admin-enforcement-of-protected-branch)","- [Get restrictions of protected branch](https://developer.github.com/v3/repos/branches/#get-restrictions-of-protected-branch)","- [Remove restrictions of protected branch](https://developer.github.com/v3/repos/branches/#remove-restrictions-of-protected-branch)","- [List team restrictions of protected branch](https://developer.github.com/v3/repos/branches/#list-team-restrictions-of-protected-branch)","- [Replace team restrictions of protected branch](https://developer.github.com/v3/repos/branches/#replace-team-restrictions-of-protected-branch)","- [Add team restrictions of protected branch](https://developer.github.com/v3/repos/branches/#add-team-restrictions-of-protected-branch)","- [Remove team restrictions of protected branch](https://developer.github.com/v3/repos/branches/#remove-team-restrictions-of-protected-branch)","- [List user restrictions of protected branch](https://developer.github.com/v3/repos/branches/#list-user-restrictions-of-protected-branch)","- [Replace user restrictions of protected branch](https://developer.github.com/v3/repos/branches/#replace-user-restrictions-of-protected-branch)","- [Add user restrictions of protected branch](https://developer.github.com/v3/repos/branches/#add-user-restrictions-of-protected-branch)","- [Remove user restrictions of protected branch](https://developer.github.com/v3/repos/branches/#remove-user-restrictions-of-protected-branch)","","#### Deploy Keys","- [List deploy keys](https://developer.github.com/v3/repos/keys/#list-deploy-keys)","- [Get a deploy key](https://developer.github.com/v3/repos/keys/#get-a-deploy-key)","- [Add a new deploy key](https://developer.github.com/v3/repos/keys/#add-a-new-deploy-key)","- [Remove a deploy key](https://developer.github.com/v3/repos/keys/#remove-a-deploy-key)","","#### Community Profile","- [Retrieve community profile metrics](https://developer.github.com/v3/repos/community/#retrieve-community-profile-metrics)","","#### Deployments","- [List deployments](https://developer.github.com/v3/repos/deployments/#list-deployments)","- [Get a single deployment](https://developer.github.com/v3/repos/deployments/#get-a-single-deployment)","- [Create a deployment](https://developer.github.com/v3/repos/deployments/#create-a-deployment)","- [List deployment statuses](https://developer.github.com/v3/repos/deployments/#list-deployment-statuses)","- [Get a single deployment status](https://developer.github.com/v3/repos/deployments/#get-a-single-deployment-status)","- [Create a deployment status](https://developer.github.com/v3/repos/deployments/#create-a-deployment-status)","","#### Contents","- [Get the README](https://developer.github.com/v3/repos/contents/#get-the-readme)","- [Get contents](https://developer.github.com/v3/repos/contents/#get-contents)","- [Create a file](https://developer.github.com/v3/repos/contents/#create-a-file)","- [Update a file](https://developer.github.com/v3/repos/contents/#update-a-file)","- [Delete a file](https://developer.github.com/v3/repos/contents/#delete-a-file)","- [Get archive link](https://developer.github.com/v3/repos/contents/#get-archive-link)","","#### Releases","- [List releases for a repository](https://developer.github.com/v3/repos/releases/#list-releases-for-a-repository)","- [Get a single release](https://developer.github.com/v3/repos/releases/#get-a-single-release)","- [Get the latest release](https://developer.github.com/v3/repos/releases/#get-the-latest-release)","- [Get a release by tag name](https://developer.github.com/v3/repos/releases/#get-a-release-by-tag-name)","- [Create a release](https://developer.github.com/v3/repos/releases/#create-a-release)","- [Edit a release](https://developer.github.com/v3/repos/releases/#edit-a-release)","- [Delete a release](https://developer.github.com/v3/repos/releases/#delete-a-release)","- [List assets for a release](https://developer.github.com/v3/repos/releases/#list-assets-for-a-release)","- [Upload a release asset](https://developer.github.com/v3/repos/releases/#upload-a-release-asset)","- [Get a single release asset](https://developer.github.com/v3/repos/releases/#get-a-single-release-asset)","- [Edit a release asset](https://developer.github.com/v3/repos/releases/#edit-a-release-asset)","- [Delete a release asset](https://developer.github.com/v3/repos/releases/#delete-a-release-asset)","","#### Collaborators","- [List collaborators](https://developer.github.com/v3/repos/collaborators/#list-collaborators)","- [Check if a user is a collaborator](https://developer.github.com/v3/repos/collaborators/#check-if-a-user-is-a-collaborator)","- [Review a user's permission level](https://developer.github.com/v3/repos/collaborators/#review-a-users-permission-level)","- [Add user as a collaborator](https://developer.github.com/v3/repos/collaborators/#add-user-as-a-collaborator)","- [Remove user as a collaborator](https://developer.github.com/v3/repos/collaborators/#remove-user-as-a-collaborator)","","#### Statistics","- [Get contributors list with additions, deletions, and commit counts](https://developer.github.com/v3/repos/statistics/#get-contributors-list-with-additions-deletions-and-commit-counts)","- [Get the last year of commit activity data](https://developer.github.com/v3/repos/statistics/#get-the-last-year-of-commit-activity-data)","- [Get the number of additions and deletions per week](https://developer.github.com/v3/repos/statistics/#get-the-number-of-additions-and-deletions-per-week)","- [Get the weekly commit count for the repository owner and everyone else](https://developer.github.com/v3/repos/statistics/#get-the-weekly-commit-count-for-the-repository-owner-and-everyone-else)","- [Get the number of commits per hour in each day](https://developer.github.com/v3/repos/statistics/#get-the-number-of-commits-per-hour-in-each-day)","","#### Merging","- [Perform a merge](https://developer.github.com/v3/repos/merging/#perform-a-merge)","","#### Pages","- [Get information about a Pages site](https://developer.github.com/v3/repos/pages/#get-information-about-a-pages-site)","- [Request a page build](https://developer.github.com/v3/repos/pages/#request-a-page-build)","- [List Pages builds](https://developer.github.com/v3/repos/pages/#list-pages-builds)","- [List latest Pages build](https://developer.github.com/v3/repos/pages/#list-latest-pages-build)","- [List a specific Pages build](https://developer.github.com/v3/repos/pages/#list-a-specific-pages-build)","","#### Members","- [Members list](https://developer.github.com/v3/orgs/members/#members-list)","- [Check membership](https://developer.github.com/v3/orgs/members/#check-membership)","- [Remove a member](https://developer.github.com/v3/orgs/members/#remove-a-member)","- [Get organization membership](https://developer.github.com/v3/orgs/members/#get-organization-membership)","- [Add or update organization membership](https://developer.github.com/v3/orgs/members/#add-or-update-organization-membership)","- [Remove organization membership](https://developer.github.com/v3/orgs/members/#remove-organization-membership)","","#### Outside Collaborators","- [List outside collaborators](https://developer.github.com/v3/orgs/outside_collaborators/#list-outside-collaborators)","- [Remove outside collaborator](https://developer.github.com/v3/orgs/outside_collaborators/#remove-outside-collaborator)","- [Convert member to outside collaborator](https://developer.github.com/v3/orgs/outside_collaborators/#convert-member-to-outside-collaborator)","","#### Licenses","- [List all licenses](https://developer.github.com/v3/licenses/#list-all-licenses)","- [Get an individual license](https://developer.github.com/v3/licenses/#get-an-individual-license)","","#### Reactions","- [List reactions for a commit comment](https://developer.github.com/v3/reactions/#list-reactions-for-a-commit-comment)","- [List reactions for an issue](https://developer.github.com/v3/reactions/#list-reactions-for-an-issue)","- [List reactions for an issue comment](https://developer.github.com/v3/reactions/#list-reactions-for-an-issue-comment)","- [List reactions for a pull request review comment](https://developer.github.com/v3/reactions/#list-reactions-for-a-pull-request-review-comment)","- [List reactions for a team discussion](https://developer.github.com/v3/reactions/#list-reactions-for-a-team-discussion)","- [List reactions for a team discussion comment](https://developer.github.com/v3/reactions/#list-reactions-for-a-team-discussion-comment)","","#### Public Keys","- [List public keys for a user](https://developer.github.com/v3/users/keys/#list-public-keys-for-a-user)","","#### Team Members","- [List team members](https://developer.github.com/v3/teams/members/#list-team-members)","- [Get team member](https://developer.github.com/v3/teams/members/#get-team-member)","- [Get team membership](https://developer.github.com/v3/teams/members/#get-team-membership)","- [Add or update team membership](https://developer.github.com/v3/teams/members/#add-or-update-team-membership)","- [Remove team membership](https://developer.github.com/v3/teams/members/#remove-team-membership)","- [List pending team invitations](https://developer.github.com/v3/teams/members/#list-pending-team-invitations)","","#### Team Discussion Comments","- [List comments](https://developer.github.com/v3/teams/discussion_comments/#list-comments)","- [Get a single comment](https://developer.github.com/v3/teams/discussion_comments/#get-a-single-comment)","- [Create a comment](https://developer.github.com/v3/teams/discussion_comments/#create-a-comment)","- [Edit a comment](https://developer.github.com/v3/teams/discussion_comments/#edit-a-comment)","- [Delete a comment](https://developer.github.com/v3/teams/discussion_comments/#delete-a-comment)","","#### Team Discussions","- [List discussions](https://developer.github.com/v3/teams/discussions/#list-discussions)","- [Get a single discussion](https://developer.github.com/v3/teams/discussions/#get-a-single-discussion)","- [Create a discussion](https://developer.github.com/v3/teams/discussions/#create-a-discussion)","- [Edit a discussion](https://developer.github.com/v3/teams/discussions/#edit-a-discussion)","- [Delete a discussion](https://developer.github.com/v3/teams/discussions/#delete-a-discussion)","","#### Overview","- [Root endpoint](https://developer.github.com/v3/#root-endpoint)","","#### Repositories","- [List user repositories](https://developer.github.com/v3/repos/#list-user-repositories)","- [List all public repositories](https://developer.github.com/v3/repos/#list-all-public-repositories)","- [Create](https://developer.github.com/v3/repos/#create)","- [Get](https://developer.github.com/v3/repos/#get)","- [Edit](https://developer.github.com/v3/repos/#edit)","- [List all topics for a repository](https://developer.github.com/v3/repos/#list-all-topics-for-a-repository)","- [Replace all topics for a repository](https://developer.github.com/v3/repos/#replace-all-topics-for-a-repository)","- [List contributors](https://developer.github.com/v3/repos/#list-contributors)","- [List languages](https://developer.github.com/v3/repos/#list-languages)","- [List teams](https://developer.github.com/v3/repos/#list-teams)","- [List tags](https://developer.github.com/v3/repos/#list-tags)","- [Delete a repository](https://developer.github.com/v3/repos/#delete-a-repository)","","#### Project columns","- [Get a project column](https://developer.github.com/v3/projects/columns/#get-a-project-column)","- [Create a project column](https://developer.github.com/v3/projects/columns/#create-a-project-column)","- [Update a project column](https://developer.github.com/v3/projects/columns/#update-a-project-column)","- [Delete a project column](https://developer.github.com/v3/projects/columns/#delete-a-project-column)","- [Move a project column](https://developer.github.com/v3/projects/columns/#move-a-project-column)","","#### Project cards","- [List project cards](https://developer.github.com/v3/projects/cards/#list-project-cards)","- [Get a project card](https://developer.github.com/v3/projects/cards/#get-a-project-card)","- [Create a project card](https://developer.github.com/v3/projects/cards/#create-a-project-card)","- [Update a project card](https://developer.github.com/v3/projects/cards/#update-a-project-card)","- [Delete a project card](https://developer.github.com/v3/projects/cards/#delete-a-project-card)","- [Move a project card](https://developer.github.com/v3/projects/cards/#move-a-project-card)","","#### Search","- [Search repositories](https://developer.github.com/v3/search/#search-repositories)","- [Search commits](https://developer.github.com/v3/search/#search-commits)","- [Search code](https://developer.github.com/v3/search/#search-code)","- [Search issues](https://developer.github.com/v3/search/#search-issues)","- [Search users](https://developer.github.com/v3/search/#search-users)","- [Search topics](https://developer.github.com/v3/search/#search-topics)","- [Search labels](https://developer.github.com/v3/search/#search-labels)","","# [GitHub Marketplace](https://developer.github.com/v3/apps/marketplace/)","","**Note:** The The GitHub Marketplace API on GitHub is currently available for developers to preview. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.valkyrie-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","For more information about GitHub Marketplace, see \"[GitHub Marketplace](https://developer.github.com/apps/marketplace/).\"","","**Note:** This preview includes methods for testing with **stubbed data**. Stubbed data is fake data that's useful for testing your GitHub Apps. Stubbed data is hard-coded and will not change based on actual subscriptions.","","To test with stubbed data, use a stubbed endpoint in place of its production counterpart. This allows you to test whether API logic succeeds before listing GitHub Apps on GitHub Marketplace.","","Be sure to replace stubbed endpoints with production endpoints before deploying your GitHub App.","","Endpoints for ```/marketplace_listing/*``` and ```/user/marketplace_purchases``` are only accessible by OAuth Apps using ```client_id``` and ```secret``` basic authentication or by [GitHub Apps using a JWT](https://developer.github.com/apps/building-github-apps/authentication-options-for-github-apps/#authenticating-as-a-github-app).","-","","For API authentication for GitHub Marketplace listings associated with an OAuth App, see \"[Authorization options for OAuth Apps](https://developer.github.com/apps/building-oauth-apps/authorization-options-for-oauth-apps/).\"","-","","For API authentication for GitHub Marketplace listings associated with a GitHub App, see \"[Authentication options for GitHub Apps](https://developer.github.com/apps/building-github-apps/authentication-options-for-github-apps/).\"","","# [Installations](https://developer.github.com/v3/apps/installations/)","","For information on how to authenticate as an installation, see \"[Authentication Options for GitHub Apps](https://developer.github.com/apps/building-github-apps/authentication-options-for-github-apps#authenticating-as-an-installation).\"","","**Note:** To access the API with your integration, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` Header for your requests.","","```","application/vnd.github.machine-man-preview+json","```"]},"github-gists":{"description":"# [Gists](https://developer.github.com/v3/gists/)\n\n**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.jean-grey-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nCustom media types\n\nThe following media types are supported when fetching gist contents. You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).\n```\napplication/vnd.github.VERSION.raw\napplication/vnd.github.VERSION.base64\n```\n\n# [Gist Comments](https://developer.github.com/v3/gists/comments/)\n\nGist Comments use [these custom media types](https://developer.github.com/v3/gists/comments/#custom-media-types). You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).\n\nCustom media types\n\nThese are the supported media types for gist comments. You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).\n```\napplication/vnd.github.VERSION.raw+json\napplication/vnd.github.VERSION.text+json\napplication/vnd.github.VERSION.html+json\napplication/vnd.github.VERSION.full+json\n```","x-swgg-descriptionLineList":["# [Gists](https://developer.github.com/v3/gists/)","","**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.jean-grey-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","Custom media types","","The following media types are supported when fetching gist contents. You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).","```","application/vnd.github.VERSION.raw","application/vnd.github.VERSION.base64","```","","# [Gist Comments](https://developer.github.com/v3/gists/comments/)","","Gist Comments use [these custom media types](https://developer.github.com/v3/gists/comments/#custom-media-types). You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).","","Custom media types","","These are the supported media types for gist comments. You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).","```","application/vnd.github.VERSION.raw+json","application/vnd.github.VERSION.text+json","application/vnd.github.VERSION.html+json","application/vnd.github.VERSION.full+json","```"]},"github-git":{"description":"# [Git Data](https://developer.github.com/v3/git/)\n\nThe Git Database API gives you access to read and write raw Git objects to your Git database on GitHub and to list and update your references (branch heads and tags).\n\nThis basically allows you to reimplement a lot of Git functionality over our API - by creating raw objects directly into the database and updating branch references you could technically do just about anything that Git can do without having Git installed.\n\nGit DB API functions will return a ```409 Conflict``` if the git repository for a Repository is empty or unavailable.  This typically means it is being created still. Contact [GitHub support](https://github.com/contact) if this response status persists.\n\nFor more information on the Git object database, please read the [Git Internals](http://git-scm.com/book/en/v1/Git-Internals) chapter of the Pro Git book.\n\nAs an example, if you wanted to commit a change to a file in your repository, you would:\n- get the current commit object\n- retrieve the tree it points to\n- retrieve the content of the blob object that tree has for that particular file path\n- change the content somehow and post a new blob object with that new content, getting a blob SHA back\n- post a new tree object with that file path pointer replaced with your new blob SHA getting a tree SHA back\n- create a new commit object with the current commit SHA as the parent and the new tree SHA, getting a commit SHA back\n- update the reference of your branch to point to the new commit SHA\n\nIt might seem complex, but it's actually pretty simple when you understand the model and it opens up a ton of things you could potentially do with the API.\n\n# [Git Blobs](https://developer.github.com/v3/git/blobs/)\n\nBlobs leverage [these custom media types](https://developer.github.com/v3/git/blobs/#custom-media-types). You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).\n\n**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.jean-grey-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nCustom media types\n\nThese are the supported media types for blobs. You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).\n```\napplication/json\napplication/vnd.github.VERSION.raw\n```\n\n# [Git Commits](https://developer.github.com/v3/git/commits/)\n\n**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.jean-grey-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\n# [Git Refs](https://developer.github.com/v3/git/refs/)\n\n**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.jean-grey-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\n# [Git Tags](https://developer.github.com/v3/git/tags/)\n\nThis tags API only deals with tag objects - so only annotated tags, not lightweight tags.\n\n**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.jean-grey-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\n# [Git Trees](https://developer.github.com/v3/git/trees/)\n\nno description","x-swgg-descriptionLineList":["# [Git Data](https://developer.github.com/v3/git/)","","The Git Database API gives you access to read and write raw Git objects to your Git database on GitHub and to list and update your references (branch heads and tags).","","This basically allows you to reimplement a lot of Git functionality over our API - by creating raw objects directly into the database and updating branch references you could technically do just about anything that Git can do without having Git installed.","","Git DB API functions will return a ```409 Conflict``` if the git repository for a Repository is empty or unavailable.  This typically means it is being created still. Contact [GitHub support](https://github.com/contact) if this response status persists.","","For more information on the Git object database, please read the [Git Internals](http://git-scm.com/book/en/v1/Git-Internals) chapter of the Pro Git book.","","As an example, if you wanted to commit a change to a file in your repository, you would:","- get the current commit object","- retrieve the tree it points to","- retrieve the content of the blob object that tree has for that particular file path","- change the content somehow and post a new blob object with that new content, getting a blob SHA back","- post a new tree object with that file path pointer replaced with your new blob SHA getting a tree SHA back","- create a new commit object with the current commit SHA as the parent and the new tree SHA, getting a commit SHA back","- update the reference of your branch to point to the new commit SHA","","It might seem complex, but it's actually pretty simple when you understand the model and it opens up a ton of things you could potentially do with the API.","","# [Git Blobs](https://developer.github.com/v3/git/blobs/)","","Blobs leverage [these custom media types](https://developer.github.com/v3/git/blobs/#custom-media-types). You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).","","**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.jean-grey-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","Custom media types","","These are the supported media types for blobs. You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).","```","application/json","application/vnd.github.VERSION.raw","```","","# [Git Commits](https://developer.github.com/v3/git/commits/)","","**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.jean-grey-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","# [Git Refs](https://developer.github.com/v3/git/refs/)","","**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.jean-grey-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","# [Git Tags](https://developer.github.com/v3/git/tags/)","","This tags API only deals with tag objects - so only annotated tags, not lightweight tags.","","**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.jean-grey-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","# [Git Trees](https://developer.github.com/v3/git/trees/)","","no description"]},"github-issues":{"description":"# [Issues](https://developer.github.com/v3/issues/)\n\nIssues use [these custom media types](https://developer.github.com/v3/issues/#custom-media-types). You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).\n\n**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.jean-grey-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nCustom media types\n\nThese are the supported media types for issues. You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).\n```\napplication/vnd.github.VERSION.raw+json\napplication/vnd.github.VERSION.text+json\napplication/vnd.github.VERSION.html+json\napplication/vnd.github.VERSION.full+json\n```\n\n# [Issue Assignees](https://developer.github.com/v3/issues/assignees/)\n\nno description\n\n# [Issue Comments](https://developer.github.com/v3/issues/comments/)\n\nThe Issue Comments API supports listing, viewing, editing, and creating comments on issues and pull requests.\n\nIssue Comments use [these custom media types](https://developer.github.com/v3/issues/comments/#custom-media-types). You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).\n\nCustom media types\n\nThese are the supported media types for issue comments. You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).\n```\napplication/vnd.github.VERSION.raw+json\napplication/vnd.github.VERSION.text+json\napplication/vnd.github.VERSION.html+json\napplication/vnd.github.VERSION.full+json\n```\n\n# [Issue Events](https://developer.github.com/v3/issues/events/)\n\nRecords various events that occur around an issue or pull request. This is useful both for display on issue/pull request information pages and also to determine who should be notified of comments.\n\n####  Attributes\n- id - The Integer ID of the event.\n- url - The API URL for fetching the event.\n- actor - The User object that generated the event.\n- commit_id - The String SHA of a commit that referenced this Issue\n- commit_url - The GitHub API link to a commit that referenced this Issue\n- event - Identifies the actual type of Event that occurred.\n- created_at - The timestamp indicating when the event occurred.\n- labels - The Labels object, including `name` and `color` attributes. Only provided for `labeled` and `unlabeled` events.\n- assignee - The User object which was assigned to (or unassigned from) this Issue. Only provided for 'assigned' and 'unassigned' events.\n- assigner - The User object that performed the assignment (or unassignment) for this Issue. Only provided for 'assigned' and 'unassigned' events.\n- review_requester - The User who requested a review. Only provided for 'review_requested' and 'review_request_removed' events.\n- requested_reviewers - The Users whose reviews were requested. Only provided for 'review_requested' and 'review_request_removed' events.\n- lock_reason - The reason an issue or pull request conversation was locked, if one was provided. Only provided for `locked` events.\n- dismissed_review - A `dismissed_review` object that includes the `state`, `review_id`, `dismissal_message`, and `dismissal_commit_id` (the ID of the commit that dismissed the review) if one exists. Possible `state` strings include `commented`, `approved`, or `changes_requested`. Only provided for `review_dismissed` events.\n- milestone - The Milestone object including a `title` attribute. Only provided for `milestoned` and   `demilestoned` events.\n- rename - An object containing rename details including `from` and `to` attributes. Only   provided for `renamed` events.\n\n####  Events\n- closed - The issue was closed by the actor. When the commit_id is present, it   identifies the commit that closed the issue using \"closes / fixes #NN\"   syntax.\n- reopened - The issue was reopened by the actor.\n- subscribed - The actor subscribed to receive notifications for an issue.\n- merged - The issue was merged by the actor. The `commit_id` attribute is the SHA1 of   the HEAD commit that was merged.\n- referenced - The issue was referenced from a commit message. The `commit_id` attribute is   the commit SHA1 of where that happened.\n- mentioned - The actor was @mentioned in an issue body.\n- assigned - The issue was assigned to the actor.\n- unassigned - The actor was unassigned from the issue.\n- labeled - A label was added to the issue.\n- unlabeled - A label was removed from the issue.\n- milestoned - The issue was added to a milestone.\n- demilestoned - The issue was removed from a milestone.\n- renamed - The issue title was changed.\n- locked - The issue was locked by the actor.\n- unlocked - The issue was unlocked by the actor.\n- head_ref_deleted - The pull request's branch was deleted.\n- head_ref_restored - The pull request's branch was restored.\n- review_dismissed - The actor dismissed a review from the pull request.\n- review_requested - The actor requested review from the subject on this pull request.\n- review_request_removed - The actor removed the review request for the subject on this pull request.\n- marked_as_duplicate - A user with write permissions marked an issue as a duplicate of another issue or a pull request as a duplicate of another pull request.\n- unmarked_as_duplicate - An issue that a user had previously marked as a duplicate of another issue is no longer considered a duplicate, or a pull request that a user had previously marked as a duplicate of another pull request is no longer considered a duplicate.\n- added_to_project - The issue was added to a project board.\n- moved_columns_in_project - The issue was moved between columns in a project board.\n- removed_from_project - The issue was removed from a project board.\n- converted_note_to_issue - The issue was created by converting a note in a project board to an issue.\n\n**Note**: The project-related events ```added_to_project```, ```moved_columns_in_project```, ```removed_from_project```, and ```converted_note_to_issue``` will not be included in the response if project boards have been [disabled](https://help.github.com/articles/disabling-project-boards-in-a-repository) in the repository.\n\n# [Issue Labels](https://developer.github.com/v3/issues/labels/)\n\n**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.jean-grey-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\n# [Issue Milestones](https://developer.github.com/v3/issues/milestones/)\n\n**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.jean-grey-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\n# [Issue Timeline](https://developer.github.com/v3/issues/timeline/)\n\nThe API to get issue timeline events is currently available for developers to preview.   During the preview period, the APIs may change without advance notice.   Please see the [blog post](https://developer.github.com/changes/2016-05-23-timeline-preview-api/) for full details.\n\nTo access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.mockingbird-preview\n```\n\n####  Timeline\n- [List events for an issue](https://developer.github.com/v3/issues/timeline/#list-events-for-an-issue)\n\nRecords various events that occur around an issue or pull request. This is useful both for display on issue and pull request information pages, as well as to determine who should be notified of comments.\n\n####  Attributes\n- id - The Integer ID of the event.\n- url - The API URL for fetching the event.\n- actor - The User object that generated the event.\n- commit_id - The String SHA of a commit that referenced this Issue.\n- event - Identifies the actual type of Event that occurred.\n- created_at - The timestamp indicating when the event occurred.\n- label - The Label object including `name` and `color` attributes. Only provided for `labeled`   and `unlabeled` events.\n- assignee - The User object which was assigned to (or unassigned from) this Issue. Only provided for `assigned` and `unassigned` events.\n- dismissed_review - A `dismissed_review` object that includes the `state`, `review_id`, `dismissal_message`, and `dismissal_commit_id` (the ID of the commit that dismissed the review) if one exists. Possible `state` strings include `commented`, `approved`, or `changes_requested`. Only provided for `review_dismissed` events.\n- milestone - The Milestone object including a `title` attribute. Only provided for `milestoned` and   `demilestoned` events.\n- source - The `id`, `actor`, and `url` for the source of a reference from another issue. Only provided for `cross-referenced` events.\n- rename - An object containing rename details including `from` and `to` attributes. Only   provided for `renamed` events.\n\n####  Events\n- added_to_project - The issue was added to a project board.\n- assigned - The issue was assigned to the assignee.\n- closed - The issue was closed by the actor. When the commit_id is present, it   identifies the commit that closed the issue using \"closes / fixes #NN\"   syntax.\n- commented - A comment was added to the issue.\n- committed - A commit was added to the pull request's `HEAD` branch. Only provided for pull requests.\n- converted_note_to_issue - The issue was created by converting a note in a project board to an issue.\n- cross-referenced - The issue was referenced from another issue. The `source` attribute contains the `id`, `actor`, and `url` of the reference's source.\n- demilestoned - The issue was removed from a milestone.\n- head_ref_deleted - The pull request's branch was deleted.\n- head_ref_restored - The pull request's branch was restored.\n- labeled - A label was added to the issue.\n- locked - The issue was locked by the actor.\n- marked_as_duplicate - A user with write permissions marked an issue as a duplicate of another issue or a pull request as a duplicate of another pull request.\n- mentioned - The actor was @mentioned in an issue body.\n- merged - The issue was merged by the actor. The `commit_id` attribute is the SHA1 of   the HEAD commit that was merged.\n- milestoned - The issue was added to a milestone.\n- moved_columns_in_project - The issue was moved between columns in a project board.\n- referenced - The issue was referenced from a commit message. The `commit_id` attribute is   the commit SHA1 of where that happened.\n- removed_from_project - The issue was removed from a project board.\n- renamed - The issue title was changed.\n- reopened - The issue was reopened by the actor.\n- review_dismissed - The actor dismissed a review from the pull request.\n- review_requested - The actor requested a review from the subject on this pull request.\n- review_request_removed - The actor removed the review request for the subject on this pull request.\n- subscribed - The actor subscribed to receive notifications for an issue.\n- unassigned - The assignee was unassigned from the issue.\n- unlabeled - A label was removed from the issue.\n- unlocked - The issue was unlocked by the actor.\n- unmarked_as_duplicate - An issue that a user had previously marked as a duplicate of another issue is no longer considered a duplicate, or a pull request that a user had previously marked as a duplicate of another pull request is no longer considered a duplicate.\n- unsubscribed - The actor unsubscribed to stop receiving notifications for an issue.\n\n**Note**: The project-related events ```added_to_project```, ```moved_columns_in_project```, ```removed_from_project```, and ```converted_note_to_issue``` will not be included in the response if project boards have been [disabled](https://help.github.com/articles/disabling-project-boards-in-a-repository) in the repository.","x-swgg-descriptionLineList":["# [Issues](https://developer.github.com/v3/issues/)","","Issues use [these custom media types](https://developer.github.com/v3/issues/#custom-media-types). You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).","","**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.jean-grey-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","Custom media types","","These are the supported media types for issues. You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).","```","application/vnd.github.VERSION.raw+json","application/vnd.github.VERSION.text+json","application/vnd.github.VERSION.html+json","application/vnd.github.VERSION.full+json","```","","# [Issue Assignees](https://developer.github.com/v3/issues/assignees/)","","no description","","# [Issue Comments](https://developer.github.com/v3/issues/comments/)","","The Issue Comments API supports listing, viewing, editing, and creating comments on issues and pull requests.","","Issue Comments use [these custom media types](https://developer.github.com/v3/issues/comments/#custom-media-types). You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).","","Custom media types","","These are the supported media types for issue comments. You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).","```","application/vnd.github.VERSION.raw+json","application/vnd.github.VERSION.text+json","application/vnd.github.VERSION.html+json","application/vnd.github.VERSION.full+json","```","","# [Issue Events](https://developer.github.com/v3/issues/events/)","","Records various events that occur around an issue or pull request. This is useful both for display on issue/pull request information pages and also to determine who should be notified of comments.","","####  Attributes","- id - The Integer ID of the event.","- url - The API URL for fetching the event.","- actor - The User object that generated the event.","- commit_id - The String SHA of a commit that referenced this Issue","- commit_url - The GitHub API link to a commit that referenced this Issue","- event - Identifies the actual type of Event that occurred.","- created_at - The timestamp indicating when the event occurred.","- labels - The Labels object, including `name` and `color` attributes. Only provided for `labeled` and `unlabeled` events.","- assignee - The User object which was assigned to (or unassigned from) this Issue. Only provided for 'assigned' and 'unassigned' events.","- assigner - The User object that performed the assignment (or unassignment) for this Issue. Only provided for 'assigned' and 'unassigned' events.","- review_requester - The User who requested a review. Only provided for 'review_requested' and 'review_request_removed' events.","- requested_reviewers - The Users whose reviews were requested. Only provided for 'review_requested' and 'review_request_removed' events.","- lock_reason - The reason an issue or pull request conversation was locked, if one was provided. Only provided for `locked` events.","- dismissed_review - A `dismissed_review` object that includes the `state`, `review_id`, `dismissal_message`, and `dismissal_commit_id` (the ID of the commit that dismissed the review) if one exists. Possible `state` strings include `commented`, `approved`, or `changes_requested`. Only provided for `review_dismissed` events.","- milestone - The Milestone object including a `title` attribute. Only provided for `milestoned` and   `demilestoned` events.","- rename - An object containing rename details including `from` and `to` attributes. Only   provided for `renamed` events.","","####  Events","- closed - The issue was closed by the actor. When the commit_id is present, it   identifies the commit that closed the issue using \"closes / fixes #NN\"   syntax.","- reopened - The issue was reopened by the actor.","- subscribed - The actor subscribed to receive notifications for an issue.","- merged - The issue was merged by the actor. The `commit_id` attribute is the SHA1 of   the HEAD commit that was merged.","- referenced - The issue was referenced from a commit message. The `commit_id` attribute is   the commit SHA1 of where that happened.","- mentioned - The actor was @mentioned in an issue body.","- assigned - The issue was assigned to the actor.","- unassigned - The actor was unassigned from the issue.","- labeled - A label was added to the issue.","- unlabeled - A label was removed from the issue.","- milestoned - The issue was added to a milestone.","- demilestoned - The issue was removed from a milestone.","- renamed - The issue title was changed.","- locked - The issue was locked by the actor.","- unlocked - The issue was unlocked by the actor.","- head_ref_deleted - The pull request's branch was deleted.","- head_ref_restored - The pull request's branch was restored.","- review_dismissed - The actor dismissed a review from the pull request.","- review_requested - The actor requested review from the subject on this pull request.","- review_request_removed - The actor removed the review request for the subject on this pull request.","- marked_as_duplicate - A user with write permissions marked an issue as a duplicate of another issue or a pull request as a duplicate of another pull request.","- unmarked_as_duplicate - An issue that a user had previously marked as a duplicate of another issue is no longer considered a duplicate, or a pull request that a user had previously marked as a duplicate of another pull request is no longer considered a duplicate.","- added_to_project - The issue was added to a project board.","- moved_columns_in_project - The issue was moved between columns in a project board.","- removed_from_project - The issue was removed from a project board.","- converted_note_to_issue - The issue was created by converting a note in a project board to an issue.","","**Note**: The project-related events ```added_to_project```, ```moved_columns_in_project```, ```removed_from_project```, and ```converted_note_to_issue``` will not be included in the response if project boards have been [disabled](https://help.github.com/articles/disabling-project-boards-in-a-repository) in the repository.","","# [Issue Labels](https://developer.github.com/v3/issues/labels/)","","**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.jean-grey-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","# [Issue Milestones](https://developer.github.com/v3/issues/milestones/)","","**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.jean-grey-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","# [Issue Timeline](https://developer.github.com/v3/issues/timeline/)","","The API to get issue timeline events is currently available for developers to preview.   During the preview period, the APIs may change without advance notice.   Please see the [blog post](https://developer.github.com/changes/2016-05-23-timeline-preview-api/) for full details.","","To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.mockingbird-preview","```","","####  Timeline","- [List events for an issue](https://developer.github.com/v3/issues/timeline/#list-events-for-an-issue)","","Records various events that occur around an issue or pull request. This is useful both for display on issue and pull request information pages, as well as to determine who should be notified of comments.","","####  Attributes","- id - The Integer ID of the event.","- url - The API URL for fetching the event.","- actor - The User object that generated the event.","- commit_id - The String SHA of a commit that referenced this Issue.","- event - Identifies the actual type of Event that occurred.","- created_at - The timestamp indicating when the event occurred.","- label - The Label object including `name` and `color` attributes. Only provided for `labeled`   and `unlabeled` events.","- assignee - The User object which was assigned to (or unassigned from) this Issue. Only provided for `assigned` and `unassigned` events.","- dismissed_review - A `dismissed_review` object that includes the `state`, `review_id`, `dismissal_message`, and `dismissal_commit_id` (the ID of the commit that dismissed the review) if one exists. Possible `state` strings include `commented`, `approved`, or `changes_requested`. Only provided for `review_dismissed` events.","- milestone - The Milestone object including a `title` attribute. Only provided for `milestoned` and   `demilestoned` events.","- source - The `id`, `actor`, and `url` for the source of a reference from another issue. Only provided for `cross-referenced` events.","- rename - An object containing rename details including `from` and `to` attributes. Only   provided for `renamed` events.","","####  Events","- added_to_project - The issue was added to a project board.","- assigned - The issue was assigned to the assignee.","- closed - The issue was closed by the actor. When the commit_id is present, it   identifies the commit that closed the issue using \"closes / fixes #NN\"   syntax.","- commented - A comment was added to the issue.","- committed - A commit was added to the pull request's `HEAD` branch. Only provided for pull requests.","- converted_note_to_issue - The issue was created by converting a note in a project board to an issue.","- cross-referenced - The issue was referenced from another issue. The `source` attribute contains the `id`, `actor`, and `url` of the reference's source.","- demilestoned - The issue was removed from a milestone.","- head_ref_deleted - The pull request's branch was deleted.","- head_ref_restored - The pull request's branch was restored.","- labeled - A label was added to the issue.","- locked - The issue was locked by the actor.","- marked_as_duplicate - A user with write permissions marked an issue as a duplicate of another issue or a pull request as a duplicate of another pull request.","- mentioned - The actor was @mentioned in an issue body.","- merged - The issue was merged by the actor. The `commit_id` attribute is the SHA1 of   the HEAD commit that was merged.","- milestoned - The issue was added to a milestone.","- moved_columns_in_project - The issue was moved between columns in a project board.","- referenced - The issue was referenced from a commit message. The `commit_id` attribute is   the commit SHA1 of where that happened.","- removed_from_project - The issue was removed from a project board.","- renamed - The issue title was changed.","- reopened - The issue was reopened by the actor.","- review_dismissed - The actor dismissed a review from the pull request.","- review_requested - The actor requested a review from the subject on this pull request.","- review_request_removed - The actor removed the review request for the subject on this pull request.","- subscribed - The actor subscribed to receive notifications for an issue.","- unassigned - The assignee was unassigned from the issue.","- unlabeled - A label was removed from the issue.","- unlocked - The issue was unlocked by the actor.","- unmarked_as_duplicate - An issue that a user had previously marked as a duplicate of another issue is no longer considered a duplicate, or a pull request that a user had previously marked as a duplicate of another pull request is no longer considered a duplicate.","- unsubscribed - The actor unsubscribed to stop receiving notifications for an issue.","","**Note**: The project-related events ```added_to_project```, ```moved_columns_in_project```, ```removed_from_project```, and ```converted_note_to_issue``` will not be included in the response if project boards have been [disabled](https://help.github.com/articles/disabling-project-boards-in-a-repository) in the repository."]},"github-migration":{"description":"# [Migration](https://developer.github.com/v3/migration/)\n\nThese APIs help you move projects to or from GitHub.\n\n# [Migrations](https://developer.github.com/v3/migration/migrations/)\n\nThe Migrations API is only available to [authenticated](https://developer.github.com/v3/#authentication) organization [owners](https://help.github.com/articles/permission-levels-for-an-organization/).\n\nTo access the Migrations API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.wyandotte-preview+json\n```\n\n# [Source Imports](https://developer.github.com/v3/migration/source_imports/)\n\nThe source import APIs are currently in public preview. During this period, the APIs may change in a backwards-incompatible way.  To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.barred-rock-preview\n```\n\nThe Source Import API lets you start an import from a Git, Subversion, Mercurial, or Team Foundation Server source repository. This is the same functionality as [the GitHub Importer](https://help.github.com/articles/importing-from-other-version-control-systems-to-github/).\n\nA typical source import would [start the import](https://developer.github.com/v3/migration/source_imports/#start-an-import) and then (optionally) [update the authors](https://developer.github.com/v3/migration/source_imports/#map-a-commit-author) and/or [set the preference](https://developer.github.com/v3/migration/source_imports/#set-git-lfs-preference) for using Git LFS if large files exist in the import. A more detailed example can be seen in this diagram:\n```\n+---------+                     +--------+                              +---------------------+\n| Tooling |                     | GitHub |                              | Original Repository |\n+---------+                     +--------+                              +---------------------+\n     |                              |                                              |\n     |  Start import                |                                              |\n     |-----------------------------&gt;|                                              |\n     |                              |                                              |\n     |                              |  Download source data                        |\n     |                              |---------------------------------------------&gt;|\n     |                              |                        Begin streaming data  |\n     |                              |&lt;---------------------------------------------|\n     |                              |                                              |\n     |  Get import progress         |                                              |\n     |-----------------------------&gt;|                                              |\n     |       \"status\": \"importing\"  |                                              |\n     |&lt;-----------------------------|                                              |\n     |                              |                                              |\n     |  Get commit authors          |                                              |\n     |-----------------------------&gt;|                                              |\n     |                              |                                              |\n     |  Map a commit author         |                                              |\n     |-----------------------------&gt;|                                              |\n     |                              |                                              |\n     |                              |                                              |\n     |                              |                       Finish streaming data  |\n     |                              |&lt;---------------------------------------------|\n     |                              |                                              |\n     |                              |  Rewrite commits with mapped authors         |\n     |                              |------+                                       |\n     |                              |      |                                       |\n     |                              |&lt;-----+                                       |\n     |                              |                                              |\n     |                              |  Update repository on GitHub                 |\n     |                              |------+                                       |\n     |                              |      |                                       |\n     |                              |&lt;-----+                                       |\n     |                              |                                              |\n     |  Map a commit author         |                                              |\n     |-----------------------------&gt;|                                              |\n     |                              |  Rewrite commits with mapped authors         |\n     |                              |------+                                       |\n     |                              |      |                                       |\n     |                              |&lt;-----+                                       |\n     |                              |                                              |\n     |                              |  Update repository on GitHub                 |\n     |                              |------+                                       |\n     |                              |      |                                       |\n     |                              |&lt;-----+                                       |\n     |                              |                                              |\n     |  Get large files             |                                              |\n     |-----------------------------&gt;|                                              |\n     |                              |                                              |\n     |  opt_in to Git LFS           |                                              |\n     |-----------------------------&gt;|                                              |\n     |                              |  Rewrite commits for large files             |\n     |                              |------+                                       |\n     |                              |      |                                       |\n     |                              |&lt;-----+                                       |\n     |                              |                                              |\n     |                              |  Update repository on GitHub                 |\n     |                              |------+                                       |\n     |                              |      |                                       |\n     |                              |&lt;-----+                                       |\n     |                              |                                              |\n     |  Get import progress         |                                              |\n     |-----------------------------&gt;|                                              |\n     |        \"status\": \"complete\"  |                                              |\n     |&lt;-----------------------------|                                              |\n     |                              |                                              |\n     |                              |                                              |\n```","x-swgg-descriptionLineList":["# [Migration](https://developer.github.com/v3/migration/)","","These APIs help you move projects to or from GitHub.","","# [Migrations](https://developer.github.com/v3/migration/migrations/)","","The Migrations API is only available to [authenticated](https://developer.github.com/v3/#authentication) organization [owners](https://help.github.com/articles/permission-levels-for-an-organization/).","","To access the Migrations API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.wyandotte-preview+json","```","","# [Source Imports](https://developer.github.com/v3/migration/source_imports/)","","The source import APIs are currently in public preview. During this period, the APIs may change in a backwards-incompatible way.  To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.barred-rock-preview","```","","The Source Import API lets you start an import from a Git, Subversion, Mercurial, or Team Foundation Server source repository. This is the same functionality as [the GitHub Importer](https://help.github.com/articles/importing-from-other-version-control-systems-to-github/).","","A typical source import would [start the import](https://developer.github.com/v3/migration/source_imports/#start-an-import) and then (optionally) [update the authors](https://developer.github.com/v3/migration/source_imports/#map-a-commit-author) and/or [set the preference](https://developer.github.com/v3/migration/source_imports/#set-git-lfs-preference) for using Git LFS if large files exist in the import. A more detailed example can be seen in this diagram:","```","+---------+                     +--------+                              +---------------------+","| Tooling |                     | GitHub |                              | Original Repository |","+---------+                     +--------+                              +---------------------+","     |                              |                                              |","     |  Start import                |                                              |","     |-----------------------------&gt;|                                              |","     |                              |                                              |","     |                              |  Download source data                        |","     |                              |---------------------------------------------&gt;|","     |                              |                        Begin streaming data  |","     |                              |&lt;---------------------------------------------|","     |                              |                                              |","     |  Get import progress         |                                              |","     |-----------------------------&gt;|                                              |","     |       \"status\": \"importing\"  |                                              |","     |&lt;-----------------------------|                                              |","     |                              |                                              |","     |  Get commit authors          |                                              |","     |-----------------------------&gt;|                                              |","     |                              |                                              |","     |  Map a commit author         |                                              |","     |-----------------------------&gt;|                                              |","     |                              |                                              |","     |                              |                                              |","     |                              |                       Finish streaming data  |","     |                              |&lt;---------------------------------------------|","     |                              |                                              |","     |                              |  Rewrite commits with mapped authors         |","     |                              |------+                                       |","     |                              |      |                                       |","     |                              |&lt;-----+                                       |","     |                              |                                              |","     |                              |  Update repository on GitHub                 |","     |                              |------+                                       |","     |                              |      |                                       |","     |                              |&lt;-----+                                       |","     |                              |                                              |","     |  Map a commit author         |                                              |","     |-----------------------------&gt;|                                              |","     |                              |  Rewrite commits with mapped authors         |","     |                              |------+                                       |","     |                              |      |                                       |","     |                              |&lt;-----+                                       |","     |                              |                                              |","     |                              |  Update repository on GitHub                 |","     |                              |------+                                       |","     |                              |      |                                       |","     |                              |&lt;-----+                                       |","     |                              |                                              |","     |  Get large files             |                                              |","     |-----------------------------&gt;|                                              |","     |                              |                                              |","     |  opt_in to Git LFS           |                                              |","     |-----------------------------&gt;|                                              |","     |                              |  Rewrite commits for large files             |","     |                              |------+                                       |","     |                              |      |                                       |","     |                              |&lt;-----+                                       |","     |                              |                                              |","     |                              |  Update repository on GitHub                 |","     |                              |------+                                       |","     |                              |      |                                       |","     |                              |&lt;-----+                                       |","     |                              |                                              |","     |  Get import progress         |                                              |","     |-----------------------------&gt;|                                              |","     |        \"status\": \"complete\"  |                                              |","     |&lt;-----------------------------|                                              |","     |                              |                                              |","     |                              |                                              |","```"]},"github-misc":{"description":"# [Miscellaneous](https://developer.github.com/v3/misc/)\n\nThis is a miscellaneous set of APIs which provide access to top level GitHub resources and info.\n\n# [Codes of Conduct](https://developer.github.com/v3/codes_of_conduct/)\n\nThe Codes of Conduct API is currently available for developers to preview.   During the preview period, the API may change without advance notice.\n\nTo access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.scarlet-witch-preview+json\n```\n\n# [Emojis](https://developer.github.com/v3/emojis/)\n\nLists all the emojis available to use on GitHub.\n\n# [Gitignore](https://developer.github.com/v3/gitignore/)\n\nWhen you create a new GitHub repository via the API, you can specify a [.gitignore template](https://help.github.com/articles/ignoring-files) to apply to the repository upon creation. The .gitignore Templates API lists and fetches templates from the [GitHub .gitignore repository](https://github.com/github/gitignore).\n\n# [Licenses](https://developer.github.com/v3/licenses/)\n\nThe Licenses API returns metadata about popular open source licenses and information about a particular project's license file.\n\nThe Licenses API uses [the open source Ruby Gem Licensee](https://github.com/benbalter/licensee) to attempt to identify the project's license. Licensee matches the contents of a project's ```LICENSE``` file (if it exists) against a short list of known licenses. As a result, the API does not take into account the licenses of project dependencies or other means of documenting a project's license such as references to the license name in the documentation.\n\nIf a license is matched, the license key and name returned conforms to the [SPDX specification](https://spdx.org/).\n\n**Note:** These endpoints will also return a repository's license information:\n- [Get a repository](https://developer.github.com/v3/repos/#get)\n- [List user repositories](https://developer.github.com/v3/repos/#list-user-repositories)\n- [List organization repositories](https://developer.github.com/v3/repos/#list-organization-repositories)\n- [List forks](https://developer.github.com/v3/repos/forks/#list-forks)\n- [List repositories being watched](https://developer.github.com/v3/activity/watching/#list-repositories-being-watched)\n- [List team repos](https://developer.github.com/v3/teams/#list-team-repos)\n\nGitHub is a lot of things, but it’s not a law firm. As such, GitHub does not provide legal advice. Using the Licenses API or sending us an email about it does not constitute legal advice nor does it create an attorney-client relationship. If you have any questions about what you can and can't do with a particular license, you should consult with your own legal counsel before moving forward. In fact, you should always consult with your own lawyer before making any decisions that might have legal ramifications or that may impact your legal rights.\n\nGitHub created the License API to help users get information about open source licenses and the projects that use them. We hope it helps, but please keep in mind that we’re not lawyers (at least not most of us aren't) and that we make mistakes like everyone else. For that reason, GitHub provides the API on an “as-is” basis and makes no warranties regarding any information or licenses provided on or through it, and disclaims liability for damages resulting from using the API.\n\n# [Markdown](https://developer.github.com/v3/markdown/)\n\nno description\n\n# [Meta](https://developer.github.com/v3/meta/)\n\nThis endpoint provides information about GitHub.com, the service.\n\n# [Rate Limit](https://developer.github.com/v3/rate_limit/)\n\nThe overview documentation describes the [rate limit rules](https://developer.github.com/v3/#rate-limiting). You can check your current rate limit status at any time using the Rate Limit API described below.","x-swgg-descriptionLineList":["# [Miscellaneous](https://developer.github.com/v3/misc/)","","This is a miscellaneous set of APIs which provide access to top level GitHub resources and info.","","# [Codes of Conduct](https://developer.github.com/v3/codes_of_conduct/)","","The Codes of Conduct API is currently available for developers to preview.   During the preview period, the API may change without advance notice.","","To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.scarlet-witch-preview+json","```","","# [Emojis](https://developer.github.com/v3/emojis/)","","Lists all the emojis available to use on GitHub.","","# [Gitignore](https://developer.github.com/v3/gitignore/)","","When you create a new GitHub repository via the API, you can specify a [.gitignore template](https://help.github.com/articles/ignoring-files) to apply to the repository upon creation. The .gitignore Templates API lists and fetches templates from the [GitHub .gitignore repository](https://github.com/github/gitignore).","","# [Licenses](https://developer.github.com/v3/licenses/)","","The Licenses API returns metadata about popular open source licenses and information about a particular project's license file.","","The Licenses API uses [the open source Ruby Gem Licensee](https://github.com/benbalter/licensee) to attempt to identify the project's license. Licensee matches the contents of a project's ```LICENSE``` file (if it exists) against a short list of known licenses. As a result, the API does not take into account the licenses of project dependencies or other means of documenting a project's license such as references to the license name in the documentation.","","If a license is matched, the license key and name returned conforms to the [SPDX specification](https://spdx.org/).","","**Note:** These endpoints will also return a repository's license information:","- [Get a repository](https://developer.github.com/v3/repos/#get)","- [List user repositories](https://developer.github.com/v3/repos/#list-user-repositories)","- [List organization repositories](https://developer.github.com/v3/repos/#list-organization-repositories)","- [List forks](https://developer.github.com/v3/repos/forks/#list-forks)","- [List repositories being watched](https://developer.github.com/v3/activity/watching/#list-repositories-being-watched)","- [List team repos](https://developer.github.com/v3/teams/#list-team-repos)","","GitHub is a lot of things, but it’s not a law firm. As such, GitHub does not provide legal advice. Using the Licenses API or sending us an email about it does not constitute legal advice nor does it create an attorney-client relationship. If you have any questions about what you can and can't do with a particular license, you should consult with your own legal counsel before moving forward. In fact, you should always consult with your own lawyer before making any decisions that might have legal ramifications or that may impact your legal rights.","","GitHub created the License API to help users get information about open source licenses and the projects that use them. We hope it helps, but please keep in mind that we’re not lawyers (at least not most of us aren't) and that we make mistakes like everyone else. For that reason, GitHub provides the API on an “as-is” basis and makes no warranties regarding any information or licenses provided on or through it, and disclaims liability for damages resulting from using the API.","","# [Markdown](https://developer.github.com/v3/markdown/)","","no description","","# [Meta](https://developer.github.com/v3/meta/)","","This endpoint provides information about GitHub.com, the service.","","# [Rate Limit](https://developer.github.com/v3/rate_limit/)","","The overview documentation describes the [rate limit rules](https://developer.github.com/v3/#rate-limiting). You can check your current rate limit status at any time using the Rate Limit API described below."]},"github-orgs":{"description":"# [Organizations](https://developer.github.com/v3/orgs/)\n\n**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.jean-grey-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\n# [Blocking Organization Users](https://developer.github.com/v3/orgs/blocking/)\n\n**Note:** The User Blocking API on GitHub is currently available for developers to preview. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.giant-sentry-fist-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nThe token used to authenticate the call must have the ```admin:org``` scope in order to make any blocking calls for an organization. Otherwise, the response returns ```HTTP 404```.\n\n# [Organization Members](https://developer.github.com/v3/orgs/members/)\n\nno description\n\n# [Organization Outside Collaborators](https://developer.github.com/v3/orgs/outside_collaborators/)\n\nno description\n\n# [Organization Webhooks](https://developer.github.com/v3/orgs/hooks/)\n\nOrganization webhooks allow you to receive HTTP ```POST``` payloads whenever certain events happen within the organization. Subscribing to these events makes it possible to build integrations that react to actions on GitHub.com. For more information on actions you can subscribe to, check out our [Events documentation](https://developer.github.com/webhooks/#events).","x-swgg-descriptionLineList":["# [Organizations](https://developer.github.com/v3/orgs/)","","**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.jean-grey-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","# [Blocking Organization Users](https://developer.github.com/v3/orgs/blocking/)","","**Note:** The User Blocking API on GitHub is currently available for developers to preview. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.giant-sentry-fist-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","The token used to authenticate the call must have the ```admin:org``` scope in order to make any blocking calls for an organization. Otherwise, the response returns ```HTTP 404```.","","# [Organization Members](https://developer.github.com/v3/orgs/members/)","","no description","","# [Organization Outside Collaborators](https://developer.github.com/v3/orgs/outside_collaborators/)","","no description","","# [Organization Webhooks](https://developer.github.com/v3/orgs/hooks/)","","Organization webhooks allow you to receive HTTP ```POST``` payloads whenever certain events happen within the organization. Subscribing to these events makes it possible to build integrations that react to actions on GitHub.com. For more information on actions you can subscribe to, check out our [Events documentation](https://developer.github.com/webhooks/#events)."]},"github-projects":{"description":"# [Projects](https://developer.github.com/v3/projects/)\n\n**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.jean-grey-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nThe Projects API is currently available for developers to preview.   During the preview period, the API may change without advance notice. Please   see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details.\n\nTo access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.inertia-preview+json\n```\n\n# [Project cards](https://developer.github.com/v3/projects/cards/)\n\nThe Projects API is currently available for developers to preview.   During the preview period, the API may change without advance notice. Please   see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details.\n\nTo access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.inertia-preview+json\n```\n\n# [Project columns](https://developer.github.com/v3/projects/columns/)\n\nThe Projects API is currently available for developers to preview.   During the preview period, the API may change without advance notice. Please   see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details.\n\nTo access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.inertia-preview+json\n```","x-swgg-descriptionLineList":["# [Projects](https://developer.github.com/v3/projects/)","","**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.jean-grey-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","The Projects API is currently available for developers to preview.   During the preview period, the API may change without advance notice. Please   see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details.","","To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.inertia-preview+json","```","","# [Project cards](https://developer.github.com/v3/projects/cards/)","","The Projects API is currently available for developers to preview.   During the preview period, the API may change without advance notice. Please   see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details.","","To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.inertia-preview+json","```","","# [Project columns](https://developer.github.com/v3/projects/columns/)","","The Projects API is currently available for developers to preview.   During the preview period, the API may change without advance notice. Please   see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details.","","To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.inertia-preview+json","```"]},"github-pulls":{"description":"# [Pull Requests](https://developer.github.com/v3/pulls/)\n\nThe Pull Request API allows you to list, view, edit, create, and even merge pull requests. Comments on pull requests can be managed via the [Issue Comments API](https://developer.github.com/v3/issues/comments/).\n\nPull Requests use [these custom media types](https://developer.github.com/v3/pulls/#custom-media-types). You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).\n\n**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.jean-grey-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nCustom media types\n\nThese are the supported media types for pull requests. You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).\n```\napplication/vnd.github.VERSION.raw+json\napplication/vnd.github.VERSION.text+json\napplication/vnd.github.VERSION.html+json\napplication/vnd.github.VERSION.full+json\napplication/vnd.github.VERSION.diff\napplication/vnd.github.VERSION.patch\n```\n\n# [Review Comments](https://developer.github.com/v3/pulls/comments/)\n\nPull Request review comments are comments on a portion of the unified diff.  These are separate from Commit Comments (which are applied directly to a commit, outside of the Pull Request view), and Issue Comments (which do not reference a portion of the unified diff).\n\nPull Request review comments use [these custom media types](https://developer.github.com/v3/pulls/comments/#custom-media-types). You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).\n\nCustom media types\n\nThese are the supported media types for pull request review comments. You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).\n```\napplication/vnd.github.VERSION.raw+json\napplication/vnd.github.VERSION.text+json\napplication/vnd.github.VERSION.html+json\napplication/vnd.github.VERSION.full+json\n```\n\n# [Review Requests](https://developer.github.com/v3/pulls/review_requests/)\n\nPull request authors and repository owners and collaborators can request a pull request review from anyone with write access to the repository. Each requested reviewer will receive a notification asking them to review the pull request.\n\n# [Reviews](https://developer.github.com/v3/pulls/reviews/)\n\nPull Request Reviews are groups of Pull Request Review Comments on the Pull Request, grouped together with a state and optional body comment.","x-swgg-descriptionLineList":["# [Pull Requests](https://developer.github.com/v3/pulls/)","","The Pull Request API allows you to list, view, edit, create, and even merge pull requests. Comments on pull requests can be managed via the [Issue Comments API](https://developer.github.com/v3/issues/comments/).","","Pull Requests use [these custom media types](https://developer.github.com/v3/pulls/#custom-media-types). You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).","","**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.jean-grey-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","Custom media types","","These are the supported media types for pull requests. You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).","```","application/vnd.github.VERSION.raw+json","application/vnd.github.VERSION.text+json","application/vnd.github.VERSION.html+json","application/vnd.github.VERSION.full+json","application/vnd.github.VERSION.diff","application/vnd.github.VERSION.patch","```","","# [Review Comments](https://developer.github.com/v3/pulls/comments/)","","Pull Request review comments are comments on a portion of the unified diff.  These are separate from Commit Comments (which are applied directly to a commit, outside of the Pull Request view), and Issue Comments (which do not reference a portion of the unified diff).","","Pull Request review comments use [these custom media types](https://developer.github.com/v3/pulls/comments/#custom-media-types). You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).","","Custom media types","","These are the supported media types for pull request review comments. You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).","```","application/vnd.github.VERSION.raw+json","application/vnd.github.VERSION.text+json","application/vnd.github.VERSION.html+json","application/vnd.github.VERSION.full+json","```","","# [Review Requests](https://developer.github.com/v3/pulls/review_requests/)","","Pull request authors and repository owners and collaborators can request a pull request review from anyone with write access to the repository. Each requested reviewer will receive a notification asking them to review the pull request.","","# [Reviews](https://developer.github.com/v3/pulls/reviews/)","","Pull Request Reviews are groups of Pull Request Review Comments on the Pull Request, grouped together with a state and optional body comment."]},"github-reactions":{"description":"# [Reactions](https://developer.github.com/v3/reactions/)\n\n**Note:** APIs for managing reactions are currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.squirrel-girl-preview+json\n```\n\n**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.jean-grey-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","x-swgg-descriptionLineList":["# [Reactions](https://developer.github.com/v3/reactions/)","","**Note:** APIs for managing reactions are currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.squirrel-girl-preview+json","```","","**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.jean-grey-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact)."]},"github-repos":{"description":"# [Repositories](https://developer.github.com/v3/repos/)\n\n**Note:** The ```topics``` property for repositories on GitHub is currently available for developers to preview. To view the ```topics``` property in calls that return repository results, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.mercy-preview+json\n```\n\n**Note:** The [Repository Transfer API](https://developer.github.com/changes/2017-11-09-repository-transfer-api-preview) is currently available for developers to preview. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.nightshade-preview+json\n```\n\n**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.jean-grey-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\n# [Branches](https://developer.github.com/v3/repos/branches/)\n\nno description\n\n# [Collaborators](https://developer.github.com/v3/repos/collaborators/)\n\nno description\n\n# [Comments](https://developer.github.com/v3/repos/comments/)\n\nCustom media types\n\nThese are the supported media types for commit comments. You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).\n```\napplication/vnd.github-commitcomment.raw+json\napplication/vnd.github-commitcomment.text+json\napplication/vnd.github-commitcomment.html+json\napplication/vnd.github-commitcomment.full+json\n```\n\n# [Commits](https://developer.github.com/v3/repos/commits/)\n\nThe Repo Commits API supports listing, viewing, and comparing commits in a repository.\n\n# [Community](https://developer.github.com/v3/repos/community/)\n\nWe're currently offering a preview of the Community Profile API (also known as community health).\n\nTo access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.black-panther-preview+json\n```\n\n# [Contents](https://developer.github.com/v3/repos/contents/)\n\nThese API methods let you retrieve the contents of files within a repository as Base64 encoded content. See [media types](https://developer.github.com/v3/repos/contents/#custom-media-types) for requesting the raw format or rendered HTML (when supported).\n\nCustom media types\n\n[READMEs](https://developer.github.com/v3/repos/contents/#get-the-readme), [files](https://developer.github.com/v3/repos/contents/#get-contents), and [symlinks](https://developer.github.com/v3/repos/contents/#get-contents) support the following custom media types:\n```\napplication/vnd.github.VERSION.raw\napplication/vnd.github.VERSION.html\n```\n\n# [Deploy Keys](https://developer.github.com/v3/repos/keys/)\n\nno description\n\n# [Deployments](https://developer.github.com/v3/repos/deployments/)\n\nDeployments are a request for a specific ref (branch, SHA, tag) to be deployed. GitHub then dispatches deployment events that external services can listen for and act on. This enables developers and organizations to build loosely-coupled tooling around deployments, without having to worry about implementation details of delivering different types of applications (e.g., web, native).\n\nDeployment statuses allow external services to mark deployments with an ```error```, ```failure```, ```pending```, or ```success``` state, which can then be consumed by any system listening for ```deployment_status``` events.\n\nDeployment statuses can also include an optional ```description``` and ```target_url```, and we highly recommend providing them as they make deployment statuses much more useful. The ```target_url``` would be the full URL to the deployment output, and the ```description``` would be the high level summary of what happened with the deployment.\n\nDeployments and deployment statuses both have associated [repository events](https://developer.github.com/v3/activity/events/types/#deploymentevent) when they're created. This allows webhooks and 3rd party integrations to respond to deployment requests as well as update the status of a deployment as progress is made.\n\nBelow is a simple sequence diagram for how these interactions would work.\n```\n+---------+             +--------+            +-----------+        +-------------+\n| Tooling |             | GitHub |            | 3rd Party |        | Your Server |\n+---------+             +--------+            +-----------+        +-------------+\n     |                      |                       |                     |\n     |  Create Deployment   |                       |                     |\n     |---------------------&gt;|                       |                     |\n     |                      |                       |                     |\n     |  Deployment Created  |                       |                     |\n     |&lt;---------------------|                       |                     |\n     |                      |                       |                     |\n     |                      |   Deployment Event    |                     |\n     |                      |----------------------&gt;|                     |\n     |                      |                       |     SSH+Deploys     |\n     |                      |                       |--------------------&gt;|\n     |                      |                       |                     |\n     |                      |   Deployment Status   |                     |\n     |                      |&lt;----------------------|                     |\n     |                      |                       |                     |\n     |                      |                       |   Deploy Completed  |\n     |                      |                       |&lt;--------------------|\n     |                      |                       |                     |\n     |                      |   Deployment Status   |                     |\n     |                      |&lt;----------------------|                     |\n     |                      |                       |                     |\n```\n\n\nKeep in mind that GitHub is never actually accessing your servers. It's up to your 3rd party integration to interact with deployment events.  This allows for [GitHub integrations](https://github.com/integrations) as well as running your own systems depending on your use case. Multiple systems can listen for deployment events, and it's up to each of those systems to decide whether or not they're responsible for pushing the code out to your servers, building native code, etc.\n\nNote that the ```repo_deployment``` [OAuth scope](https://developer.github.com/apps/building-integrations/setting-up-and-registering-oauth-apps/about-scopes-for-oauth-apps/) grants targeted access to deployments and deployment statuses **without** granting access to repository code, while the ```repo``` scope grants permission to code as well.\n\n**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.jean-grey-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\n# [Downloads](https://developer.github.com/v3/repos/downloads/)\n\nThe Downloads API (described below) was [deprecated on December 11, 2012](https://github.com/blog/1302-goodbye-uploads). It will be removed at a future date.\n\nWe recommend using [Releases](https://developer.github.com/v3/repos/releases/) instead.\n\nThe downloads API is for package downloads only. If you want to get source tarballs you should use [this](https://developer.github.com/v3/repos/contents/#get-archive-link) instead.\n\n# [Forks](https://developer.github.com/v3/repos/forks/)\n\nno description\n\n# [Merging](https://developer.github.com/v3/repos/merging/)\n\nThe Repo Merging API supports merging branches in a repository. This accomplishes essentially the same thing as merging one branch into another in a local repository and then pushing to GitHub. The benefit is that the merge is done on the server side and a local repository is not needed. This makes it more appropriate for automation and other tools where maintaining local repositories would be cumbersome and inefficient.\n\nThe authenticated user will be the author of any merges done through this endpoint.\n\n# [Pages](https://developer.github.com/v3/repos/pages/)\n\nThe GitHub Pages API retrieves information about your GitHub Pages configuration, and the statuses of your builds. Information about the site and the builds can only be accessed by authenticated owners, even though the websites are public.\n\nIn JSON responses, ```status``` can be one of:\n-  ```null```, which means the site has yet to be built\n-  ```queued```, which means the build has been requested but not yet begun\n-  ```building```, which means the build is in progress\n-  ```built```, which means the site has been built\n-  ```errored```, which indicates an error occurred during the build\n\n# [Releases](https://developer.github.com/v3/repos/releases/)\n\n**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.jean-grey-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\n# [Repository Invitations](https://developer.github.com/v3/repos/invitations/)\n\nThe Repository Invitations API allows users or external services to invite other users to collaborate on a repo. The invited users (or external services on behalf of invited users) can choose to accept or decline the invitations.\n\nNote that the ```repo:invite``` [OAuth scope](https://developer.github.com/apps/building-integrations/setting-up-and-registering-oauth-apps/about-scopes-for-oauth-apps/) grants targeted access to invitations **without** also granting access to repository code, while the ```repo``` scope grants permission to code as well as invitations.\n\n# [Repository Webhooks](https://developer.github.com/v3/repos/hooks/)\n\nThe Repository Webhooks API allows repository admins to manage the post-receive hooks for a repository.  Webhooks can be managed using the JSON HTTP API, or the [PubSubHubbub API](https://developer.github.com/v3/repos/hooks/#pubsubhubbub).\n\nIf you would like to set up a single webhook to receive events from all of your organization's repositories, check out our [API documentation for Organization Webhooks](https://developer.github.com/v3/orgs/hooks/).\n\n# [Statistics](https://developer.github.com/v3/repos/statistics/)\n\nThe Repository Statistics API allows you to fetch the data that GitHub uses for visualizing different types of repository activity.\n\n####  A word about caching\n\nComputing repository statistics is an expensive operation, so we try to return cached data whenever possible.  If the data hasn't been cached when you query a repository's statistics, you'll receive a ```202``` response; a background job is also fired to start compiling these statistics. Give the job a few moments to complete, and then submit the request again. If the job has completed, that request will receive a ```200``` response with the statistics in the response body.\n\nRepository statistics are cached by the SHA of the repository's default branch, which is usually master; pushing to the default branch resets the statistics cache.\n\n####  Statistics exclude some types of commits\n\nThe statistics exposed by the API match the statistics shown by [different repository graphs](https://help.github.com/articles/about-repository-graphs/).\n\nTo summarize:\n- All statistics exclude merge commits.\n- Contributor statistics also exclude empty commits.\n\n# [Statuses](https://developer.github.com/v3/repos/statuses/)\n\nThe status API allows external services to mark commits with an ```error```, ```failure```, ```pending```, or ```success``` state, which is then reflected in pull requests involving those commits.\n\nStatuses can also include an optional ```description``` and ```target_url```, and we highly recommend providing them as they make statuses much more useful in the GitHub UI.\n\nAs an example, one common use is for continuous integration services to mark commits as passing or failing builds using status.  The ```target_url``` would be the full URL to the build output, and the ```description``` would be the high level summary of what happened with the build.\n\nStatuses can include a ```context``` to indicate what service is providing that status. For example, you may have your continuous integration service push statuses with a context of ```ci```, and a security audit tool push statuses with a context of ```security```.  You can then use the [combined status endpoint](https://developer.github.com/v3/repos/statuses/#get-the-combined-status-for-a-specific-ref) to retrieve the whole status for a commit.\n\nNote that the ```repo:status``` [OAuth scope](https://developer.github.com/apps/building-integrations/setting-up-and-registering-oauth-apps/about-scopes-for-oauth-apps/) grants targeted access to statuses **without** also granting access to repository code, while the ```repo``` scope grants permission to code as well as statuses.\n\n**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.jean-grey-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\n# [Traffic](https://developer.github.com/v3/repos/traffic/)\n\nFor repositories that you have push access to, the traffic API provides access to the information provided in the [graphs section](https://help.github.com/articles/about-repository-graphs/#traffic).","x-swgg-descriptionLineList":["# [Repositories](https://developer.github.com/v3/repos/)","","**Note:** The ```topics``` property for repositories on GitHub is currently available for developers to preview. To view the ```topics``` property in calls that return repository results, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.mercy-preview+json","```","","**Note:** The [Repository Transfer API](https://developer.github.com/changes/2017-11-09-repository-transfer-api-preview) is currently available for developers to preview. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.nightshade-preview+json","```","","**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.jean-grey-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","# [Branches](https://developer.github.com/v3/repos/branches/)","","no description","","# [Collaborators](https://developer.github.com/v3/repos/collaborators/)","","no description","","# [Comments](https://developer.github.com/v3/repos/comments/)","","Custom media types","","These are the supported media types for commit comments. You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).","```","application/vnd.github-commitcomment.raw+json","application/vnd.github-commitcomment.text+json","application/vnd.github-commitcomment.html+json","application/vnd.github-commitcomment.full+json","```","","# [Commits](https://developer.github.com/v3/repos/commits/)","","The Repo Commits API supports listing, viewing, and comparing commits in a repository.","","# [Community](https://developer.github.com/v3/repos/community/)","","We're currently offering a preview of the Community Profile API (also known as community health).","","To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.black-panther-preview+json","```","","# [Contents](https://developer.github.com/v3/repos/contents/)","","These API methods let you retrieve the contents of files within a repository as Base64 encoded content. See [media types](https://developer.github.com/v3/repos/contents/#custom-media-types) for requesting the raw format or rendered HTML (when supported).","","Custom media types","","[READMEs](https://developer.github.com/v3/repos/contents/#get-the-readme), [files](https://developer.github.com/v3/repos/contents/#get-contents), and [symlinks](https://developer.github.com/v3/repos/contents/#get-contents) support the following custom media types:","```","application/vnd.github.VERSION.raw","application/vnd.github.VERSION.html","```","","# [Deploy Keys](https://developer.github.com/v3/repos/keys/)","","no description","","# [Deployments](https://developer.github.com/v3/repos/deployments/)","","Deployments are a request for a specific ref (branch, SHA, tag) to be deployed. GitHub then dispatches deployment events that external services can listen for and act on. This enables developers and organizations to build loosely-coupled tooling around deployments, without having to worry about implementation details of delivering different types of applications (e.g., web, native).","","Deployment statuses allow external services to mark deployments with an ```error```, ```failure```, ```pending```, or ```success``` state, which can then be consumed by any system listening for ```deployment_status``` events.","","Deployment statuses can also include an optional ```description``` and ```target_url```, and we highly recommend providing them as they make deployment statuses much more useful. The ```target_url``` would be the full URL to the deployment output, and the ```description``` would be the high level summary of what happened with the deployment.","","Deployments and deployment statuses both have associated [repository events](https://developer.github.com/v3/activity/events/types/#deploymentevent) when they're created. This allows webhooks and 3rd party integrations to respond to deployment requests as well as update the status of a deployment as progress is made.","","Below is a simple sequence diagram for how these interactions would work.","```","+---------+             +--------+            +-----------+        +-------------+","| Tooling |             | GitHub |            | 3rd Party |        | Your Server |","+---------+             +--------+            +-----------+        +-------------+","     |                      |                       |                     |","     |  Create Deployment   |                       |                     |","     |---------------------&gt;|                       |                     |","     |                      |                       |                     |","     |  Deployment Created  |                       |                     |","     |&lt;---------------------|                       |                     |","     |                      |                       |                     |","     |                      |   Deployment Event    |                     |","     |                      |----------------------&gt;|                     |","     |                      |                       |     SSH+Deploys     |","     |                      |                       |--------------------&gt;|","     |                      |                       |                     |","     |                      |   Deployment Status   |                     |","     |                      |&lt;----------------------|                     |","     |                      |                       |                     |","     |                      |                       |   Deploy Completed  |","     |                      |                       |&lt;--------------------|","     |                      |                       |                     |","     |                      |   Deployment Status   |                     |","     |                      |&lt;----------------------|                     |","     |                      |                       |                     |","```","","","Keep in mind that GitHub is never actually accessing your servers. It's up to your 3rd party integration to interact with deployment events.  This allows for [GitHub integrations](https://github.com/integrations) as well as running your own systems depending on your use case. Multiple systems can listen for deployment events, and it's up to each of those systems to decide whether or not they're responsible for pushing the code out to your servers, building native code, etc.","","Note that the ```repo_deployment``` [OAuth scope](https://developer.github.com/apps/building-integrations/setting-up-and-registering-oauth-apps/about-scopes-for-oauth-apps/) grants targeted access to deployments and deployment statuses **without** granting access to repository code, while the ```repo``` scope grants permission to code as well.","","**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.jean-grey-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","# [Downloads](https://developer.github.com/v3/repos/downloads/)","","The Downloads API (described below) was [deprecated on December 11, 2012](https://github.com/blog/1302-goodbye-uploads). It will be removed at a future date.","","We recommend using [Releases](https://developer.github.com/v3/repos/releases/) instead.","","The downloads API is for package downloads only. If you want to get source tarballs you should use [this](https://developer.github.com/v3/repos/contents/#get-archive-link) instead.","","# [Forks](https://developer.github.com/v3/repos/forks/)","","no description","","# [Merging](https://developer.github.com/v3/repos/merging/)","","The Repo Merging API supports merging branches in a repository. This accomplishes essentially the same thing as merging one branch into another in a local repository and then pushing to GitHub. The benefit is that the merge is done on the server side and a local repository is not needed. This makes it more appropriate for automation and other tools where maintaining local repositories would be cumbersome and inefficient.","","The authenticated user will be the author of any merges done through this endpoint.","","# [Pages](https://developer.github.com/v3/repos/pages/)","","The GitHub Pages API retrieves information about your GitHub Pages configuration, and the statuses of your builds. Information about the site and the builds can only be accessed by authenticated owners, even though the websites are public.","","In JSON responses, ```status``` can be one of:","-  ```null```, which means the site has yet to be built","-  ```queued```, which means the build has been requested but not yet begun","-  ```building```, which means the build is in progress","-  ```built```, which means the site has been built","-  ```errored```, which indicates an error occurred during the build","","# [Releases](https://developer.github.com/v3/repos/releases/)","","**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.jean-grey-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","# [Repository Invitations](https://developer.github.com/v3/repos/invitations/)","","The Repository Invitations API allows users or external services to invite other users to collaborate on a repo. The invited users (or external services on behalf of invited users) can choose to accept or decline the invitations.","","Note that the ```repo:invite``` [OAuth scope](https://developer.github.com/apps/building-integrations/setting-up-and-registering-oauth-apps/about-scopes-for-oauth-apps/) grants targeted access to invitations **without** also granting access to repository code, while the ```repo``` scope grants permission to code as well as invitations.","","# [Repository Webhooks](https://developer.github.com/v3/repos/hooks/)","","The Repository Webhooks API allows repository admins to manage the post-receive hooks for a repository.  Webhooks can be managed using the JSON HTTP API, or the [PubSubHubbub API](https://developer.github.com/v3/repos/hooks/#pubsubhubbub).","","If you would like to set up a single webhook to receive events from all of your organization's repositories, check out our [API documentation for Organization Webhooks](https://developer.github.com/v3/orgs/hooks/).","","# [Statistics](https://developer.github.com/v3/repos/statistics/)","","The Repository Statistics API allows you to fetch the data that GitHub uses for visualizing different types of repository activity.","","####  A word about caching","","Computing repository statistics is an expensive operation, so we try to return cached data whenever possible.  If the data hasn't been cached when you query a repository's statistics, you'll receive a ```202``` response; a background job is also fired to start compiling these statistics. Give the job a few moments to complete, and then submit the request again. If the job has completed, that request will receive a ```200``` response with the statistics in the response body.","","Repository statistics are cached by the SHA of the repository's default branch, which is usually master; pushing to the default branch resets the statistics cache.","","####  Statistics exclude some types of commits","","The statistics exposed by the API match the statistics shown by [different repository graphs](https://help.github.com/articles/about-repository-graphs/).","","To summarize:","- All statistics exclude merge commits.","- Contributor statistics also exclude empty commits.","","# [Statuses](https://developer.github.com/v3/repos/statuses/)","","The status API allows external services to mark commits with an ```error```, ```failure```, ```pending```, or ```success``` state, which is then reflected in pull requests involving those commits.","","Statuses can also include an optional ```description``` and ```target_url```, and we highly recommend providing them as they make statuses much more useful in the GitHub UI.","","As an example, one common use is for continuous integration services to mark commits as passing or failing builds using status.  The ```target_url``` would be the full URL to the build output, and the ```description``` would be the high level summary of what happened with the build.","","Statuses can include a ```context``` to indicate what service is providing that status. For example, you may have your continuous integration service push statuses with a context of ```ci```, and a security audit tool push statuses with a context of ```security```.  You can then use the [combined status endpoint](https://developer.github.com/v3/repos/statuses/#get-the-combined-status-for-a-specific-ref) to retrieve the whole status for a commit.","","Note that the ```repo:status``` [OAuth scope](https://developer.github.com/apps/building-integrations/setting-up-and-registering-oauth-apps/about-scopes-for-oauth-apps/) grants targeted access to statuses **without** also granting access to repository code, while the ```repo``` scope grants permission to code as well as statuses.","","**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.jean-grey-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","# [Traffic](https://developer.github.com/v3/repos/traffic/)","","For repositories that you have push access to, the traffic API provides access to the information provided in the [graphs section](https://help.github.com/articles/about-repository-graphs/#traffic)."]},"github-scim":{"description":"# [SCIM](https://developer.github.com/v3/scim/)\n\nno description","x-swgg-descriptionLineList":["# [SCIM](https://developer.github.com/v3/scim/)","","no description"]},"github-search":{"description":"# [Search](https://developer.github.com/v3/search/)\n\n**Note:** The ```topics``` property for repositories on GitHub is currently available for developers to preview. To view the ```topics``` property in calls that return repository results, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.mercy-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\n####  About the search API\n\nThe Search API is optimized to help you find the specific item you're looking for (e.g., a specific user, a specific file in a repository, etc.). Think of it the way you think of performing a search on Google. It's designed to help you find the one result you're looking for (or maybe the few results you're looking for). Just like searching on Google, you sometimes want to see a few pages of search results so that you can find the item that best meets your needs. To satisfy that need, the GitHub Search API provides **up to 1,000 results for each search**.\n\n####  Ranking search results\n\nUnless another sort option is provided as a query parameter, results are sorted by best match, as indicated by the ```score``` field for each item returned. This is a computed value representing the relevance of an item relative to the other items in the result set. Multiple factors are combined to boost the most relevant item to the top of the result list.\n\n####  Rate limit\n\nThe Search API has a custom rate limit. For requests using [Basic Authentication](https://developer.github.com/v3/#authentication), [OAuth](https://developer.github.com/v3/#authentication), or [client ID and secret](https://developer.github.com/v3/#increasing-the-unauthenticated-rate-limit-for-oauth-applications), you can make up to 30 requests per minute. For unauthenticated requests, the rate limit allows you to make up to 10 requests per minute.\n\nSee the [rate limit documentation](https://developer.github.com/v3/#rate-limiting) for details on determining your current rate limit status.\n\n####  Timeouts and incomplete results\n\nTo keep the Search API fast for everyone, we limit how long any individual query can run. For queries that [exceed the time limit](https://developer.github.com/changes/2014-04-07-understanding-search-results-and-potential-timeouts/), the API returns the matches that were already found prior to the timeout, and the response has the ```incomplete_results``` property set to ```true```.\n\nReaching a timeout does not necessarily mean that search results are incomplete. More results might have been found, but also might not.\n\n# [Legacy Search](https://developer.github.com/v3/search/legacy/)\n\nThis is a listing of the Legacy Search API features from API v2 that have been ported to API v3. There should be no changes, other than the new URL and JSON output format.\n\n####  Legacy Search API is Deprecated\n\nThe Legacy Search API (described below) is deprecated. We recommend using the [v3 Search API](https://developer.github.com/v3/search/) instead. It contains new endpoints and much more functionality.","x-swgg-descriptionLineList":["# [Search](https://developer.github.com/v3/search/)","","**Note:** The ```topics``` property for repositories on GitHub is currently available for developers to preview. To view the ```topics``` property in calls that return repository results, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.mercy-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","####  About the search API","","The Search API is optimized to help you find the specific item you're looking for (e.g., a specific user, a specific file in a repository, etc.). Think of it the way you think of performing a search on Google. It's designed to help you find the one result you're looking for (or maybe the few results you're looking for). Just like searching on Google, you sometimes want to see a few pages of search results so that you can find the item that best meets your needs. To satisfy that need, the GitHub Search API provides **up to 1,000 results for each search**.","","####  Ranking search results","","Unless another sort option is provided as a query parameter, results are sorted by best match, as indicated by the ```score``` field for each item returned. This is a computed value representing the relevance of an item relative to the other items in the result set. Multiple factors are combined to boost the most relevant item to the top of the result list.","","####  Rate limit","","The Search API has a custom rate limit. For requests using [Basic Authentication](https://developer.github.com/v3/#authentication), [OAuth](https://developer.github.com/v3/#authentication), or [client ID and secret](https://developer.github.com/v3/#increasing-the-unauthenticated-rate-limit-for-oauth-applications), you can make up to 30 requests per minute. For unauthenticated requests, the rate limit allows you to make up to 10 requests per minute.","","See the [rate limit documentation](https://developer.github.com/v3/#rate-limiting) for details on determining your current rate limit status.","","####  Timeouts and incomplete results","","To keep the Search API fast for everyone, we limit how long any individual query can run. For queries that [exceed the time limit](https://developer.github.com/changes/2014-04-07-understanding-search-results-and-potential-timeouts/), the API returns the matches that were already found prior to the timeout, and the response has the ```incomplete_results``` property set to ```true```.","","Reaching a timeout does not necessarily mean that search results are incomplete. More results might have been found, but also might not.","","# [Legacy Search](https://developer.github.com/v3/search/legacy/)","","This is a listing of the Legacy Search API features from API v2 that have been ported to API v3. There should be no changes, other than the new URL and JSON output format.","","####  Legacy Search API is Deprecated","","The Legacy Search API (described below) is deprecated. We recommend using the [v3 Search API](https://developer.github.com/v3/search/) instead. It contains new endpoints and much more functionality."]},"github-teams":{"description":"# [Organization Teams](https://developer.github.com/v3/teams/)\n\nThis API is only available to authenticated members of the team's [organization](https://developer.github.com/v3/orgs). OAuth access tokens require the ```read:org``` [scope](https://developer.github.com/apps/building-integrations/setting-up-and-registering-oauth-apps/about-scopes-for-oauth-apps/).\n\n**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.jean-grey-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\n# [Team Discussion Comments](https://developer.github.com/v3/teams/discussion_comments/)\n\nThe team discussion comments API allows you to get, create, edit, and delete discussion comments on a [team discussion](https://developer.github.com/v3/teams/discussions) post. Any member of the team's [organization](https://developer.github.com/v3/orgs) can create and read comments on a public discussion. For more details, see \"[About team discussions](https://help.github.com/articles/about-team-discussions/).\" This API is only available to authenticated members of the team's organization.\n\n# [Team Discussions](https://developer.github.com/v3/teams/discussions/)\n\nThe team discussions API allows you to get, create, edit, and delete discussion posts on a team's page. You can use team discussions to have conversations that are not specific to a repository or project. Any member of the team's [organization](https://developer.github.com/v3/orgs) can create and read public discussion posts. For more details, see \"[About team discussions](https://help.github.com/articles/about-team-discussions/).\" To learn more about commenting on a discussion post, see the [team discussion comments API](https://developer.github.com/v3/teams/discussion_comments). This API is only available to authenticated members of the team's organization.\n\n# [Team Members](https://developer.github.com/v3/teams/members/)\n\nThis API is only available to authenticated members of the team's organization. OAuth access tokens require the ```read:org``` [scope](https://developer.github.com/apps/building-integrations/setting-up-and-registering-oauth-apps/about-scopes-for-oauth-apps/).\n\n**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.jean-grey-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","x-swgg-descriptionLineList":["# [Organization Teams](https://developer.github.com/v3/teams/)","","This API is only available to authenticated members of the team's [organization](https://developer.github.com/v3/orgs). OAuth access tokens require the ```read:org``` [scope](https://developer.github.com/apps/building-integrations/setting-up-and-registering-oauth-apps/about-scopes-for-oauth-apps/).","","**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.jean-grey-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","# [Team Discussion Comments](https://developer.github.com/v3/teams/discussion_comments/)","","The team discussion comments API allows you to get, create, edit, and delete discussion comments on a [team discussion](https://developer.github.com/v3/teams/discussions) post. Any member of the team's [organization](https://developer.github.com/v3/orgs) can create and read comments on a public discussion. For more details, see \"[About team discussions](https://help.github.com/articles/about-team-discussions/).\" This API is only available to authenticated members of the team's organization.","","# [Team Discussions](https://developer.github.com/v3/teams/discussions/)","","The team discussions API allows you to get, create, edit, and delete discussion posts on a team's page. You can use team discussions to have conversations that are not specific to a repository or project. Any member of the team's [organization](https://developer.github.com/v3/orgs) can create and read public discussion posts. For more details, see \"[About team discussions](https://help.github.com/articles/about-team-discussions/).\" To learn more about commenting on a discussion post, see the [team discussion comments API](https://developer.github.com/v3/teams/discussion_comments). This API is only available to authenticated members of the team's organization.","","# [Team Members](https://developer.github.com/v3/teams/members/)","","This API is only available to authenticated members of the team's organization. OAuth access tokens require the ```read:org``` [scope](https://developer.github.com/apps/building-integrations/setting-up-and-registering-oauth-apps/about-scopes-for-oauth-apps/).","","**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.jean-grey-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact)."]},"github-users":{"description":"# [Users](https://developer.github.com/v3/users/)\n\nMany of the resources on the users API provide a shortcut for getting information about the currently authenticated user. If a request URL does not include a ```:username``` parameter then the response will be for the logged in user (and you must pass [authentication information](https://developer.github.com/v3/#authentication) with your request). Additional private information, such as whether a user has two-factor authentication enabled, is included when authenticated through basic auth or OAuth with the ```user``` scope.\n\n**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.jean-grey-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\n# [Block Another User](https://developer.github.com/v3/users/blocking/)\n\n**Note:** The User Blocking API on GitHub is currently available for developers to preview. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:\n```\napplication/vnd.github.giant-sentry-fist-preview+json\n```\n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\n# [User Emails](https://developer.github.com/v3/users/emails/)\n\nManagement of email addresses via the API requires that you are authenticated through basic auth or OAuth with the user scope.\n\n# [User Followers](https://developer.github.com/v3/users/followers/)\n\nno description\n\n# [User GPG Keys](https://developer.github.com/v3/users/gpg_keys/)\n\nThe data returned in the ```public_key``` response field is not a GPG formatted key. When a user uploads a GPG key, it is parsed and the cryptographic public key is extracted and stored. This cryptographic key is what is returned by the APIs on this page. This key is not suitable to be used directly by programs like GPG.\n\n# [User Public Keys](https://developer.github.com/v3/users/keys/)\n\nno description","x-swgg-descriptionLineList":["# [Users](https://developer.github.com/v3/users/)","","Many of the resources on the users API provide a shortcut for getting information about the currently authenticated user. If a request URL does not include a ```:username``` parameter then the response will be for the logged in user (and you must pass [authentication information](https://developer.github.com/v3/#authentication) with your request). Additional private information, such as whether a user has two-factor authentication enabled, is included when authenticated through basic auth or OAuth with the ```user``` scope.","","**Note:** To help with migrating from our REST API v3 to GraphQL API v4, we're introducing a preview period to include the [GraphQL ```node_id```](https://developer.github.com/v3/#graphql-global-relay-ids) in the response for many REST API v3 resources. See the [blog post](https://developer.github.com/changes/2017-12-19-graphql-node-id) for full details. To access ```node_id``` during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.jean-grey-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","# [Block Another User](https://developer.github.com/v3/users/blocking/)","","**Note:** The User Blocking API on GitHub is currently available for developers to preview. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the ```Accept``` header:","```","application/vnd.github.giant-sentry-fist-preview+json","```","","**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).","","# [User Emails](https://developer.github.com/v3/users/emails/)","","Management of email addresses via the API requires that you are authenticated through basic auth or OAuth with the user scope.","","# [User Followers](https://developer.github.com/v3/users/followers/)","","no description","","# [User GPG Keys](https://developer.github.com/v3/users/gpg_keys/)","","The data returned in the ```public_key``` response field is not a GPG formatted key. When a user uploads a GPG key, it is parsed and the cryptographic public key is extracted and stored. This cryptographic key is what is returned by the APIs on this page. This key is not suitable to be used directly by programs like GPG.","","# [User Public Keys](https://developer.github.com/v3/users/keys/)","","no description"]}}}